// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.0
// source: google.proto

package pkg

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Both sha1 and sha256 are encoded with base64 with URL and Filename Safe Alphabet with padding removed
type AndroidAppDeliveryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadSize                  *int64               `protobuf:"varint,1,opt,name=downloadSize" json:"downloadSize,omitempty"`
	Sha1                          *string              `protobuf:"bytes,2,opt,name=sha1" json:"sha1,omitempty"`
	DownloadUrl                   *string              `protobuf:"bytes,3,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	AdditionalFile                []*AppFileMetadata   `protobuf:"bytes,4,rep,name=additionalFile" json:"additionalFile,omitempty"`
	DownloadAuthCookie            []*HttpCookie        `protobuf:"bytes,5,rep,name=downloadAuthCookie" json:"downloadAuthCookie,omitempty"`
	ForwardLocked                 *bool                `protobuf:"varint,6,opt,name=forwardLocked" json:"forwardLocked,omitempty"`
	RefundTimeout                 *int64               `protobuf:"varint,7,opt,name=refundTimeout" json:"refundTimeout,omitempty"`
	ServerInitiated               *bool                `protobuf:"varint,8,opt,name=serverInitiated" json:"serverInitiated,omitempty"`
	PostInstallRefundWindowMillis *int64               `protobuf:"varint,9,opt,name=postInstallRefundWindowMillis" json:"postInstallRefundWindowMillis,omitempty"`
	ImmediateStartNeeded          *bool                `protobuf:"varint,10,opt,name=immediateStartNeeded" json:"immediateStartNeeded,omitempty"`
	PatchData                     *AndroidAppPatchData `protobuf:"bytes,11,opt,name=patchData" json:"patchData,omitempty"`
	EncryptionParams              *EncryptionParams    `protobuf:"bytes,12,opt,name=encryptionParams" json:"encryptionParams,omitempty"`
	DownloadUrlGzipped            *string              `protobuf:"bytes,13,opt,name=downloadUrlGzipped" json:"downloadUrlGzipped,omitempty"`
	DownloadSizeGzipped           *int64               `protobuf:"varint,14,opt,name=downloadSizeGzipped" json:"downloadSizeGzipped,omitempty"`
	Split                         []*Split             `protobuf:"bytes,15,rep,name=split" json:"split,omitempty"`
	Sha256                        *string              `protobuf:"bytes,19,opt,name=sha256" json:"sha256,omitempty"`
}

func (x *AndroidAppDeliveryData) Reset() {
	*x = AndroidAppDeliveryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidAppDeliveryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidAppDeliveryData) ProtoMessage() {}

func (x *AndroidAppDeliveryData) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidAppDeliveryData.ProtoReflect.Descriptor instead.
func (*AndroidAppDeliveryData) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{0}
}

func (x *AndroidAppDeliveryData) GetDownloadSize() int64 {
	if x != nil && x.DownloadSize != nil {
		return *x.DownloadSize
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetSha1() string {
	if x != nil && x.Sha1 != nil {
		return *x.Sha1
	}
	return ""
}

func (x *AndroidAppDeliveryData) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *AndroidAppDeliveryData) GetAdditionalFile() []*AppFileMetadata {
	if x != nil {
		return x.AdditionalFile
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetDownloadAuthCookie() []*HttpCookie {
	if x != nil {
		return x.DownloadAuthCookie
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetForwardLocked() bool {
	if x != nil && x.ForwardLocked != nil {
		return *x.ForwardLocked
	}
	return false
}

func (x *AndroidAppDeliveryData) GetRefundTimeout() int64 {
	if x != nil && x.RefundTimeout != nil {
		return *x.RefundTimeout
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetServerInitiated() bool {
	if x != nil && x.ServerInitiated != nil {
		return *x.ServerInitiated
	}
	return false
}

func (x *AndroidAppDeliveryData) GetPostInstallRefundWindowMillis() int64 {
	if x != nil && x.PostInstallRefundWindowMillis != nil {
		return *x.PostInstallRefundWindowMillis
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetImmediateStartNeeded() bool {
	if x != nil && x.ImmediateStartNeeded != nil {
		return *x.ImmediateStartNeeded
	}
	return false
}

func (x *AndroidAppDeliveryData) GetPatchData() *AndroidAppPatchData {
	if x != nil {
		return x.PatchData
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetEncryptionParams() *EncryptionParams {
	if x != nil {
		return x.EncryptionParams
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetDownloadUrlGzipped() string {
	if x != nil && x.DownloadUrlGzipped != nil {
		return *x.DownloadUrlGzipped
	}
	return ""
}

func (x *AndroidAppDeliveryData) GetDownloadSizeGzipped() int64 {
	if x != nil && x.DownloadSizeGzipped != nil {
		return *x.DownloadSizeGzipped
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetSplit() []*Split {
	if x != nil {
		return x.Split
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetSha256() string {
	if x != nil && x.Sha256 != nil {
		return *x.Sha256
	}
	return ""
}

type Split struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Size               *int64  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	SizeGzipped        *int64  `protobuf:"varint,3,opt,name=sizeGzipped" json:"sizeGzipped,omitempty"`
	Sha1               *string `protobuf:"bytes,4,opt,name=sha1" json:"sha1,omitempty"`
	DownloadUrl        *string `protobuf:"bytes,5,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	DownloadUrlGzipped *string `protobuf:"bytes,6,opt,name=downloadUrlGzipped" json:"downloadUrlGzipped,omitempty"`
	Sha256             *string `protobuf:"bytes,9,opt,name=sha256" json:"sha256,omitempty"`
}

func (x *Split) Reset() {
	*x = Split{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Split) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Split) ProtoMessage() {}

func (x *Split) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Splits.ProtoReflect.Descriptor instead.
func (*Split) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{1}
}

func (x *Split) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Split) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *Split) GetSizeGzipped() int64 {
	if x != nil && x.SizeGzipped != nil {
		return *x.SizeGzipped
	}
	return 0
}

func (x *Split) GetSha1() string {
	if x != nil && x.Sha1 != nil {
		return *x.Sha1
	}
	return ""
}

func (x *Split) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *Split) GetDownloadUrlGzipped() string {
	if x != nil && x.DownloadUrlGzipped != nil {
		return *x.DownloadUrlGzipped
	}
	return ""
}

func (x *Split) GetSha256() string {
	if x != nil && x.Sha256 != nil {
		return *x.Sha256
	}
	return ""
}

type AndroidAppPatchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseVersionCode *int32  `protobuf:"varint,1,opt,name=baseVersionCode" json:"baseVersionCode,omitempty"`
	BaseSha1        *string `protobuf:"bytes,2,opt,name=baseSha1" json:"baseSha1,omitempty"`
	DownloadUrl     *string `protobuf:"bytes,3,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	PatchFormat     *int32  `protobuf:"varint,4,opt,name=patchFormat" json:"patchFormat,omitempty"`
	MaxPatchSize    *int64  `protobuf:"varint,5,opt,name=maxPatchSize" json:"maxPatchSize,omitempty"`
}

func (x *AndroidAppPatchData) Reset() {
	*x = AndroidAppPatchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidAppPatchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidAppPatchData) ProtoMessage() {}

func (x *AndroidAppPatchData) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidAppPatchData.ProtoReflect.Descriptor instead.
func (*AndroidAppPatchData) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{2}
}

func (x *AndroidAppPatchData) GetBaseVersionCode() int32 {
	if x != nil && x.BaseVersionCode != nil {
		return *x.BaseVersionCode
	}
	return 0
}

func (x *AndroidAppPatchData) GetBaseSha1() string {
	if x != nil && x.BaseSha1 != nil {
		return *x.BaseSha1
	}
	return ""
}

func (x *AndroidAppPatchData) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *AndroidAppPatchData) GetPatchFormat() int32 {
	if x != nil && x.PatchFormat != nil {
		return *x.PatchFormat
	}
	return 0
}

func (x *AndroidAppPatchData) GetMaxPatchSize() int64 {
	if x != nil && x.MaxPatchSize != nil {
		return *x.MaxPatchSize
	}
	return 0
}

type AppFileMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType           *int32  `protobuf:"varint,1,opt,name=fileType" json:"fileType,omitempty"`
	VersionCode        *int32  `protobuf:"varint,2,opt,name=versionCode" json:"versionCode,omitempty"`
	Size               *int64  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	DownloadUrl        *string `protobuf:"bytes,4,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	SizeGzipped        *int64  `protobuf:"varint,6,opt,name=sizeGzipped" json:"sizeGzipped,omitempty"`
	DownloadUrlGzipped *string `protobuf:"bytes,7,opt,name=downloadUrlGzipped" json:"downloadUrlGzipped,omitempty"`
	Sha1               *string `protobuf:"bytes,8,opt,name=sha1" json:"sha1,omitempty"`
}

func (x *AppFileMetadata) Reset() {
	*x = AppFileMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppFileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppFileMetadata) ProtoMessage() {}

func (x *AppFileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppFileMetadata.ProtoReflect.Descriptor instead.
func (*AppFileMetadata) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{3}
}

func (x *AppFileMetadata) GetFileType() int32 {
	if x != nil && x.FileType != nil {
		return *x.FileType
	}
	return 0
}

func (x *AppFileMetadata) GetVersionCode() int32 {
	if x != nil && x.VersionCode != nil {
		return *x.VersionCode
	}
	return 0
}

func (x *AppFileMetadata) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *AppFileMetadata) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *AppFileMetadata) GetSizeGzipped() int64 {
	if x != nil && x.SizeGzipped != nil {
		return *x.SizeGzipped
	}
	return 0
}

func (x *AppFileMetadata) GetDownloadUrlGzipped() string {
	if x != nil && x.DownloadUrlGzipped != nil {
		return *x.DownloadUrlGzipped
	}
	return ""
}

func (x *AppFileMetadata) GetSha1() string {
	if x != nil && x.Sha1 != nil {
		return *x.Sha1
	}
	return ""
}

type EncryptionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       *int32  `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	EncryptionKey *string `protobuf:"bytes,2,opt,name=encryptionKey" json:"encryptionKey,omitempty"`
	HmacKey       *string `protobuf:"bytes,3,opt,name=hmacKey" json:"hmacKey,omitempty"`
}

func (x *EncryptionParams) Reset() {
	*x = EncryptionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionParams) ProtoMessage() {}

func (x *EncryptionParams) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionParams.ProtoReflect.Descriptor instead.
func (*EncryptionParams) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{4}
}

func (x *EncryptionParams) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *EncryptionParams) GetEncryptionKey() string {
	if x != nil && x.EncryptionKey != nil {
		return *x.EncryptionKey
	}
	return ""
}

func (x *EncryptionParams) GetHmacKey() string {
	if x != nil && x.HmacKey != nil {
		return *x.HmacKey
	}
	return ""
}

type HttpCookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *HttpCookie) Reset() {
	*x = HttpCookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpCookie) ProtoMessage() {}

func (x *HttpCookie) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpCookie.ProtoReflect.Descriptor instead.
func (*HttpCookie) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{5}
}

func (x *HttpCookie) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *HttpCookie) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	AddressLine1      *string `protobuf:"bytes,2,opt,name=addressLine1" json:"addressLine1,omitempty"`
	AddressLine2      *string `protobuf:"bytes,3,opt,name=addressLine2" json:"addressLine2,omitempty"`
	City              *string `protobuf:"bytes,4,opt,name=city" json:"city,omitempty"`
	State             *string `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	PostalCode        *string `protobuf:"bytes,6,opt,name=postalCode" json:"postalCode,omitempty"`
	PostalCountry     *string `protobuf:"bytes,7,opt,name=postalCountry" json:"postalCountry,omitempty"`
	DependentLocality *string `protobuf:"bytes,8,opt,name=dependentLocality" json:"dependentLocality,omitempty"`
	SortingCode       *string `protobuf:"bytes,9,opt,name=sortingCode" json:"sortingCode,omitempty"`
	LanguageCode      *string `protobuf:"bytes,10,opt,name=languageCode" json:"languageCode,omitempty"`
	PhoneNumber       *string `protobuf:"bytes,11,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
	IsReduced         *bool   `protobuf:"varint,12,opt,name=isReduced" json:"isReduced,omitempty"`
	FirstName         *string `protobuf:"bytes,13,opt,name=firstName" json:"firstName,omitempty"`
	LastName          *string `protobuf:"bytes,14,opt,name=lastName" json:"lastName,omitempty"`
	Email             *string `protobuf:"bytes,15,opt,name=email" json:"email,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{6}
}

func (x *Address) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Address) GetAddressLine1() string {
	if x != nil && x.AddressLine1 != nil {
		return *x.AddressLine1
	}
	return ""
}

func (x *Address) GetAddressLine2() string {
	if x != nil && x.AddressLine2 != nil {
		return *x.AddressLine2
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil && x.PostalCode != nil {
		return *x.PostalCode
	}
	return ""
}

func (x *Address) GetPostalCountry() string {
	if x != nil && x.PostalCountry != nil {
		return *x.PostalCountry
	}
	return ""
}

func (x *Address) GetDependentLocality() string {
	if x != nil && x.DependentLocality != nil {
		return *x.DependentLocality
	}
	return ""
}

func (x *Address) GetSortingCode() string {
	if x != nil && x.SortingCode != nil {
		return *x.SortingCode
	}
	return ""
}

func (x *Address) GetLanguageCode() string {
	if x != nil && x.LanguageCode != nil {
		return *x.LanguageCode
	}
	return ""
}

func (x *Address) GetPhoneNumber() string {
	if x != nil && x.PhoneNumber != nil {
		return *x.PhoneNumber
	}
	return ""
}

func (x *Address) GetIsReduced() bool {
	if x != nil && x.IsReduced != nil {
		return *x.IsReduced
	}
	return false
}

func (x *Address) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *Address) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *Address) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

type BookAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	DeprecatedQuery *string `protobuf:"bytes,2,opt,name=deprecatedQuery" json:"deprecatedQuery,omitempty"`
	Docid           *Docid  `protobuf:"bytes,3,opt,name=docid" json:"docid,omitempty"`
}

func (x *BookAuthor) Reset() {
	*x = BookAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookAuthor) ProtoMessage() {}

func (x *BookAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookAuthor.ProtoReflect.Descriptor instead.
func (*BookAuthor) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{7}
}

func (x *BookAuthor) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BookAuthor) GetDeprecatedQuery() string {
	if x != nil && x.DeprecatedQuery != nil {
		return *x.DeprecatedQuery
	}
	return ""
}

func (x *BookAuthor) GetDocid() *Docid {
	if x != nil {
		return x.Docid
	}
	return nil
}

type BookDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject         []*BookSubject            `protobuf:"bytes,3,rep,name=subject" json:"subject,omitempty"`
	Publisher       *string                   `protobuf:"bytes,4,opt,name=publisher" json:"publisher,omitempty"`
	PublicationDate *string                   `protobuf:"bytes,5,opt,name=publicationDate" json:"publicationDate,omitempty"`
	Isbn            *string                   `protobuf:"bytes,6,opt,name=isbn" json:"isbn,omitempty"`
	NumberOfPages   *int32                    `protobuf:"varint,7,opt,name=numberOfPages" json:"numberOfPages,omitempty"`
	Subtitle        *string                   `protobuf:"bytes,8,opt,name=subtitle" json:"subtitle,omitempty"`
	Author          []*BookAuthor             `protobuf:"bytes,9,rep,name=author" json:"author,omitempty"`
	ReaderUrl       *string                   `protobuf:"bytes,10,opt,name=readerUrl" json:"readerUrl,omitempty"`
	DownloadEpubUrl *string                   `protobuf:"bytes,11,opt,name=downloadEpubUrl" json:"downloadEpubUrl,omitempty"`
	DownloadPdfUrl  *string                   `protobuf:"bytes,12,opt,name=downloadPdfUrl" json:"downloadPdfUrl,omitempty"`
	AcsEpubTokenUrl *string                   `protobuf:"bytes,13,opt,name=acsEpubTokenUrl" json:"acsEpubTokenUrl,omitempty"`
	AcsPdfTokenUrl  *string                   `protobuf:"bytes,14,opt,name=acsPdfTokenUrl" json:"acsPdfTokenUrl,omitempty"`
	EpubAvailable   *bool                     `protobuf:"varint,15,opt,name=epubAvailable" json:"epubAvailable,omitempty"`
	PdfAvailable    *bool                     `protobuf:"varint,16,opt,name=pdfAvailable" json:"pdfAvailable,omitempty"`
	AboutTheAuthor  *string                   `protobuf:"bytes,17,opt,name=aboutTheAuthor" json:"aboutTheAuthor,omitempty"`
	Identifier      []*BookDetails_Identifier `protobuf:"group,18,rep,name=Identifier,json=identifier" json:"identifier,omitempty"`
}

func (x *BookDetails) Reset() {
	*x = BookDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookDetails) ProtoMessage() {}

func (x *BookDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookDetails.ProtoReflect.Descriptor instead.
func (*BookDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{8}
}

func (x *BookDetails) GetSubject() []*BookSubject {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *BookDetails) GetPublisher() string {
	if x != nil && x.Publisher != nil {
		return *x.Publisher
	}
	return ""
}

func (x *BookDetails) GetPublicationDate() string {
	if x != nil && x.PublicationDate != nil {
		return *x.PublicationDate
	}
	return ""
}

func (x *BookDetails) GetIsbn() string {
	if x != nil && x.Isbn != nil {
		return *x.Isbn
	}
	return ""
}

func (x *BookDetails) GetNumberOfPages() int32 {
	if x != nil && x.NumberOfPages != nil {
		return *x.NumberOfPages
	}
	return 0
}

func (x *BookDetails) GetSubtitle() string {
	if x != nil && x.Subtitle != nil {
		return *x.Subtitle
	}
	return ""
}

func (x *BookDetails) GetAuthor() []*BookAuthor {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *BookDetails) GetReaderUrl() string {
	if x != nil && x.ReaderUrl != nil {
		return *x.ReaderUrl
	}
	return ""
}

func (x *BookDetails) GetDownloadEpubUrl() string {
	if x != nil && x.DownloadEpubUrl != nil {
		return *x.DownloadEpubUrl
	}
	return ""
}

func (x *BookDetails) GetDownloadPdfUrl() string {
	if x != nil && x.DownloadPdfUrl != nil {
		return *x.DownloadPdfUrl
	}
	return ""
}

func (x *BookDetails) GetAcsEpubTokenUrl() string {
	if x != nil && x.AcsEpubTokenUrl != nil {
		return *x.AcsEpubTokenUrl
	}
	return ""
}

func (x *BookDetails) GetAcsPdfTokenUrl() string {
	if x != nil && x.AcsPdfTokenUrl != nil {
		return *x.AcsPdfTokenUrl
	}
	return ""
}

func (x *BookDetails) GetEpubAvailable() bool {
	if x != nil && x.EpubAvailable != nil {
		return *x.EpubAvailable
	}
	return false
}

func (x *BookDetails) GetPdfAvailable() bool {
	if x != nil && x.PdfAvailable != nil {
		return *x.PdfAvailable
	}
	return false
}

func (x *BookDetails) GetAboutTheAuthor() string {
	if x != nil && x.AboutTheAuthor != nil {
		return *x.AboutTheAuthor
	}
	return ""
}

func (x *BookDetails) GetIdentifier() []*BookDetails_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type BookSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Query     *string `protobuf:"bytes,2,opt,name=query" json:"query,omitempty"`
	SubjectId *string `protobuf:"bytes,3,opt,name=subjectId" json:"subjectId,omitempty"`
}

func (x *BookSubject) Reset() {
	*x = BookSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookSubject) ProtoMessage() {}

func (x *BookSubject) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookSubject.ProtoReflect.Descriptor instead.
func (*BookSubject) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{9}
}

func (x *BookSubject) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BookSubject) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *BookSubject) GetSubjectId() string {
	if x != nil && x.SubjectId != nil {
		return *x.SubjectId
	}
	return ""
}

type BrowseLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     *string                   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	DataUrl                  *string                   `protobuf:"bytes,3,opt,name=dataUrl" json:"dataUrl,omitempty"`
	Icon                     *Image                    `protobuf:"bytes,5,opt,name=icon" json:"icon,omitempty"`
	UnknownCategoryContainer *UnknownCategoryContainer `protobuf:"bytes,4,opt,name=unknownCategoryContainer" json:"unknownCategoryContainer,omitempty"`
}

func (x *BrowseLink) Reset() {
	*x = BrowseLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseLink) ProtoMessage() {}

func (x *BrowseLink) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseLink.ProtoReflect.Descriptor instead.
func (*BrowseLink) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{10}
}

func (x *BrowseLink) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BrowseLink) GetDataUrl() string {
	if x != nil && x.DataUrl != nil {
		return *x.DataUrl
	}
	return ""
}

func (x *BrowseLink) GetIcon() *Image {
	if x != nil {
		return x.Icon
	}
	return nil
}

func (x *BrowseLink) GetUnknownCategoryContainer() *UnknownCategoryContainer {
	if x != nil {
		return x.UnknownCategoryContainer
	}
	return nil
}

type UnknownCategoryContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryIdContainer *CategoryIdContainer `protobuf:"bytes,5,opt,name=categoryIdContainer" json:"categoryIdContainer,omitempty"`
}

func (x *UnknownCategoryContainer) Reset() {
	*x = UnknownCategoryContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnknownCategoryContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnknownCategoryContainer) ProtoMessage() {}

func (x *UnknownCategoryContainer) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnknownCategoryContainer.ProtoReflect.Descriptor instead.
func (*UnknownCategoryContainer) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{11}
}

func (x *UnknownCategoryContainer) GetCategoryIdContainer() *CategoryIdContainer {
	if x != nil {
		return x.CategoryIdContainer
	}
	return nil
}

type CategoryIdContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId *string `protobuf:"bytes,4,opt,name=categoryId" json:"categoryId,omitempty"`
}

func (x *CategoryIdContainer) Reset() {
	*x = CategoryIdContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryIdContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryIdContainer) ProtoMessage() {}

func (x *CategoryIdContainer) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryIdContainer.ProtoReflect.Descriptor instead.
func (*CategoryIdContainer) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{12}
}

func (x *CategoryIdContainer) GetCategoryId() string {
	if x != nil && x.CategoryId != nil {
		return *x.CategoryId
	}
	return ""
}

type BrowseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentsUrl       *string            `protobuf:"bytes,1,opt,name=contentsUrl" json:"contentsUrl,omitempty"`
	PromoUrl          *string            `protobuf:"bytes,2,opt,name=promoUrl" json:"promoUrl,omitempty"`
	Category          []*BrowseLink      `protobuf:"bytes,3,rep,name=category" json:"category,omitempty"`
	Breadcrumb        []*BrowseLink      `protobuf:"bytes,4,rep,name=breadcrumb" json:"breadcrumb,omitempty"`
	CategoryContainer *CategoryContainer `protobuf:"bytes,9,opt,name=categoryContainer" json:"categoryContainer,omitempty"`
}

func (x *BrowseResponse) Reset() {
	*x = BrowseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseResponse) ProtoMessage() {}

func (x *BrowseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseResponse.ProtoReflect.Descriptor instead.
func (*BrowseResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{13}
}

func (x *BrowseResponse) GetContentsUrl() string {
	if x != nil && x.ContentsUrl != nil {
		return *x.ContentsUrl
	}
	return ""
}

func (x *BrowseResponse) GetPromoUrl() string {
	if x != nil && x.PromoUrl != nil {
		return *x.PromoUrl
	}
	return ""
}

func (x *BrowseResponse) GetCategory() []*BrowseLink {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *BrowseResponse) GetBreadcrumb() []*BrowseLink {
	if x != nil {
		return x.Breadcrumb
	}
	return nil
}

func (x *BrowseResponse) GetCategoryContainer() *CategoryContainer {
	if x != nil {
		return x.CategoryContainer
	}
	return nil
}

type CategoryContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category []*BrowseLink `protobuf:"bytes,4,rep,name=category" json:"category,omitempty"`
}

func (x *CategoryContainer) Reset() {
	*x = CategoryContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryContainer) ProtoMessage() {}

func (x *CategoryContainer) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryContainer.ProtoReflect.Descriptor instead.
func (*CategoryContainer) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{14}
}

func (x *CategoryContainer) GetCategory() []*BrowseLink {
	if x != nil {
		return x.Category
	}
	return nil
}

type AddressChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseAddressParam    *string                 `protobuf:"bytes,1,opt,name=responseAddressParam" json:"responseAddressParam,omitempty"`
	ResponseCheckboxesParam *string                 `protobuf:"bytes,2,opt,name=responseCheckboxesParam" json:"responseCheckboxesParam,omitempty"`
	Title                   *string                 `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	DescriptionHtml         *string                 `protobuf:"bytes,4,opt,name=descriptionHtml" json:"descriptionHtml,omitempty"`
	Checkbox                []*FormCheckbox         `protobuf:"bytes,5,rep,name=checkbox" json:"checkbox,omitempty"`
	Address                 *Address                `protobuf:"bytes,6,opt,name=address" json:"address,omitempty"`
	ErrorInputField         []*InputValidationError `protobuf:"bytes,7,rep,name=errorInputField" json:"errorInputField,omitempty"`
	ErrorHtml               *string                 `protobuf:"bytes,8,opt,name=errorHtml" json:"errorHtml,omitempty"`
	RequiredField           []int32                 `protobuf:"varint,9,rep,name=requiredField" json:"requiredField,omitempty"`
}

func (x *AddressChallenge) Reset() {
	*x = AddressChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressChallenge) ProtoMessage() {}

func (x *AddressChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressChallenge.ProtoReflect.Descriptor instead.
func (*AddressChallenge) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{15}
}

func (x *AddressChallenge) GetResponseAddressParam() string {
	if x != nil && x.ResponseAddressParam != nil {
		return *x.ResponseAddressParam
	}
	return ""
}

func (x *AddressChallenge) GetResponseCheckboxesParam() string {
	if x != nil && x.ResponseCheckboxesParam != nil {
		return *x.ResponseCheckboxesParam
	}
	return ""
}

func (x *AddressChallenge) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *AddressChallenge) GetDescriptionHtml() string {
	if x != nil && x.DescriptionHtml != nil {
		return *x.DescriptionHtml
	}
	return ""
}

func (x *AddressChallenge) GetCheckbox() []*FormCheckbox {
	if x != nil {
		return x.Checkbox
	}
	return nil
}

func (x *AddressChallenge) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *AddressChallenge) GetErrorInputField() []*InputValidationError {
	if x != nil {
		return x.ErrorInputField
	}
	return nil
}

func (x *AddressChallenge) GetErrorHtml() string {
	if x != nil && x.ErrorHtml != nil {
		return *x.ErrorHtml
	}
	return ""
}

func (x *AddressChallenge) GetRequiredField() []int32 {
	if x != nil {
		return x.RequiredField
	}
	return nil
}

type AuthenticationChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthenticationType              *int32  `protobuf:"varint,1,opt,name=authenticationType" json:"authenticationType,omitempty"`
	ResponseAuthenticationTypeParam *string `protobuf:"bytes,2,opt,name=responseAuthenticationTypeParam" json:"responseAuthenticationTypeParam,omitempty"`
	ResponseRetryCountParam         *string `protobuf:"bytes,3,opt,name=responseRetryCountParam" json:"responseRetryCountParam,omitempty"`
	PinHeaderText                   *string `protobuf:"bytes,4,opt,name=pinHeaderText" json:"pinHeaderText,omitempty"`
	PinDescriptionTextHtml          *string `protobuf:"bytes,5,opt,name=pinDescriptionTextHtml" json:"pinDescriptionTextHtml,omitempty"`
	GaiaHeaderText                  *string `protobuf:"bytes,6,opt,name=gaiaHeaderText" json:"gaiaHeaderText,omitempty"`
	GaiaDescriptionTextHtml         *string `protobuf:"bytes,7,opt,name=gaiaDescriptionTextHtml" json:"gaiaDescriptionTextHtml,omitempty"`
}

func (x *AuthenticationChallenge) Reset() {
	*x = AuthenticationChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationChallenge) ProtoMessage() {}

func (x *AuthenticationChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationChallenge.ProtoReflect.Descriptor instead.
func (*AuthenticationChallenge) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{16}
}

func (x *AuthenticationChallenge) GetAuthenticationType() int32 {
	if x != nil && x.AuthenticationType != nil {
		return *x.AuthenticationType
	}
	return 0
}

func (x *AuthenticationChallenge) GetResponseAuthenticationTypeParam() string {
	if x != nil && x.ResponseAuthenticationTypeParam != nil {
		return *x.ResponseAuthenticationTypeParam
	}
	return ""
}

func (x *AuthenticationChallenge) GetResponseRetryCountParam() string {
	if x != nil && x.ResponseRetryCountParam != nil {
		return *x.ResponseRetryCountParam
	}
	return ""
}

func (x *AuthenticationChallenge) GetPinHeaderText() string {
	if x != nil && x.PinHeaderText != nil {
		return *x.PinHeaderText
	}
	return ""
}

func (x *AuthenticationChallenge) GetPinDescriptionTextHtml() string {
	if x != nil && x.PinDescriptionTextHtml != nil {
		return *x.PinDescriptionTextHtml
	}
	return ""
}

func (x *AuthenticationChallenge) GetGaiaHeaderText() string {
	if x != nil && x.GaiaHeaderText != nil {
		return *x.GaiaHeaderText
	}
	return ""
}

func (x *AuthenticationChallenge) GetGaiaDescriptionTextHtml() string {
	if x != nil && x.GaiaDescriptionTextHtml != nil {
		return *x.GaiaDescriptionTextHtml
	}
	return ""
}

type BuyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseResponse       *PurchaseNotificationResponse `protobuf:"bytes,1,opt,name=purchaseResponse" json:"purchaseResponse,omitempty"`
	Checkoutinfo           *BuyResponse_CheckoutInfo     `protobuf:"group,2,opt,name=CheckoutInfo,json=checkoutinfo" json:"checkoutinfo,omitempty"`
	ContinueViaUrl         *string                       `protobuf:"bytes,8,opt,name=continueViaUrl" json:"continueViaUrl,omitempty"`
	PurchaseStatusUrl      *string                       `protobuf:"bytes,9,opt,name=purchaseStatusUrl" json:"purchaseStatusUrl,omitempty"`
	CheckoutServiceId      *string                       `protobuf:"bytes,12,opt,name=checkoutServiceId" json:"checkoutServiceId,omitempty"`
	CheckoutTokenRequired  *bool                         `protobuf:"varint,13,opt,name=checkoutTokenRequired" json:"checkoutTokenRequired,omitempty"`
	BaseCheckoutUrl        *string                       `protobuf:"bytes,14,opt,name=baseCheckoutUrl" json:"baseCheckoutUrl,omitempty"`
	TosCheckboxHtml        []string                      `protobuf:"bytes,37,rep,name=tosCheckboxHtml" json:"tosCheckboxHtml,omitempty"`
	IabPermissionError     *int32                        `protobuf:"varint,38,opt,name=iabPermissionError" json:"iabPermissionError,omitempty"`
	PurchaseStatusResponse *PurchaseStatusResponse       `protobuf:"bytes,39,opt,name=purchaseStatusResponse" json:"purchaseStatusResponse,omitempty"`
	PurchaseCookie         *string                       `protobuf:"bytes,46,opt,name=purchaseCookie" json:"purchaseCookie,omitempty"`
	Challenge              *Challenge                    `protobuf:"bytes,49,opt,name=challenge" json:"challenge,omitempty"`
	DownloadToken          *string                       `protobuf:"bytes,55,opt,name=downloadToken" json:"downloadToken,omitempty"`
}

func (x *BuyResponse) Reset() {
	*x = BuyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResponse) ProtoMessage() {}

func (x *BuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResponse.ProtoReflect.Descriptor instead.
func (*BuyResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{17}
}

func (x *BuyResponse) GetPurchaseResponse() *PurchaseNotificationResponse {
	if x != nil {
		return x.PurchaseResponse
	}
	return nil
}

func (x *BuyResponse) GetCheckoutinfo() *BuyResponse_CheckoutInfo {
	if x != nil {
		return x.Checkoutinfo
	}
	return nil
}

func (x *BuyResponse) GetContinueViaUrl() string {
	if x != nil && x.ContinueViaUrl != nil {
		return *x.ContinueViaUrl
	}
	return ""
}

func (x *BuyResponse) GetPurchaseStatusUrl() string {
	if x != nil && x.PurchaseStatusUrl != nil {
		return *x.PurchaseStatusUrl
	}
	return ""
}

func (x *BuyResponse) GetCheckoutServiceId() string {
	if x != nil && x.CheckoutServiceId != nil {
		return *x.CheckoutServiceId
	}
	return ""
}

func (x *BuyResponse) GetCheckoutTokenRequired() bool {
	if x != nil && x.CheckoutTokenRequired != nil {
		return *x.CheckoutTokenRequired
	}
	return false
}

func (x *BuyResponse) GetBaseCheckoutUrl() string {
	if x != nil && x.BaseCheckoutUrl != nil {
		return *x.BaseCheckoutUrl
	}
	return ""
}

func (x *BuyResponse) GetTosCheckboxHtml() []string {
	if x != nil {
		return x.TosCheckboxHtml
	}
	return nil
}

func (x *BuyResponse) GetIabPermissionError() int32 {
	if x != nil && x.IabPermissionError != nil {
		return *x.IabPermissionError
	}
	return 0
}

func (x *BuyResponse) GetPurchaseStatusResponse() *PurchaseStatusResponse {
	if x != nil {
		return x.PurchaseStatusResponse
	}
	return nil
}

func (x *BuyResponse) GetPurchaseCookie() string {
	if x != nil && x.PurchaseCookie != nil {
		return *x.PurchaseCookie
	}
	return ""
}

func (x *BuyResponse) GetChallenge() *Challenge {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *BuyResponse) GetDownloadToken() string {
	if x != nil && x.DownloadToken != nil {
		return *x.DownloadToken
	}
	return ""
}

type Challenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressChallenge        *AddressChallenge        `protobuf:"bytes,1,opt,name=addressChallenge" json:"addressChallenge,omitempty"`
	AuthenticationChallenge *AuthenticationChallenge `protobuf:"bytes,2,opt,name=authenticationChallenge" json:"authenticationChallenge,omitempty"`
}

func (x *Challenge) Reset() {
	*x = Challenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Challenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Challenge) ProtoMessage() {}

func (x *Challenge) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Challenge.ProtoReflect.Descriptor instead.
func (*Challenge) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{18}
}

func (x *Challenge) GetAddressChallenge() *AddressChallenge {
	if x != nil {
		return x.AddressChallenge
	}
	return nil
}

func (x *Challenge) GetAuthenticationChallenge() *AuthenticationChallenge {
	if x != nil {
		return x.AuthenticationChallenge
	}
	return nil
}

type FormCheckbox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Checked     *bool   `protobuf:"varint,2,opt,name=checked" json:"checked,omitempty"`
	Required    *bool   `protobuf:"varint,3,opt,name=required" json:"required,omitempty"`
}

func (x *FormCheckbox) Reset() {
	*x = FormCheckbox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormCheckbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormCheckbox) ProtoMessage() {}

func (x *FormCheckbox) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormCheckbox.ProtoReflect.Descriptor instead.
func (*FormCheckbox) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{19}
}

func (x *FormCheckbox) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *FormCheckbox) GetChecked() bool {
	if x != nil && x.Checked != nil {
		return *x.Checked
	}
	return false
}

func (x *FormCheckbox) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

type LineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Offer       *Offer  `protobuf:"bytes,3,opt,name=offer" json:"offer,omitempty"`
	Amount      *Money  `protobuf:"bytes,4,opt,name=amount" json:"amount,omitempty"`
}

func (x *LineItem) Reset() {
	*x = LineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineItem) ProtoMessage() {}

func (x *LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineItem.ProtoReflect.Descriptor instead.
func (*LineItem) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{20}
}

func (x *LineItem) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LineItem) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *LineItem) GetOffer() *Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *LineItem) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

type Money struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Micros          *int64  `protobuf:"varint,1,opt,name=micros" json:"micros,omitempty"`
	CurrencyCode    *string `protobuf:"bytes,2,opt,name=currencyCode" json:"currencyCode,omitempty"`
	FormattedAmount *string `protobuf:"bytes,3,opt,name=formattedAmount" json:"formattedAmount,omitempty"`
}

func (x *Money) Reset() {
	*x = Money{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Money) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Money) ProtoMessage() {}

func (x *Money) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Money.ProtoReflect.Descriptor instead.
func (*Money) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{21}
}

func (x *Money) GetMicros() int64 {
	if x != nil && x.Micros != nil {
		return *x.Micros
	}
	return 0
}

func (x *Money) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

func (x *Money) GetFormattedAmount() string {
	if x != nil && x.FormattedAmount != nil {
		return *x.FormattedAmount
	}
	return ""
}

type PurchaseNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                *int32     `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	DebugInfo             *DebugInfo `protobuf:"bytes,2,opt,name=debugInfo" json:"debugInfo,omitempty"`
	LocalizedErrorMessage *string    `protobuf:"bytes,3,opt,name=localizedErrorMessage" json:"localizedErrorMessage,omitempty"`
	PurchaseId            *string    `protobuf:"bytes,4,opt,name=purchaseId" json:"purchaseId,omitempty"`
}

func (x *PurchaseNotificationResponse) Reset() {
	*x = PurchaseNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseNotificationResponse) ProtoMessage() {}

func (x *PurchaseNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseNotificationResponse.ProtoReflect.Descriptor instead.
func (*PurchaseNotificationResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{22}
}

func (x *PurchaseNotificationResponse) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *PurchaseNotificationResponse) GetDebugInfo() *DebugInfo {
	if x != nil {
		return x.DebugInfo
	}
	return nil
}

func (x *PurchaseNotificationResponse) GetLocalizedErrorMessage() string {
	if x != nil && x.LocalizedErrorMessage != nil {
		return *x.LocalizedErrorMessage
	}
	return ""
}

func (x *PurchaseNotificationResponse) GetPurchaseId() string {
	if x != nil && x.PurchaseId != nil {
		return *x.PurchaseId
	}
	return ""
}

type PurchaseStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status             *int32                  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	StatusMsg          *string                 `protobuf:"bytes,2,opt,name=statusMsg" json:"statusMsg,omitempty"`
	StatusTitle        *string                 `protobuf:"bytes,3,opt,name=statusTitle" json:"statusTitle,omitempty"`
	BriefMessage       *string                 `protobuf:"bytes,4,opt,name=briefMessage" json:"briefMessage,omitempty"`
	InfoUrl            *string                 `protobuf:"bytes,5,opt,name=infoUrl" json:"infoUrl,omitempty"`
	LibraryUpdate      *LibraryUpdate          `protobuf:"bytes,6,opt,name=libraryUpdate" json:"libraryUpdate,omitempty"`
	RejectedInstrument *Instrument             `protobuf:"bytes,7,opt,name=rejectedInstrument" json:"rejectedInstrument,omitempty"`
	AppDeliveryData    *AndroidAppDeliveryData `protobuf:"bytes,8,opt,name=appDeliveryData" json:"appDeliveryData,omitempty"`
}

func (x *PurchaseStatusResponse) Reset() {
	*x = PurchaseStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseStatusResponse) ProtoMessage() {}

func (x *PurchaseStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseStatusResponse.ProtoReflect.Descriptor instead.
func (*PurchaseStatusResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{23}
}

func (x *PurchaseStatusResponse) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *PurchaseStatusResponse) GetStatusMsg() string {
	if x != nil && x.StatusMsg != nil {
		return *x.StatusMsg
	}
	return ""
}

func (x *PurchaseStatusResponse) GetStatusTitle() string {
	if x != nil && x.StatusTitle != nil {
		return *x.StatusTitle
	}
	return ""
}

func (x *PurchaseStatusResponse) GetBriefMessage() string {
	if x != nil && x.BriefMessage != nil {
		return *x.BriefMessage
	}
	return ""
}

func (x *PurchaseStatusResponse) GetInfoUrl() string {
	if x != nil && x.InfoUrl != nil {
		return *x.InfoUrl
	}
	return ""
}

func (x *PurchaseStatusResponse) GetLibraryUpdate() *LibraryUpdate {
	if x != nil {
		return x.LibraryUpdate
	}
	return nil
}

func (x *PurchaseStatusResponse) GetRejectedInstrument() *Instrument {
	if x != nil {
		return x.RejectedInstrument
	}
	return nil
}

func (x *PurchaseStatusResponse) GetAppDeliveryData() *AndroidAppDeliveryData {
	if x != nil {
		return x.AppDeliveryData
	}
	return nil
}

type DeliveryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppDeliveryData *AndroidAppDeliveryData `protobuf:"bytes,2,opt,name=appDeliveryData" json:"appDeliveryData,omitempty"`
}

func (x *DeliveryResponse) Reset() {
	*x = DeliveryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryResponse) ProtoMessage() {}

func (x *DeliveryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryResponse.ProtoReflect.Descriptor instead.
func (*DeliveryResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{24}
}

func (x *DeliveryResponse) GetAppDeliveryData() *AndroidAppDeliveryData {
	if x != nil {
		return x.AppDeliveryData
	}
	return nil
}

type Docid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackendDocid *string `protobuf:"bytes,1,opt,name=backendDocid" json:"backendDocid,omitempty"`
	Type         *int32  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Backend      *int32  `protobuf:"varint,3,opt,name=backend" json:"backend,omitempty"`
}

func (x *Docid) Reset() {
	*x = Docid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Docid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Docid) ProtoMessage() {}

func (x *Docid) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Docid.ProtoReflect.Descriptor instead.
func (*Docid) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{25}
}

func (x *Docid) GetBackendDocid() string {
	if x != nil && x.BackendDocid != nil {
		return *x.BackendDocid
	}
	return ""
}

func (x *Docid) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Docid) GetBackend() int32 {
	if x != nil && x.Backend != nil {
		return *x.Backend
	}
	return 0
}

type Install struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AndroidId *uint64 `protobuf:"fixed64,1,opt,name=androidId" json:"androidId,omitempty"`
	Version   *int32  `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	Bundled   *bool   `protobuf:"varint,3,opt,name=bundled" json:"bundled,omitempty"`
}

func (x *Install) Reset() {
	*x = Install{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Install) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Install) ProtoMessage() {}

func (x *Install) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Install.ProtoReflect.Descriptor instead.
func (*Install) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{26}
}

func (x *Install) GetAndroidId() uint64 {
	if x != nil && x.AndroidId != nil {
		return *x.AndroidId
	}
	return 0
}

func (x *Install) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *Install) GetBundled() bool {
	if x != nil && x.Bundled != nil {
		return *x.Bundled
	}
	return false
}

type Offer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Micros               *int64             `protobuf:"varint,1,opt,name=micros" json:"micros,omitempty"`
	CurrencyCode         *string            `protobuf:"bytes,2,opt,name=currencyCode" json:"currencyCode,omitempty"`
	FormattedAmount      *string            `protobuf:"bytes,3,opt,name=formattedAmount" json:"formattedAmount,omitempty"`
	ConvertedPrice       []*Offer           `protobuf:"bytes,4,rep,name=convertedPrice" json:"convertedPrice,omitempty"`
	CheckoutFlowRequired *bool              `protobuf:"varint,5,opt,name=checkoutFlowRequired" json:"checkoutFlowRequired,omitempty"`
	FullPriceMicros      *int64             `protobuf:"varint,6,opt,name=fullPriceMicros" json:"fullPriceMicros,omitempty"`
	FormattedFullAmount  *string            `protobuf:"bytes,7,opt,name=formattedFullAmount" json:"formattedFullAmount,omitempty"`
	OfferType            *int32             `protobuf:"varint,8,opt,name=offerType" json:"offerType,omitempty"`
	RentalTerms          *RentalTerms       `protobuf:"bytes,9,opt,name=rentalTerms" json:"rentalTerms,omitempty"`
	OnSaleDate           *int64             `protobuf:"varint,10,opt,name=onSaleDate" json:"onSaleDate,omitempty"`
	PromotionLabel       []string           `protobuf:"bytes,11,rep,name=promotionLabel" json:"promotionLabel,omitempty"`
	SubscriptionTerms    *SubscriptionTerms `protobuf:"bytes,12,opt,name=subscriptionTerms" json:"subscriptionTerms,omitempty"`
	FormattedName        *string            `protobuf:"bytes,13,opt,name=formattedName" json:"formattedName,omitempty"`
	FormattedDescription *string            `protobuf:"bytes,14,opt,name=formattedDescription" json:"formattedDescription,omitempty"`
	Sale                 *bool              `protobuf:"varint,22,opt,name=sale" json:"sale,omitempty"`
	Message              *string            `protobuf:"bytes,26,opt,name=message" json:"message,omitempty"`
	SaleEndTimestamp     *int64             `protobuf:"varint,30,opt,name=saleEndTimestamp" json:"saleEndTimestamp,omitempty"`
	SaleMessage          *string            `protobuf:"bytes,31,opt,name=saleMessage" json:"saleMessage,omitempty"`
}

func (x *Offer) Reset() {
	*x = Offer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offer) ProtoMessage() {}

func (x *Offer) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offer.ProtoReflect.Descriptor instead.
func (*Offer) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{27}
}

func (x *Offer) GetMicros() int64 {
	if x != nil && x.Micros != nil {
		return *x.Micros
	}
	return 0
}

func (x *Offer) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

func (x *Offer) GetFormattedAmount() string {
	if x != nil && x.FormattedAmount != nil {
		return *x.FormattedAmount
	}
	return ""
}

func (x *Offer) GetConvertedPrice() []*Offer {
	if x != nil {
		return x.ConvertedPrice
	}
	return nil
}

func (x *Offer) GetCheckoutFlowRequired() bool {
	if x != nil && x.CheckoutFlowRequired != nil {
		return *x.CheckoutFlowRequired
	}
	return false
}

func (x *Offer) GetFullPriceMicros() int64 {
	if x != nil && x.FullPriceMicros != nil {
		return *x.FullPriceMicros
	}
	return 0
}

func (x *Offer) GetFormattedFullAmount() string {
	if x != nil && x.FormattedFullAmount != nil {
		return *x.FormattedFullAmount
	}
	return ""
}

func (x *Offer) GetOfferType() int32 {
	if x != nil && x.OfferType != nil {
		return *x.OfferType
	}
	return 0
}

func (x *Offer) GetRentalTerms() *RentalTerms {
	if x != nil {
		return x.RentalTerms
	}
	return nil
}

func (x *Offer) GetOnSaleDate() int64 {
	if x != nil && x.OnSaleDate != nil {
		return *x.OnSaleDate
	}
	return 0
}

func (x *Offer) GetPromotionLabel() []string {
	if x != nil {
		return x.PromotionLabel
	}
	return nil
}

func (x *Offer) GetSubscriptionTerms() *SubscriptionTerms {
	if x != nil {
		return x.SubscriptionTerms
	}
	return nil
}

func (x *Offer) GetFormattedName() string {
	if x != nil && x.FormattedName != nil {
		return *x.FormattedName
	}
	return ""
}

func (x *Offer) GetFormattedDescription() string {
	if x != nil && x.FormattedDescription != nil {
		return *x.FormattedDescription
	}
	return ""
}

func (x *Offer) GetSale() bool {
	if x != nil && x.Sale != nil {
		return *x.Sale
	}
	return false
}

func (x *Offer) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *Offer) GetSaleEndTimestamp() int64 {
	if x != nil && x.SaleEndTimestamp != nil {
		return *x.SaleEndTimestamp
	}
	return 0
}

func (x *Offer) GetSaleMessage() string {
	if x != nil && x.SaleMessage != nil {
		return *x.SaleMessage
	}
	return ""
}

type OwnershipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitiationTimestampMsec      *int64 `protobuf:"varint,1,opt,name=initiationTimestampMsec" json:"initiationTimestampMsec,omitempty"`
	ValidUntilTimestampMsec      *int64 `protobuf:"varint,2,opt,name=validUntilTimestampMsec" json:"validUntilTimestampMsec,omitempty"`
	AutoRenewing                 *bool  `protobuf:"varint,3,opt,name=autoRenewing" json:"autoRenewing,omitempty"`
	RefundTimeoutTimestampMsec   *int64 `protobuf:"varint,4,opt,name=refundTimeoutTimestampMsec" json:"refundTimeoutTimestampMsec,omitempty"`
	PostDeliveryRefundWindowMsec *int64 `protobuf:"varint,5,opt,name=postDeliveryRefundWindowMsec" json:"postDeliveryRefundWindowMsec,omitempty"`
}

func (x *OwnershipInfo) Reset() {
	*x = OwnershipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnershipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnershipInfo) ProtoMessage() {}

func (x *OwnershipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnershipInfo.ProtoReflect.Descriptor instead.
func (*OwnershipInfo) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{28}
}

func (x *OwnershipInfo) GetInitiationTimestampMsec() int64 {
	if x != nil && x.InitiationTimestampMsec != nil {
		return *x.InitiationTimestampMsec
	}
	return 0
}

func (x *OwnershipInfo) GetValidUntilTimestampMsec() int64 {
	if x != nil && x.ValidUntilTimestampMsec != nil {
		return *x.ValidUntilTimestampMsec
	}
	return 0
}

func (x *OwnershipInfo) GetAutoRenewing() bool {
	if x != nil && x.AutoRenewing != nil {
		return *x.AutoRenewing
	}
	return false
}

func (x *OwnershipInfo) GetRefundTimeoutTimestampMsec() int64 {
	if x != nil && x.RefundTimeoutTimestampMsec != nil {
		return *x.RefundTimeoutTimestampMsec
	}
	return 0
}

func (x *OwnershipInfo) GetPostDeliveryRefundWindowMsec() int64 {
	if x != nil && x.PostDeliveryRefundWindowMsec != nil {
		return *x.PostDeliveryRefundWindowMsec
	}
	return 0
}

type RentalTerms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrantPeriodSeconds    *int32 `protobuf:"varint,1,opt,name=grantPeriodSeconds" json:"grantPeriodSeconds,omitempty"`
	ActivatePeriodSeconds *int32 `protobuf:"varint,2,opt,name=activatePeriodSeconds" json:"activatePeriodSeconds,omitempty"`
}

func (x *RentalTerms) Reset() {
	*x = RentalTerms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RentalTerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RentalTerms) ProtoMessage() {}

func (x *RentalTerms) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RentalTerms.ProtoReflect.Descriptor instead.
func (*RentalTerms) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{29}
}

func (x *RentalTerms) GetGrantPeriodSeconds() int32 {
	if x != nil && x.GrantPeriodSeconds != nil {
		return *x.GrantPeriodSeconds
	}
	return 0
}

func (x *RentalTerms) GetActivatePeriodSeconds() int32 {
	if x != nil && x.ActivatePeriodSeconds != nil {
		return *x.ActivatePeriodSeconds
	}
	return 0
}

type SubscriptionTerms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecurringPeriod *TimePeriod `protobuf:"bytes,1,opt,name=recurringPeriod" json:"recurringPeriod,omitempty"`
	TrialPeriod     *TimePeriod `protobuf:"bytes,2,opt,name=trialPeriod" json:"trialPeriod,omitempty"`
}

func (x *SubscriptionTerms) Reset() {
	*x = SubscriptionTerms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionTerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionTerms) ProtoMessage() {}

func (x *SubscriptionTerms) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionTerms.ProtoReflect.Descriptor instead.
func (*SubscriptionTerms) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{30}
}

func (x *SubscriptionTerms) GetRecurringPeriod() *TimePeriod {
	if x != nil {
		return x.RecurringPeriod
	}
	return nil
}

func (x *SubscriptionTerms) GetTrialPeriod() *TimePeriod {
	if x != nil {
		return x.TrialPeriod
	}
	return nil
}

type TimePeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit  *int32 `protobuf:"varint,1,opt,name=unit" json:"unit,omitempty"`
	Count *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (x *TimePeriod) Reset() {
	*x = TimePeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimePeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimePeriod) ProtoMessage() {}

func (x *TimePeriod) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimePeriod.ProtoReflect.Descriptor instead.
func (*TimePeriod) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{31}
}

func (x *TimePeriod) GetUnit() int32 {
	if x != nil && x.Unit != nil {
		return *x.Unit
	}
	return 0
}

func (x *TimePeriod) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type BillingAddressSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillingAddressType *int32  `protobuf:"varint,1,opt,name=billingAddressType" json:"billingAddressType,omitempty"`
	RequiredField      []int32 `protobuf:"varint,2,rep,name=requiredField" json:"requiredField,omitempty"`
}

func (x *BillingAddressSpec) Reset() {
	*x = BillingAddressSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingAddressSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingAddressSpec) ProtoMessage() {}

func (x *BillingAddressSpec) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingAddressSpec.ProtoReflect.Descriptor instead.
func (*BillingAddressSpec) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{32}
}

func (x *BillingAddressSpec) GetBillingAddressType() int32 {
	if x != nil && x.BillingAddressType != nil {
		return *x.BillingAddressType
	}
	return 0
}

func (x *BillingAddressSpec) GetRequiredField() []int32 {
	if x != nil {
		return x.RequiredField
	}
	return nil
}

type CarrierBillingCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value      *string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Expiration *int64  `protobuf:"varint,2,opt,name=expiration" json:"expiration,omitempty"`
}

func (x *CarrierBillingCredentials) Reset() {
	*x = CarrierBillingCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarrierBillingCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierBillingCredentials) ProtoMessage() {}

func (x *CarrierBillingCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierBillingCredentials.ProtoReflect.Descriptor instead.
func (*CarrierBillingCredentials) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{33}
}

func (x *CarrierBillingCredentials) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *CarrierBillingCredentials) GetExpiration() int64 {
	if x != nil && x.Expiration != nil {
		return *x.Expiration
	}
	return 0
}

type CarrierBillingInstrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrumentKey           *string                    `protobuf:"bytes,1,opt,name=instrumentKey" json:"instrumentKey,omitempty"`
	AccountType             *string                    `protobuf:"bytes,2,opt,name=accountType" json:"accountType,omitempty"`
	CurrencyCode            *string                    `protobuf:"bytes,3,opt,name=currencyCode" json:"currencyCode,omitempty"`
	TransactionLimit        *int64                     `protobuf:"varint,4,opt,name=transactionLimit" json:"transactionLimit,omitempty"`
	SubscriberIdentifier    *string                    `protobuf:"bytes,5,opt,name=subscriberIdentifier" json:"subscriberIdentifier,omitempty"`
	EncryptedSubscriberInfo *EncryptedSubscriberInfo   `protobuf:"bytes,6,opt,name=encryptedSubscriberInfo" json:"encryptedSubscriberInfo,omitempty"`
	Credentials             *CarrierBillingCredentials `protobuf:"bytes,7,opt,name=credentials" json:"credentials,omitempty"`
	AcceptedCarrierTos      *CarrierTos                `protobuf:"bytes,8,opt,name=acceptedCarrierTos" json:"acceptedCarrierTos,omitempty"`
}

func (x *CarrierBillingInstrument) Reset() {
	*x = CarrierBillingInstrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarrierBillingInstrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierBillingInstrument) ProtoMessage() {}

func (x *CarrierBillingInstrument) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierBillingInstrument.ProtoReflect.Descriptor instead.
func (*CarrierBillingInstrument) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{34}
}

func (x *CarrierBillingInstrument) GetInstrumentKey() string {
	if x != nil && x.InstrumentKey != nil {
		return *x.InstrumentKey
	}
	return ""
}

func (x *CarrierBillingInstrument) GetAccountType() string {
	if x != nil && x.AccountType != nil {
		return *x.AccountType
	}
	return ""
}

func (x *CarrierBillingInstrument) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

func (x *CarrierBillingInstrument) GetTransactionLimit() int64 {
	if x != nil && x.TransactionLimit != nil {
		return *x.TransactionLimit
	}
	return 0
}

func (x *CarrierBillingInstrument) GetSubscriberIdentifier() string {
	if x != nil && x.SubscriberIdentifier != nil {
		return *x.SubscriberIdentifier
	}
	return ""
}

func (x *CarrierBillingInstrument) GetEncryptedSubscriberInfo() *EncryptedSubscriberInfo {
	if x != nil {
		return x.EncryptedSubscriberInfo
	}
	return nil
}

func (x *CarrierBillingInstrument) GetCredentials() *CarrierBillingCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *CarrierBillingInstrument) GetAcceptedCarrierTos() *CarrierTos {
	if x != nil {
		return x.AcceptedCarrierTos
	}
	return nil
}

type CarrierBillingInstrumentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarrierTos            *CarrierTos     `protobuf:"bytes,1,opt,name=carrierTos" json:"carrierTos,omitempty"`
	AssociationRequired   *bool           `protobuf:"varint,2,opt,name=associationRequired" json:"associationRequired,omitempty"`
	PasswordRequired      *bool           `protobuf:"varint,3,opt,name=passwordRequired" json:"passwordRequired,omitempty"`
	CarrierPasswordPrompt *PasswordPrompt `protobuf:"bytes,4,opt,name=carrierPasswordPrompt" json:"carrierPasswordPrompt,omitempty"`
	ApiVersion            *int32          `protobuf:"varint,5,opt,name=apiVersion" json:"apiVersion,omitempty"`
	Name                  *string         `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
}

func (x *CarrierBillingInstrumentStatus) Reset() {
	*x = CarrierBillingInstrumentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarrierBillingInstrumentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierBillingInstrumentStatus) ProtoMessage() {}

func (x *CarrierBillingInstrumentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierBillingInstrumentStatus.ProtoReflect.Descriptor instead.
func (*CarrierBillingInstrumentStatus) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{35}
}

func (x *CarrierBillingInstrumentStatus) GetCarrierTos() *CarrierTos {
	if x != nil {
		return x.CarrierTos
	}
	return nil
}

func (x *CarrierBillingInstrumentStatus) GetAssociationRequired() bool {
	if x != nil && x.AssociationRequired != nil {
		return *x.AssociationRequired
	}
	return false
}

func (x *CarrierBillingInstrumentStatus) GetPasswordRequired() bool {
	if x != nil && x.PasswordRequired != nil {
		return *x.PasswordRequired
	}
	return false
}

func (x *CarrierBillingInstrumentStatus) GetCarrierPasswordPrompt() *PasswordPrompt {
	if x != nil {
		return x.CarrierPasswordPrompt
	}
	return nil
}

func (x *CarrierBillingInstrumentStatus) GetApiVersion() int32 {
	if x != nil && x.ApiVersion != nil {
		return *x.ApiVersion
	}
	return 0
}

func (x *CarrierBillingInstrumentStatus) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CarrierTos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DcbTos                *CarrierTosEntry `protobuf:"bytes,1,opt,name=dcbTos" json:"dcbTos,omitempty"`
	PiiTos                *CarrierTosEntry `protobuf:"bytes,2,opt,name=piiTos" json:"piiTos,omitempty"`
	NeedsDcbTosAcceptance *bool            `protobuf:"varint,3,opt,name=needsDcbTosAcceptance" json:"needsDcbTosAcceptance,omitempty"`
	NeedsPiiTosAcceptance *bool            `protobuf:"varint,4,opt,name=needsPiiTosAcceptance" json:"needsPiiTosAcceptance,omitempty"`
}

func (x *CarrierTos) Reset() {
	*x = CarrierTos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarrierTos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierTos) ProtoMessage() {}

func (x *CarrierTos) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierTos.ProtoReflect.Descriptor instead.
func (*CarrierTos) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{36}
}

func (x *CarrierTos) GetDcbTos() *CarrierTosEntry {
	if x != nil {
		return x.DcbTos
	}
	return nil
}

func (x *CarrierTos) GetPiiTos() *CarrierTosEntry {
	if x != nil {
		return x.PiiTos
	}
	return nil
}

func (x *CarrierTos) GetNeedsDcbTosAcceptance() bool {
	if x != nil && x.NeedsDcbTosAcceptance != nil {
		return *x.NeedsDcbTosAcceptance
	}
	return false
}

func (x *CarrierTos) GetNeedsPiiTosAcceptance() bool {
	if x != nil && x.NeedsPiiTosAcceptance != nil {
		return *x.NeedsPiiTosAcceptance
	}
	return false
}

type CarrierTosEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     *string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Version *string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
}

func (x *CarrierTosEntry) Reset() {
	*x = CarrierTosEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarrierTosEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierTosEntry) ProtoMessage() {}

func (x *CarrierTosEntry) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierTosEntry.ProtoReflect.Descriptor instead.
func (*CarrierTosEntry) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{37}
}

func (x *CarrierTosEntry) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CarrierTosEntry) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

type CreditCardInstrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            *int32      `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	EscrowHandle    *string     `protobuf:"bytes,2,opt,name=escrowHandle" json:"escrowHandle,omitempty"`
	LastDigits      *string     `protobuf:"bytes,3,opt,name=lastDigits" json:"lastDigits,omitempty"`
	ExpirationMonth *int32      `protobuf:"varint,4,opt,name=expirationMonth" json:"expirationMonth,omitempty"`
	ExpirationYear  *int32      `protobuf:"varint,5,opt,name=expirationYear" json:"expirationYear,omitempty"`
	EscrowEfeParam  []*EfeParam `protobuf:"bytes,6,rep,name=escrowEfeParam" json:"escrowEfeParam,omitempty"`
}

func (x *CreditCardInstrument) Reset() {
	*x = CreditCardInstrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditCardInstrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditCardInstrument) ProtoMessage() {}

func (x *CreditCardInstrument) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditCardInstrument.ProtoReflect.Descriptor instead.
func (*CreditCardInstrument) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{38}
}

func (x *CreditCardInstrument) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CreditCardInstrument) GetEscrowHandle() string {
	if x != nil && x.EscrowHandle != nil {
		return *x.EscrowHandle
	}
	return ""
}

func (x *CreditCardInstrument) GetLastDigits() string {
	if x != nil && x.LastDigits != nil {
		return *x.LastDigits
	}
	return ""
}

func (x *CreditCardInstrument) GetExpirationMonth() int32 {
	if x != nil && x.ExpirationMonth != nil {
		return *x.ExpirationMonth
	}
	return 0
}

func (x *CreditCardInstrument) GetExpirationYear() int32 {
	if x != nil && x.ExpirationYear != nil {
		return *x.ExpirationYear
	}
	return 0
}

func (x *CreditCardInstrument) GetEscrowEfeParam() []*EfeParam {
	if x != nil {
		return x.EscrowEfeParam
	}
	return nil
}

type EfeParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *int32  `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *EfeParam) Reset() {
	*x = EfeParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EfeParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EfeParam) ProtoMessage() {}

func (x *EfeParam) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EfeParam.ProtoReflect.Descriptor instead.
func (*EfeParam) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{39}
}

func (x *EfeParam) GetKey() int32 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *EfeParam) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type InputValidationError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputField   *int32  `protobuf:"varint,1,opt,name=inputField" json:"inputField,omitempty"`
	ErrorMessage *string `protobuf:"bytes,2,opt,name=errorMessage" json:"errorMessage,omitempty"`
}

func (x *InputValidationError) Reset() {
	*x = InputValidationError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputValidationError) ProtoMessage() {}

func (x *InputValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputValidationError.ProtoReflect.Descriptor instead.
func (*InputValidationError) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{40}
}

func (x *InputValidationError) GetInputField() int32 {
	if x != nil && x.InputField != nil {
		return *x.InputField
	}
	return 0
}

func (x *InputValidationError) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type Instrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrumentId         *string                         `protobuf:"bytes,1,opt,name=instrumentId" json:"instrumentId,omitempty"`
	BillingAddress       *Address                        `protobuf:"bytes,2,opt,name=billingAddress" json:"billingAddress,omitempty"`
	CreditCard           *CreditCardInstrument           `protobuf:"bytes,3,opt,name=creditCard" json:"creditCard,omitempty"`
	CarrierBilling       *CarrierBillingInstrument       `protobuf:"bytes,4,opt,name=carrierBilling" json:"carrierBilling,omitempty"`
	BillingAddressSpec   *BillingAddressSpec             `protobuf:"bytes,5,opt,name=billingAddressSpec" json:"billingAddressSpec,omitempty"`
	InstrumentFamily     *int32                          `protobuf:"varint,6,opt,name=instrumentFamily" json:"instrumentFamily,omitempty"`
	CarrierBillingStatus *CarrierBillingInstrumentStatus `protobuf:"bytes,7,opt,name=carrierBillingStatus" json:"carrierBillingStatus,omitempty"`
	DisplayTitle         *string                         `protobuf:"bytes,8,opt,name=displayTitle" json:"displayTitle,omitempty"`
}

func (x *Instrument) Reset() {
	*x = Instrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instrument) ProtoMessage() {}

func (x *Instrument) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instrument.ProtoReflect.Descriptor instead.
func (*Instrument) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{41}
}

func (x *Instrument) GetInstrumentId() string {
	if x != nil && x.InstrumentId != nil {
		return *x.InstrumentId
	}
	return ""
}

func (x *Instrument) GetBillingAddress() *Address {
	if x != nil {
		return x.BillingAddress
	}
	return nil
}

func (x *Instrument) GetCreditCard() *CreditCardInstrument {
	if x != nil {
		return x.CreditCard
	}
	return nil
}

func (x *Instrument) GetCarrierBilling() *CarrierBillingInstrument {
	if x != nil {
		return x.CarrierBilling
	}
	return nil
}

func (x *Instrument) GetBillingAddressSpec() *BillingAddressSpec {
	if x != nil {
		return x.BillingAddressSpec
	}
	return nil
}

func (x *Instrument) GetInstrumentFamily() int32 {
	if x != nil && x.InstrumentFamily != nil {
		return *x.InstrumentFamily
	}
	return 0
}

func (x *Instrument) GetCarrierBillingStatus() *CarrierBillingInstrumentStatus {
	if x != nil {
		return x.CarrierBillingStatus
	}
	return nil
}

func (x *Instrument) GetDisplayTitle() string {
	if x != nil && x.DisplayTitle != nil {
		return *x.DisplayTitle
	}
	return ""
}

type PasswordPrompt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt            *string `protobuf:"bytes,1,opt,name=prompt" json:"prompt,omitempty"`
	ForgotPasswordUrl *string `protobuf:"bytes,2,opt,name=forgotPasswordUrl" json:"forgotPasswordUrl,omitempty"`
}

func (x *PasswordPrompt) Reset() {
	*x = PasswordPrompt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordPrompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordPrompt) ProtoMessage() {}

func (x *PasswordPrompt) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordPrompt.ProtoReflect.Descriptor instead.
func (*PasswordPrompt) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{42}
}

func (x *PasswordPrompt) GetPrompt() string {
	if x != nil && x.Prompt != nil {
		return *x.Prompt
	}
	return ""
}

func (x *PasswordPrompt) GetForgotPasswordUrl() string {
	if x != nil && x.ForgotPasswordUrl != nil {
		return *x.ForgotPasswordUrl
	}
	return ""
}

type ContainerMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowseUrl        *string  `protobuf:"bytes,1,opt,name=browseUrl" json:"browseUrl,omitempty"`
	NextPageUrl      *string  `protobuf:"bytes,2,opt,name=nextPageUrl" json:"nextPageUrl,omitempty"`
	Relevance        *float64 `protobuf:"fixed64,3,opt,name=relevance" json:"relevance,omitempty"`
	EstimatedResults *int64   `protobuf:"varint,4,opt,name=estimatedResults" json:"estimatedResults,omitempty"`
	AnalyticsCookie  *string  `protobuf:"bytes,5,opt,name=analyticsCookie" json:"analyticsCookie,omitempty"`
	Ordered          *bool    `protobuf:"varint,6,opt,name=ordered" json:"ordered,omitempty"`
}

func (x *ContainerMetadata) Reset() {
	*x = ContainerMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerMetadata) ProtoMessage() {}

func (x *ContainerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerMetadata.ProtoReflect.Descriptor instead.
func (*ContainerMetadata) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{43}
}

func (x *ContainerMetadata) GetBrowseUrl() string {
	if x != nil && x.BrowseUrl != nil {
		return *x.BrowseUrl
	}
	return ""
}

func (x *ContainerMetadata) GetNextPageUrl() string {
	if x != nil && x.NextPageUrl != nil {
		return *x.NextPageUrl
	}
	return ""
}

func (x *ContainerMetadata) GetRelevance() float64 {
	if x != nil && x.Relevance != nil {
		return *x.Relevance
	}
	return 0
}

func (x *ContainerMetadata) GetEstimatedResults() int64 {
	if x != nil && x.EstimatedResults != nil {
		return *x.EstimatedResults
	}
	return 0
}

func (x *ContainerMetadata) GetAnalyticsCookie() string {
	if x != nil && x.AnalyticsCookie != nil {
		return *x.AnalyticsCookie
	}
	return ""
}

func (x *ContainerMetadata) GetOrdered() bool {
	if x != nil && x.Ordered != nil {
		return *x.Ordered
	}
	return false
}

type DebugInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []string            `protobuf:"bytes,1,rep,name=message" json:"message,omitempty"`
	Timing  []*DebugInfo_Timing `protobuf:"group,2,rep,name=Timing,json=timing" json:"timing,omitempty"`
}

func (x *DebugInfo) Reset() {
	*x = DebugInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugInfo) ProtoMessage() {}

func (x *DebugInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugInfo.ProtoReflect.Descriptor instead.
func (*DebugInfo) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{44}
}

func (x *DebugInfo) GetMessage() []string {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *DebugInfo) GetTiming() []*DebugInfo_Timing {
	if x != nil {
		return x.Timing
	}
	return nil
}

type BulkDetailsEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc *DocV2 `protobuf:"bytes,1,opt,name=doc" json:"doc,omitempty"`
}

func (x *BulkDetailsEntry) Reset() {
	*x = BulkDetailsEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkDetailsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDetailsEntry) ProtoMessage() {}

func (x *BulkDetailsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDetailsEntry.ProtoReflect.Descriptor instead.
func (*BulkDetailsEntry) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{45}
}

func (x *BulkDetailsEntry) GetDoc() *DocV2 {
	if x != nil {
		return x.Doc
	}
	return nil
}

type BulkDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docid            []string `protobuf:"bytes,1,rep,name=docid" json:"docid,omitempty"`
	IncludeChildDocs *bool    `protobuf:"varint,2,opt,name=includeChildDocs" json:"includeChildDocs,omitempty"`
}

func (x *BulkDetailsRequest) Reset() {
	*x = BulkDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDetailsRequest) ProtoMessage() {}

func (x *BulkDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDetailsRequest.ProtoReflect.Descriptor instead.
func (*BulkDetailsRequest) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{46}
}

func (x *BulkDetailsRequest) GetDocid() []string {
	if x != nil {
		return x.Docid
	}
	return nil
}

func (x *BulkDetailsRequest) GetIncludeChildDocs() bool {
	if x != nil && x.IncludeChildDocs != nil {
		return *x.IncludeChildDocs
	}
	return false
}

type BulkDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry []*BulkDetailsEntry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
}

func (x *BulkDetailsResponse) Reset() {
	*x = BulkDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDetailsResponse) ProtoMessage() {}

func (x *BulkDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDetailsResponse.ProtoReflect.Descriptor instead.
func (*BulkDetailsResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{47}
}

func (x *BulkDetailsResponse) GetEntry() []*BulkDetailsEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type DetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocV1                       *DocV1    `protobuf:"bytes,1,opt,name=docV1" json:"docV1,omitempty"`
	AnalyticsCookie             *string   `protobuf:"bytes,2,opt,name=analyticsCookie" json:"analyticsCookie,omitempty"`
	UserReview                  *Review   `protobuf:"bytes,3,opt,name=userReview" json:"userReview,omitempty"`
	DocV2                       *DocV2    `protobuf:"bytes,4,opt,name=docV2" json:"docV2,omitempty"`
	FooterHtml                  *string   `protobuf:"bytes,5,opt,name=footerHtml" json:"footerHtml,omitempty"`
	Badge                       []*Badge  `protobuf:"bytes,7,rep,name=badge" json:"badge,omitempty"`
	Features                    *Features `protobuf:"bytes,12,opt,name=features" json:"features,omitempty"`
	DetailsStreamUrl            *string   `protobuf:"bytes,13,opt,name=detailsStreamUrl" json:"detailsStreamUrl,omitempty"`
	UserReviewUrl               *string   `protobuf:"bytes,14,opt,name=userReviewUrl" json:"userReviewUrl,omitempty"`
	PostAcquireDetailsStreamUrl *string   `protobuf:"bytes,17,opt,name=postAcquireDetailsStreamUrl" json:"postAcquireDetailsStreamUrl,omitempty"`
}

func (x *DetailsResponse) Reset() {
	*x = DetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailsResponse) ProtoMessage() {}

func (x *DetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailsResponse.ProtoReflect.Descriptor instead.
func (*DetailsResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{48}
}

func (x *DetailsResponse) GetDocV1() *DocV1 {
	if x != nil {
		return x.DocV1
	}
	return nil
}

func (x *DetailsResponse) GetAnalyticsCookie() string {
	if x != nil && x.AnalyticsCookie != nil {
		return *x.AnalyticsCookie
	}
	return ""
}

func (x *DetailsResponse) GetUserReview() *Review {
	if x != nil {
		return x.UserReview
	}
	return nil
}

func (x *DetailsResponse) GetDocV2() *DocV2 {
	if x != nil {
		return x.DocV2
	}
	return nil
}

func (x *DetailsResponse) GetFooterHtml() string {
	if x != nil && x.FooterHtml != nil {
		return *x.FooterHtml
	}
	return ""
}

func (x *DetailsResponse) GetBadge() []*Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *DetailsResponse) GetFeatures() *Features {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *DetailsResponse) GetDetailsStreamUrl() string {
	if x != nil && x.DetailsStreamUrl != nil {
		return *x.DetailsStreamUrl
	}
	return ""
}

func (x *DetailsResponse) GetUserReviewUrl() string {
	if x != nil && x.UserReviewUrl != nil {
		return *x.UserReviewUrl
	}
	return ""
}

func (x *DetailsResponse) GetPostAcquireDetailsStreamUrl() string {
	if x != nil && x.PostAcquireDetailsStreamUrl != nil {
		return *x.PostAcquireDetailsStreamUrl
	}
	return ""
}

type Badge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label           *string          `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Image           *Image           `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	BadgeContainer1 *BadgeContainer1 `protobuf:"bytes,4,opt,name=badgeContainer1" json:"badgeContainer1,omitempty"`
	Message         *string          `protobuf:"bytes,11,opt,name=message" json:"message,omitempty"`
}

func (x *Badge) Reset() {
	*x = Badge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Badge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Badge) ProtoMessage() {}

func (x *Badge) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Badge.ProtoReflect.Descriptor instead.
func (*Badge) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{49}
}

func (x *Badge) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *Badge) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Badge) GetBadgeContainer1() *BadgeContainer1 {
	if x != nil {
		return x.BadgeContainer1
	}
	return nil
}

func (x *Badge) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type BadgeContainer1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BadgeContainer2 *BadgeContainer2 `protobuf:"bytes,1,opt,name=badgeContainer2" json:"badgeContainer2,omitempty"`
}

func (x *BadgeContainer1) Reset() {
	*x = BadgeContainer1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadgeContainer1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadgeContainer1) ProtoMessage() {}

func (x *BadgeContainer1) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadgeContainer1.ProtoReflect.Descriptor instead.
func (*BadgeContainer1) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{50}
}

func (x *BadgeContainer1) GetBadgeContainer2() *BadgeContainer2 {
	if x != nil {
		return x.BadgeContainer2
	}
	return nil
}

type BadgeContainer2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BadgeLinkContainer *BadgeLinkContainer `protobuf:"bytes,2,opt,name=badgeLinkContainer" json:"badgeLinkContainer,omitempty"`
}

func (x *BadgeContainer2) Reset() {
	*x = BadgeContainer2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadgeContainer2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadgeContainer2) ProtoMessage() {}

func (x *BadgeContainer2) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadgeContainer2.ProtoReflect.Descriptor instead.
func (*BadgeContainer2) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{51}
}

func (x *BadgeContainer2) GetBadgeLinkContainer() *BadgeLinkContainer {
	if x != nil {
		return x.BadgeLinkContainer
	}
	return nil
}

type BadgeLinkContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link *string `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
}

func (x *BadgeLinkContainer) Reset() {
	*x = BadgeLinkContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadgeLinkContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadgeLinkContainer) ProtoMessage() {}

func (x *BadgeLinkContainer) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadgeLinkContainer.ProtoReflect.Descriptor instead.
func (*BadgeLinkContainer) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{52}
}

func (x *BadgeLinkContainer) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

type Features struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeaturePresence []*Feature `protobuf:"bytes,1,rep,name=featurePresence" json:"featurePresence,omitempty"`
	FeatureRating   []*Feature `protobuf:"bytes,2,rep,name=featureRating" json:"featureRating,omitempty"`
}

func (x *Features) Reset() {
	*x = Features{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Features) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Features) ProtoMessage() {}

func (x *Features) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Features.ProtoReflect.Descriptor instead.
func (*Features) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{53}
}

func (x *Features) GetFeaturePresence() []*Feature {
	if x != nil {
		return x.FeaturePresence
	}
	return nil
}

func (x *Features) GetFeatureRating() []*Feature {
	if x != nil {
		return x.FeatureRating
	}
	return nil
}

type Feature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label *string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Value *string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (x *Feature) Reset() {
	*x = Feature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feature) ProtoMessage() {}

func (x *Feature) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feature.ProtoReflect.Descriptor instead.
func (*Feature) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{54}
}

func (x *Feature) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *Feature) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type DeviceConfigurationProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TouchScreen            *int32   `protobuf:"varint,1,opt,name=touchScreen" json:"touchScreen,omitempty"`
	Keyboard               *int32   `protobuf:"varint,2,opt,name=keyboard" json:"keyboard,omitempty"`
	Navigation             *int32   `protobuf:"varint,3,opt,name=navigation" json:"navigation,omitempty"`
	ScreenLayout           *int32   `protobuf:"varint,4,opt,name=screenLayout" json:"screenLayout,omitempty"`
	HasHardKeyboard        *bool    `protobuf:"varint,5,opt,name=hasHardKeyboard" json:"hasHardKeyboard,omitempty"`
	HasFiveWayNavigation   *bool    `protobuf:"varint,6,opt,name=hasFiveWayNavigation" json:"hasFiveWayNavigation,omitempty"`
	ScreenDensity          *int32   `protobuf:"varint,7,opt,name=screenDensity" json:"screenDensity,omitempty"`
	GlEsVersion            *int32   `protobuf:"varint,8,opt,name=glEsVersion" json:"glEsVersion,omitempty"`
	SystemSharedLibrary    []string `protobuf:"bytes,9,rep,name=systemSharedLibrary" json:"systemSharedLibrary,omitempty"`
	SystemAvailableFeature []string `protobuf:"bytes,10,rep,name=systemAvailableFeature" json:"systemAvailableFeature,omitempty"`
	NativePlatform         []string `protobuf:"bytes,11,rep,name=nativePlatform" json:"nativePlatform,omitempty"`
	ScreenWidth            *int32   `protobuf:"varint,12,opt,name=screenWidth" json:"screenWidth,omitempty"`
	ScreenHeight           *int32   `protobuf:"varint,13,opt,name=screenHeight" json:"screenHeight,omitempty"`
	SystemSupportedLocale  []string `protobuf:"bytes,14,rep,name=systemSupportedLocale" json:"systemSupportedLocale,omitempty"`
	GlExtension            []string `protobuf:"bytes,15,rep,name=glExtension" json:"glExtension,omitempty"`
	DeviceClass            *int32   `protobuf:"varint,16,opt,name=deviceClass" json:"deviceClass,omitempty"`
	MaxApkDownloadSizeMb   *int32   `protobuf:"varint,17,opt,name=maxApkDownloadSizeMb" json:"maxApkDownloadSizeMb,omitempty"`
}

func (x *DeviceConfigurationProto) Reset() {
	*x = DeviceConfigurationProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceConfigurationProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConfigurationProto) ProtoMessage() {}

func (x *DeviceConfigurationProto) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceConfigurationProto.ProtoReflect.Descriptor instead.
func (*DeviceConfigurationProto) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{55}
}

func (x *DeviceConfigurationProto) GetTouchScreen() int32 {
	if x != nil && x.TouchScreen != nil {
		return *x.TouchScreen
	}
	return 0
}

func (x *DeviceConfigurationProto) GetKeyboard() int32 {
	if x != nil && x.Keyboard != nil {
		return *x.Keyboard
	}
	return 0
}

func (x *DeviceConfigurationProto) GetNavigation() int32 {
	if x != nil && x.Navigation != nil {
		return *x.Navigation
	}
	return 0
}

func (x *DeviceConfigurationProto) GetScreenLayout() int32 {
	if x != nil && x.ScreenLayout != nil {
		return *x.ScreenLayout
	}
	return 0
}

func (x *DeviceConfigurationProto) GetHasHardKeyboard() bool {
	if x != nil && x.HasHardKeyboard != nil {
		return *x.HasHardKeyboard
	}
	return false
}

func (x *DeviceConfigurationProto) GetHasFiveWayNavigation() bool {
	if x != nil && x.HasFiveWayNavigation != nil {
		return *x.HasFiveWayNavigation
	}
	return false
}

func (x *DeviceConfigurationProto) GetScreenDensity() int32 {
	if x != nil && x.ScreenDensity != nil {
		return *x.ScreenDensity
	}
	return 0
}

func (x *DeviceConfigurationProto) GetGlEsVersion() int32 {
	if x != nil && x.GlEsVersion != nil {
		return *x.GlEsVersion
	}
	return 0
}

func (x *DeviceConfigurationProto) GetSystemSharedLibrary() []string {
	if x != nil {
		return x.SystemSharedLibrary
	}
	return nil
}

func (x *DeviceConfigurationProto) GetSystemAvailableFeature() []string {
	if x != nil {
		return x.SystemAvailableFeature
	}
	return nil
}

func (x *DeviceConfigurationProto) GetNativePlatform() []string {
	if x != nil {
		return x.NativePlatform
	}
	return nil
}

func (x *DeviceConfigurationProto) GetScreenWidth() int32 {
	if x != nil && x.ScreenWidth != nil {
		return *x.ScreenWidth
	}
	return 0
}

func (x *DeviceConfigurationProto) GetScreenHeight() int32 {
	if x != nil && x.ScreenHeight != nil {
		return *x.ScreenHeight
	}
	return 0
}

func (x *DeviceConfigurationProto) GetSystemSupportedLocale() []string {
	if x != nil {
		return x.SystemSupportedLocale
	}
	return nil
}

func (x *DeviceConfigurationProto) GetGlExtension() []string {
	if x != nil {
		return x.GlExtension
	}
	return nil
}

func (x *DeviceConfigurationProto) GetDeviceClass() int32 {
	if x != nil && x.DeviceClass != nil {
		return *x.DeviceClass
	}
	return 0
}

func (x *DeviceConfigurationProto) GetMaxApkDownloadSizeMb() int32 {
	if x != nil && x.MaxApkDownloadSizeMb != nil {
		return *x.MaxApkDownloadSizeMb
	}
	return 0
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docid             *Docid             `protobuf:"bytes,1,opt,name=docid" json:"docid,omitempty"`
	FetchDocid        *Docid             `protobuf:"bytes,2,opt,name=fetchDocid" json:"fetchDocid,omitempty"`
	SampleDocid       *Docid             `protobuf:"bytes,3,opt,name=sampleDocid" json:"sampleDocid,omitempty"`
	Title             *string            `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Url               *string            `protobuf:"bytes,5,opt,name=url" json:"url,omitempty"`
	Snippet           []string           `protobuf:"bytes,6,rep,name=snippet" json:"snippet,omitempty"`
	PriceDeprecated   *Offer             `protobuf:"bytes,7,opt,name=priceDeprecated" json:"priceDeprecated,omitempty"`
	Availability      *Availability      `protobuf:"bytes,9,opt,name=availability" json:"availability,omitempty"`
	Image             []*Image           `protobuf:"bytes,10,rep,name=image" json:"image,omitempty"`
	Child             []*Document        `protobuf:"bytes,11,rep,name=child" json:"child,omitempty"`
	AggregateRating   *AggregateRating   `protobuf:"bytes,13,opt,name=aggregateRating" json:"aggregateRating,omitempty"`
	Offer             []*Offer           `protobuf:"bytes,14,rep,name=offer" json:"offer,omitempty"`
	TranslatedSnippet []*TranslatedText  `protobuf:"bytes,15,rep,name=translatedSnippet" json:"translatedSnippet,omitempty"`
	DocumentVariant   []*DocumentVariant `protobuf:"bytes,16,rep,name=documentVariant" json:"documentVariant,omitempty"`
	CategoryId        []string           `protobuf:"bytes,17,rep,name=categoryId" json:"categoryId,omitempty"`
	Decoration        []*Document        `protobuf:"bytes,18,rep,name=decoration" json:"decoration,omitempty"`
	Parent            []*Document        `protobuf:"bytes,19,rep,name=parent" json:"parent,omitempty"`
	PrivacyPolicyUrl  *string            `protobuf:"bytes,20,opt,name=privacyPolicyUrl" json:"privacyPolicyUrl,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{56}
}

func (x *Document) GetDocid() *Docid {
	if x != nil {
		return x.Docid
	}
	return nil
}

func (x *Document) GetFetchDocid() *Docid {
	if x != nil {
		return x.FetchDocid
	}
	return nil
}

func (x *Document) GetSampleDocid() *Docid {
	if x != nil {
		return x.SampleDocid
	}
	return nil
}

func (x *Document) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Document) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Document) GetSnippet() []string {
	if x != nil {
		return x.Snippet
	}
	return nil
}

func (x *Document) GetPriceDeprecated() *Offer {
	if x != nil {
		return x.PriceDeprecated
	}
	return nil
}

func (x *Document) GetAvailability() *Availability {
	if x != nil {
		return x.Availability
	}
	return nil
}

func (x *Document) GetImage() []*Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Document) GetChild() []*Document {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *Document) GetAggregateRating() *AggregateRating {
	if x != nil {
		return x.AggregateRating
	}
	return nil
}

func (x *Document) GetOffer() []*Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *Document) GetTranslatedSnippet() []*TranslatedText {
	if x != nil {
		return x.TranslatedSnippet
	}
	return nil
}

func (x *Document) GetDocumentVariant() []*DocumentVariant {
	if x != nil {
		return x.DocumentVariant
	}
	return nil
}

func (x *Document) GetCategoryId() []string {
	if x != nil {
		return x.CategoryId
	}
	return nil
}

func (x *Document) GetDecoration() []*Document {
	if x != nil {
		return x.Decoration
	}
	return nil
}

func (x *Document) GetParent() []*Document {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *Document) GetPrivacyPolicyUrl() string {
	if x != nil && x.PrivacyPolicyUrl != nil {
		return *x.PrivacyPolicyUrl
	}
	return ""
}

type DocumentVariant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VariationType   *int32            `protobuf:"varint,1,opt,name=variationType" json:"variationType,omitempty"`
	Rule            *Rule             `protobuf:"bytes,2,opt,name=rule" json:"rule,omitempty"`
	Title           *string           `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Snippet         []string          `protobuf:"bytes,4,rep,name=snippet" json:"snippet,omitempty"`
	RecentChanges   *string           `protobuf:"bytes,5,opt,name=recentChanges" json:"recentChanges,omitempty"`
	AutoTranslation []*TranslatedText `protobuf:"bytes,6,rep,name=autoTranslation" json:"autoTranslation,omitempty"`
	Offer           []*Offer          `protobuf:"bytes,7,rep,name=offer" json:"offer,omitempty"`
	ChannelId       *int64            `protobuf:"varint,9,opt,name=channelId" json:"channelId,omitempty"`
	Child           []*Document       `protobuf:"bytes,10,rep,name=child" json:"child,omitempty"`
	Decoration      []*Document       `protobuf:"bytes,11,rep,name=decoration" json:"decoration,omitempty"`
}

func (x *DocumentVariant) Reset() {
	*x = DocumentVariant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentVariant) ProtoMessage() {}

func (x *DocumentVariant) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentVariant.ProtoReflect.Descriptor instead.
func (*DocumentVariant) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{57}
}

func (x *DocumentVariant) GetVariationType() int32 {
	if x != nil && x.VariationType != nil {
		return *x.VariationType
	}
	return 0
}

func (x *DocumentVariant) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *DocumentVariant) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *DocumentVariant) GetSnippet() []string {
	if x != nil {
		return x.Snippet
	}
	return nil
}

func (x *DocumentVariant) GetRecentChanges() string {
	if x != nil && x.RecentChanges != nil {
		return *x.RecentChanges
	}
	return ""
}

func (x *DocumentVariant) GetAutoTranslation() []*TranslatedText {
	if x != nil {
		return x.AutoTranslation
	}
	return nil
}

func (x *DocumentVariant) GetOffer() []*Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *DocumentVariant) GetChannelId() int64 {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return 0
}

func (x *DocumentVariant) GetChild() []*Document {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *DocumentVariant) GetDecoration() []*Document {
	if x != nil {
		return x.Decoration
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageType              *int32           `protobuf:"varint,1,opt,name=imageType" json:"imageType,omitempty"`
	Dimension              *Image_Dimension `protobuf:"group,2,opt,name=Dimension,json=dimension" json:"dimension,omitempty"`
	ImageUrl               *string          `protobuf:"bytes,5,opt,name=imageUrl" json:"imageUrl,omitempty"`
	AltTextLocalized       *string          `protobuf:"bytes,6,opt,name=altTextLocalized" json:"altTextLocalized,omitempty"`
	SecureUrl              *string          `protobuf:"bytes,7,opt,name=secureUrl" json:"secureUrl,omitempty"`
	PositionInSequence     *int32           `protobuf:"varint,8,opt,name=positionInSequence" json:"positionInSequence,omitempty"`
	SupportsFifeUrlOptions *bool            `protobuf:"varint,9,opt,name=supportsFifeUrlOptions" json:"supportsFifeUrlOptions,omitempty"`
	Citation               *Image_Citation  `protobuf:"group,10,opt,name=Citation,json=citation" json:"citation,omitempty"`
	Color                  *string          `protobuf:"bytes,15,opt,name=color" json:"color,omitempty"`
	ScreenshotSetNumber    *int32           `protobuf:"varint,21,opt,name=screenshotSetNumber" json:"screenshotSetNumber,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{58}
}

func (x *Image) GetImageType() int32 {
	if x != nil && x.ImageType != nil {
		return *x.ImageType
	}
	return 0
}

func (x *Image) GetDimension() *Image_Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *Image) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *Image) GetAltTextLocalized() string {
	if x != nil && x.AltTextLocalized != nil {
		return *x.AltTextLocalized
	}
	return ""
}

func (x *Image) GetSecureUrl() string {
	if x != nil && x.SecureUrl != nil {
		return *x.SecureUrl
	}
	return ""
}

func (x *Image) GetPositionInSequence() int32 {
	if x != nil && x.PositionInSequence != nil {
		return *x.PositionInSequence
	}
	return 0
}

func (x *Image) GetSupportsFifeUrlOptions() bool {
	if x != nil && x.SupportsFifeUrlOptions != nil {
		return *x.SupportsFifeUrlOptions
	}
	return false
}

func (x *Image) GetCitation() *Image_Citation {
	if x != nil {
		return x.Citation
	}
	return nil
}

func (x *Image) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *Image) GetScreenshotSetNumber() int32 {
	if x != nil && x.ScreenshotSetNumber != nil {
		return *x.ScreenshotSetNumber
	}
	return 0
}

type TranslatedText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text         *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	SourceLocale *string `protobuf:"bytes,2,opt,name=sourceLocale" json:"sourceLocale,omitempty"`
	TargetLocale *string `protobuf:"bytes,3,opt,name=targetLocale" json:"targetLocale,omitempty"`
}

func (x *TranslatedText) Reset() {
	*x = TranslatedText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslatedText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslatedText) ProtoMessage() {}

func (x *TranslatedText) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslatedText.ProtoReflect.Descriptor instead.
func (*TranslatedText) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{59}
}

func (x *TranslatedText) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *TranslatedText) GetSourceLocale() string {
	if x != nil && x.SourceLocale != nil {
		return *x.SourceLocale
	}
	return ""
}

func (x *TranslatedText) GetTargetLocale() string {
	if x != nil && x.TargetLocale != nil {
		return *x.TargetLocale
	}
	return ""
}

type PlusOneData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetByUser     *bool         `protobuf:"varint,1,opt,name=setByUser" json:"setByUser,omitempty"`
	Total         *int64        `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	CirclesTotal  *int64        `protobuf:"varint,3,opt,name=circlesTotal" json:"circlesTotal,omitempty"`
	CirclesPeople []*PlusPerson `protobuf:"bytes,4,rep,name=circlesPeople" json:"circlesPeople,omitempty"`
}

func (x *PlusOneData) Reset() {
	*x = PlusOneData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlusOneData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlusOneData) ProtoMessage() {}

func (x *PlusOneData) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlusOneData.ProtoReflect.Descriptor instead.
func (*PlusOneData) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{60}
}

func (x *PlusOneData) GetSetByUser() bool {
	if x != nil && x.SetByUser != nil {
		return *x.SetByUser
	}
	return false
}

func (x *PlusOneData) GetTotal() int64 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *PlusOneData) GetCirclesTotal() int64 {
	if x != nil && x.CirclesTotal != nil {
		return *x.CirclesTotal
	}
	return 0
}

func (x *PlusOneData) GetCirclesPeople() []*PlusPerson {
	if x != nil {
		return x.CirclesPeople
	}
	return nil
}

type PlusPerson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName     *string `protobuf:"bytes,2,opt,name=displayName" json:"displayName,omitempty"`
	ProfileImageUrl *string `protobuf:"bytes,4,opt,name=profileImageUrl" json:"profileImageUrl,omitempty"`
}

func (x *PlusPerson) Reset() {
	*x = PlusPerson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlusPerson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlusPerson) ProtoMessage() {}

func (x *PlusPerson) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlusPerson.ProtoReflect.Descriptor instead.
func (*PlusPerson) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{61}
}

func (x *PlusPerson) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *PlusPerson) GetProfileImageUrl() string {
	if x != nil && x.ProfileImageUrl != nil {
		return *x.ProfileImageUrl
	}
	return ""
}

type AlbumDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          *string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Details       *MusicDetails  `protobuf:"bytes,2,opt,name=details" json:"details,omitempty"`
	DisplayArtist *ArtistDetails `protobuf:"bytes,3,opt,name=displayArtist" json:"displayArtist,omitempty"`
}

func (x *AlbumDetails) Reset() {
	*x = AlbumDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumDetails) ProtoMessage() {}

func (x *AlbumDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumDetails.ProtoReflect.Descriptor instead.
func (*AlbumDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{62}
}

func (x *AlbumDetails) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AlbumDetails) GetDetails() *MusicDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AlbumDetails) GetDisplayArtist() *ArtistDetails {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

type AppDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperName      *string             `protobuf:"bytes,1,opt,name=developerName" json:"developerName,omitempty"`
	MajorVersionNumber *int32              `protobuf:"varint,2,opt,name=majorVersionNumber" json:"majorVersionNumber,omitempty"`
	VersionCode        *int32              `protobuf:"varint,3,opt,name=versionCode" json:"versionCode,omitempty"`
	VersionString      *string             `protobuf:"bytes,4,opt,name=versionString" json:"versionString,omitempty"`
	Title              *string             `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	AppCategory        []string            `protobuf:"bytes,7,rep,name=appCategory" json:"appCategory,omitempty"`
	ContentRating      *int32              `protobuf:"varint,8,opt,name=contentRating" json:"contentRating,omitempty"`
	InstallationSize   *int64              `protobuf:"varint,9,opt,name=installationSize" json:"installationSize,omitempty"`
	Permission         []string            `protobuf:"bytes,10,rep,name=permission" json:"permission,omitempty"`
	DeveloperEmail     *string             `protobuf:"bytes,11,opt,name=developerEmail" json:"developerEmail,omitempty"`
	DeveloperWebsite   *string             `protobuf:"bytes,12,opt,name=developerWebsite" json:"developerWebsite,omitempty"`
	NumDownloads       *string             `protobuf:"bytes,13,opt,name=numDownloads" json:"numDownloads,omitempty"`
	PackageName        *string             `protobuf:"bytes,14,opt,name=packageName" json:"packageName,omitempty"`
	RecentChangesHtml  *string             `protobuf:"bytes,15,opt,name=recentChangesHtml" json:"recentChangesHtml,omitempty"`
	UploadDate         *string             `protobuf:"bytes,16,opt,name=uploadDate" json:"uploadDate,omitempty"`
	File               []*FileMetadata     `protobuf:"bytes,17,rep,name=file" json:"file,omitempty"`
	AppType            *string             `protobuf:"bytes,18,opt,name=appType" json:"appType,omitempty"`
	Unstable           *bool               `protobuf:"varint,21,opt,name=unstable" json:"unstable,omitempty"`
	HasInstantLink     *bool               `protobuf:"varint,24,opt,name=hasInstantLink" json:"hasInstantLink,omitempty"`
	ContainsAds        *string             `protobuf:"bytes,30,opt,name=containsAds" json:"containsAds,omitempty"`
	Dependencies       *Dependencies       `protobuf:"bytes,34,opt,name=dependencies" json:"dependencies,omitempty"`
	TestingProgramInfo *TestingProgramInfo `protobuf:"bytes,35,opt,name=testingProgramInfo" json:"testingProgramInfo,omitempty"`
	EarlyAccessInfo    *EarlyAccessInfo    `protobuf:"bytes,36,opt,name=earlyAccessInfo" json:"earlyAccessInfo,omitempty"`
	InstantLink        *string             `protobuf:"bytes,43,opt,name=instantLink" json:"instantLink,omitempty"`
	DeveloperAddress   *string             `protobuf:"bytes,45,opt,name=developerAddress" json:"developerAddress,omitempty"`
}

func (x *AppDetails) Reset() {
	*x = AppDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDetails) ProtoMessage() {}

func (x *AppDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDetails.ProtoReflect.Descriptor instead.
func (*AppDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{63}
}

func (x *AppDetails) GetDeveloperName() string {
	if x != nil && x.DeveloperName != nil {
		return *x.DeveloperName
	}
	return ""
}

func (x *AppDetails) GetMajorVersionNumber() int32 {
	if x != nil && x.MajorVersionNumber != nil {
		return *x.MajorVersionNumber
	}
	return 0
}

func (x *AppDetails) GetVersionCode() int32 {
	if x != nil && x.VersionCode != nil {
		return *x.VersionCode
	}
	return 0
}

func (x *AppDetails) GetVersionString() string {
	if x != nil && x.VersionString != nil {
		return *x.VersionString
	}
	return ""
}

func (x *AppDetails) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *AppDetails) GetAppCategory() []string {
	if x != nil {
		return x.AppCategory
	}
	return nil
}

func (x *AppDetails) GetContentRating() int32 {
	if x != nil && x.ContentRating != nil {
		return *x.ContentRating
	}
	return 0
}

func (x *AppDetails) GetInstallationSize() int64 {
	if x != nil && x.InstallationSize != nil {
		return *x.InstallationSize
	}
	return 0
}

func (x *AppDetails) GetPermission() []string {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *AppDetails) GetDeveloperEmail() string {
	if x != nil && x.DeveloperEmail != nil {
		return *x.DeveloperEmail
	}
	return ""
}

func (x *AppDetails) GetDeveloperWebsite() string {
	if x != nil && x.DeveloperWebsite != nil {
		return *x.DeveloperWebsite
	}
	return ""
}

func (x *AppDetails) GetNumDownloads() string {
	if x != nil && x.NumDownloads != nil {
		return *x.NumDownloads
	}
	return ""
}

func (x *AppDetails) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

func (x *AppDetails) GetRecentChangesHtml() string {
	if x != nil && x.RecentChangesHtml != nil {
		return *x.RecentChangesHtml
	}
	return ""
}

func (x *AppDetails) GetUploadDate() string {
	if x != nil && x.UploadDate != nil {
		return *x.UploadDate
	}
	return ""
}

func (x *AppDetails) GetFile() []*FileMetadata {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *AppDetails) GetAppType() string {
	if x != nil && x.AppType != nil {
		return *x.AppType
	}
	return ""
}

func (x *AppDetails) GetUnstable() bool {
	if x != nil && x.Unstable != nil {
		return *x.Unstable
	}
	return false
}

func (x *AppDetails) GetHasInstantLink() bool {
	if x != nil && x.HasInstantLink != nil {
		return *x.HasInstantLink
	}
	return false
}

func (x *AppDetails) GetContainsAds() string {
	if x != nil && x.ContainsAds != nil {
		return *x.ContainsAds
	}
	return ""
}

func (x *AppDetails) GetDependencies() *Dependencies {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *AppDetails) GetTestingProgramInfo() *TestingProgramInfo {
	if x != nil {
		return x.TestingProgramInfo
	}
	return nil
}

func (x *AppDetails) GetEarlyAccessInfo() *EarlyAccessInfo {
	if x != nil {
		return x.EarlyAccessInfo
	}
	return nil
}

func (x *AppDetails) GetInstantLink() string {
	if x != nil && x.InstantLink != nil {
		return *x.InstantLink
	}
	return ""
}

func (x *AppDetails) GetDeveloperAddress() string {
	if x != nil && x.DeveloperAddress != nil {
		return *x.DeveloperAddress
	}
	return ""
}

type Dependencies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unknown1   *int32        `protobuf:"varint,1,opt,name=unknown1" json:"unknown1,omitempty"`
	Unknown2   *int64        `protobuf:"varint,2,opt,name=unknown2" json:"unknown2,omitempty"`
	Dependency []*Dependency `protobuf:"bytes,3,rep,name=dependency" json:"dependency,omitempty"`
	Unknown3   *int32        `protobuf:"varint,4,opt,name=unknown3" json:"unknown3,omitempty"`
}

func (x *Dependencies) Reset() {
	*x = Dependencies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dependencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dependencies) ProtoMessage() {}

func (x *Dependencies) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dependencies.ProtoReflect.Descriptor instead.
func (*Dependencies) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{64}
}

func (x *Dependencies) GetUnknown1() int32 {
	if x != nil && x.Unknown1 != nil {
		return *x.Unknown1
	}
	return 0
}

func (x *Dependencies) GetUnknown2() int64 {
	if x != nil && x.Unknown2 != nil {
		return *x.Unknown2
	}
	return 0
}

func (x *Dependencies) GetDependency() []*Dependency {
	if x != nil {
		return x.Dependency
	}
	return nil
}

func (x *Dependencies) GetUnknown3() int32 {
	if x != nil && x.Unknown3 != nil {
		return *x.Unknown3
	}
	return 0
}

type Dependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageName *string `protobuf:"bytes,1,opt,name=packageName" json:"packageName,omitempty"`
	Version     *int32  `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	Unknown4    *int32  `protobuf:"varint,4,opt,name=unknown4" json:"unknown4,omitempty"`
}

func (x *Dependency) Reset() {
	*x = Dependency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dependency) ProtoMessage() {}

func (x *Dependency) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dependency.ProtoReflect.Descriptor instead.
func (*Dependency) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{65}
}

func (x *Dependency) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

func (x *Dependency) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *Dependency) GetUnknown4() int32 {
	if x != nil && x.Unknown4 != nil {
		return *x.Unknown4
	}
	return 0
}

type TestingProgramInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscribed          *bool   `protobuf:"varint,2,opt,name=subscribed" json:"subscribed,omitempty"`
	Subscribed1         *bool   `protobuf:"varint,3,opt,name=subscribed1" json:"subscribed1,omitempty"`
	TestingProgramEmail *string `protobuf:"bytes,5,opt,name=testingProgramEmail" json:"testingProgramEmail,omitempty"`
}

func (x *TestingProgramInfo) Reset() {
	*x = TestingProgramInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramInfo) ProtoMessage() {}

func (x *TestingProgramInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramInfo.ProtoReflect.Descriptor instead.
func (*TestingProgramInfo) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{66}
}

func (x *TestingProgramInfo) GetSubscribed() bool {
	if x != nil && x.Subscribed != nil {
		return *x.Subscribed
	}
	return false
}

func (x *TestingProgramInfo) GetSubscribed1() bool {
	if x != nil && x.Subscribed1 != nil {
		return *x.Subscribed1
	}
	return false
}

func (x *TestingProgramInfo) GetTestingProgramEmail() string {
	if x != nil && x.TestingProgramEmail != nil {
		return *x.TestingProgramEmail
	}
	return ""
}

type EarlyAccessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email *string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
}

func (x *EarlyAccessInfo) Reset() {
	*x = EarlyAccessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarlyAccessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarlyAccessInfo) ProtoMessage() {}

func (x *EarlyAccessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarlyAccessInfo.ProtoReflect.Descriptor instead.
func (*EarlyAccessInfo) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{67}
}

func (x *EarlyAccessInfo) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

type ArtistDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetailsUrl    *string              `protobuf:"bytes,1,opt,name=detailsUrl" json:"detailsUrl,omitempty"`
	Name          *string              `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ExternalLinks *ArtistExternalLinks `protobuf:"bytes,3,opt,name=externalLinks" json:"externalLinks,omitempty"`
}

func (x *ArtistDetails) Reset() {
	*x = ArtistDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistDetails) ProtoMessage() {}

func (x *ArtistDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistDetails.ProtoReflect.Descriptor instead.
func (*ArtistDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{68}
}

func (x *ArtistDetails) GetDetailsUrl() string {
	if x != nil && x.DetailsUrl != nil {
		return *x.DetailsUrl
	}
	return ""
}

func (x *ArtistDetails) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ArtistDetails) GetExternalLinks() *ArtistExternalLinks {
	if x != nil {
		return x.ExternalLinks
	}
	return nil
}

type ArtistExternalLinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebsiteUrl           []string `protobuf:"bytes,1,rep,name=websiteUrl" json:"websiteUrl,omitempty"`
	GooglePlusProfileUrl *string  `protobuf:"bytes,2,opt,name=googlePlusProfileUrl" json:"googlePlusProfileUrl,omitempty"`
	YoutubeChannelUrl    *string  `protobuf:"bytes,3,opt,name=youtubeChannelUrl" json:"youtubeChannelUrl,omitempty"`
}

func (x *ArtistExternalLinks) Reset() {
	*x = ArtistExternalLinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistExternalLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistExternalLinks) ProtoMessage() {}

func (x *ArtistExternalLinks) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistExternalLinks.ProtoReflect.Descriptor instead.
func (*ArtistExternalLinks) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{69}
}

func (x *ArtistExternalLinks) GetWebsiteUrl() []string {
	if x != nil {
		return x.WebsiteUrl
	}
	return nil
}

func (x *ArtistExternalLinks) GetGooglePlusProfileUrl() string {
	if x != nil && x.GooglePlusProfileUrl != nil {
		return *x.GooglePlusProfileUrl
	}
	return ""
}

func (x *ArtistExternalLinks) GetYoutubeChannelUrl() string {
	if x != nil && x.YoutubeChannelUrl != nil {
		return *x.YoutubeChannelUrl
	}
	return ""
}

type DocumentDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppDetails          *AppDetails          `protobuf:"bytes,1,opt,name=appDetails" json:"appDetails,omitempty"`
	AlbumDetails        *AlbumDetails        `protobuf:"bytes,2,opt,name=albumDetails" json:"albumDetails,omitempty"`
	ArtistDetails       *ArtistDetails       `protobuf:"bytes,3,opt,name=artistDetails" json:"artistDetails,omitempty"`
	SongDetails         *SongDetails         `protobuf:"bytes,4,opt,name=songDetails" json:"songDetails,omitempty"`
	BookDetails         *BookDetails         `protobuf:"bytes,5,opt,name=bookDetails" json:"bookDetails,omitempty"`
	VideoDetails        *VideoDetails        `protobuf:"bytes,6,opt,name=videoDetails" json:"videoDetails,omitempty"`
	SubscriptionDetails *SubscriptionDetails `protobuf:"bytes,7,opt,name=subscriptionDetails" json:"subscriptionDetails,omitempty"`
	MagazineDetails     *MagazineDetails     `protobuf:"bytes,8,opt,name=magazineDetails" json:"magazineDetails,omitempty"`
	TvShowDetails       *TvShowDetails       `protobuf:"bytes,9,opt,name=tvShowDetails" json:"tvShowDetails,omitempty"`
	TvSeasonDetails     *TvSeasonDetails     `protobuf:"bytes,10,opt,name=tvSeasonDetails" json:"tvSeasonDetails,omitempty"`
	TvEpisodeDetails    *TvEpisodeDetails    `protobuf:"bytes,11,opt,name=tvEpisodeDetails" json:"tvEpisodeDetails,omitempty"`
}

func (x *DocumentDetails) Reset() {
	*x = DocumentDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentDetails) ProtoMessage() {}

func (x *DocumentDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentDetails.ProtoReflect.Descriptor instead.
func (*DocumentDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{70}
}

func (x *DocumentDetails) GetAppDetails() *AppDetails {
	if x != nil {
		return x.AppDetails
	}
	return nil
}

func (x *DocumentDetails) GetAlbumDetails() *AlbumDetails {
	if x != nil {
		return x.AlbumDetails
	}
	return nil
}

func (x *DocumentDetails) GetArtistDetails() *ArtistDetails {
	if x != nil {
		return x.ArtistDetails
	}
	return nil
}

func (x *DocumentDetails) GetSongDetails() *SongDetails {
	if x != nil {
		return x.SongDetails
	}
	return nil
}

func (x *DocumentDetails) GetBookDetails() *BookDetails {
	if x != nil {
		return x.BookDetails
	}
	return nil
}

func (x *DocumentDetails) GetVideoDetails() *VideoDetails {
	if x != nil {
		return x.VideoDetails
	}
	return nil
}

func (x *DocumentDetails) GetSubscriptionDetails() *SubscriptionDetails {
	if x != nil {
		return x.SubscriptionDetails
	}
	return nil
}

func (x *DocumentDetails) GetMagazineDetails() *MagazineDetails {
	if x != nil {
		return x.MagazineDetails
	}
	return nil
}

func (x *DocumentDetails) GetTvShowDetails() *TvShowDetails {
	if x != nil {
		return x.TvShowDetails
	}
	return nil
}

func (x *DocumentDetails) GetTvSeasonDetails() *TvSeasonDetails {
	if x != nil {
		return x.TvSeasonDetails
	}
	return nil
}

func (x *DocumentDetails) GetTvEpisodeDetails() *TvEpisodeDetails {
	if x != nil {
		return x.TvEpisodeDetails
	}
	return nil
}

type FileMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType    *int32 `protobuf:"varint,1,opt,name=fileType" json:"fileType,omitempty"`
	VersionCode *int32 `protobuf:"varint,2,opt,name=versionCode" json:"versionCode,omitempty"`
	Size        *int64 `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{71}
}

func (x *FileMetadata) GetFileType() int32 {
	if x != nil && x.FileType != nil {
		return *x.FileType
	}
	return 0
}

func (x *FileMetadata) GetVersionCode() int32 {
	if x != nil && x.VersionCode != nil {
		return *x.VersionCode
	}
	return 0
}

func (x *FileMetadata) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

type MagazineDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentDetailsUrl                  *string `protobuf:"bytes,1,opt,name=parentDetailsUrl" json:"parentDetailsUrl,omitempty"`
	DeviceAvailabilityDescriptionHtml *string `protobuf:"bytes,2,opt,name=deviceAvailabilityDescriptionHtml" json:"deviceAvailabilityDescriptionHtml,omitempty"`
	PsvDescription                    *string `protobuf:"bytes,3,opt,name=psvDescription" json:"psvDescription,omitempty"`
	DeliveryFrequencyDescription      *string `protobuf:"bytes,4,opt,name=deliveryFrequencyDescription" json:"deliveryFrequencyDescription,omitempty"`
}

func (x *MagazineDetails) Reset() {
	*x = MagazineDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MagazineDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagazineDetails) ProtoMessage() {}

func (x *MagazineDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagazineDetails.ProtoReflect.Descriptor instead.
func (*MagazineDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{72}
}

func (x *MagazineDetails) GetParentDetailsUrl() string {
	if x != nil && x.ParentDetailsUrl != nil {
		return *x.ParentDetailsUrl
	}
	return ""
}

func (x *MagazineDetails) GetDeviceAvailabilityDescriptionHtml() string {
	if x != nil && x.DeviceAvailabilityDescriptionHtml != nil {
		return *x.DeviceAvailabilityDescriptionHtml
	}
	return ""
}

func (x *MagazineDetails) GetPsvDescription() string {
	if x != nil && x.PsvDescription != nil {
		return *x.PsvDescription
	}
	return ""
}

func (x *MagazineDetails) GetDeliveryFrequencyDescription() string {
	if x != nil && x.DeliveryFrequencyDescription != nil {
		return *x.DeliveryFrequencyDescription
	}
	return ""
}

type MusicDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Censoring           *int32           `protobuf:"varint,1,opt,name=censoring" json:"censoring,omitempty"`
	DurationSec         *int32           `protobuf:"varint,2,opt,name=durationSec" json:"durationSec,omitempty"`
	OriginalReleaseDate *string          `protobuf:"bytes,3,opt,name=originalReleaseDate" json:"originalReleaseDate,omitempty"`
	Label               *string          `protobuf:"bytes,4,opt,name=label" json:"label,omitempty"`
	Artist              []*ArtistDetails `protobuf:"bytes,5,rep,name=artist" json:"artist,omitempty"`
	Genre               []string         `protobuf:"bytes,6,rep,name=genre" json:"genre,omitempty"`
	ReleaseDate         *string          `protobuf:"bytes,7,opt,name=releaseDate" json:"releaseDate,omitempty"`
	ReleaseType         []int32          `protobuf:"varint,8,rep,name=releaseType" json:"releaseType,omitempty"`
}

func (x *MusicDetails) Reset() {
	*x = MusicDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicDetails) ProtoMessage() {}

func (x *MusicDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicDetails.ProtoReflect.Descriptor instead.
func (*MusicDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{73}
}

func (x *MusicDetails) GetCensoring() int32 {
	if x != nil && x.Censoring != nil {
		return *x.Censoring
	}
	return 0
}

func (x *MusicDetails) GetDurationSec() int32 {
	if x != nil && x.DurationSec != nil {
		return *x.DurationSec
	}
	return 0
}

func (x *MusicDetails) GetOriginalReleaseDate() string {
	if x != nil && x.OriginalReleaseDate != nil {
		return *x.OriginalReleaseDate
	}
	return ""
}

func (x *MusicDetails) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *MusicDetails) GetArtist() []*ArtistDetails {
	if x != nil {
		return x.Artist
	}
	return nil
}

func (x *MusicDetails) GetGenre() []string {
	if x != nil {
		return x.Genre
	}
	return nil
}

func (x *MusicDetails) GetReleaseDate() string {
	if x != nil && x.ReleaseDate != nil {
		return *x.ReleaseDate
	}
	return ""
}

func (x *MusicDetails) GetReleaseType() []int32 {
	if x != nil {
		return x.ReleaseType
	}
	return nil
}

type SongDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          *string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Details       *MusicDetails  `protobuf:"bytes,2,opt,name=details" json:"details,omitempty"`
	AlbumName     *string        `protobuf:"bytes,3,opt,name=albumName" json:"albumName,omitempty"`
	TrackNumber   *int32         `protobuf:"varint,4,opt,name=trackNumber" json:"trackNumber,omitempty"`
	PreviewUrl    *string        `protobuf:"bytes,5,opt,name=previewUrl" json:"previewUrl,omitempty"`
	DisplayArtist *ArtistDetails `protobuf:"bytes,6,opt,name=displayArtist" json:"displayArtist,omitempty"`
}

func (x *SongDetails) Reset() {
	*x = SongDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SongDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SongDetails) ProtoMessage() {}

func (x *SongDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SongDetails.ProtoReflect.Descriptor instead.
func (*SongDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{74}
}

func (x *SongDetails) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SongDetails) GetDetails() *MusicDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *SongDetails) GetAlbumName() string {
	if x != nil && x.AlbumName != nil {
		return *x.AlbumName
	}
	return ""
}

func (x *SongDetails) GetTrackNumber() int32 {
	if x != nil && x.TrackNumber != nil {
		return *x.TrackNumber
	}
	return 0
}

func (x *SongDetails) GetPreviewUrl() string {
	if x != nil && x.PreviewUrl != nil {
		return *x.PreviewUrl
	}
	return ""
}

func (x *SongDetails) GetDisplayArtist() *ArtistDetails {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

type SubscriptionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionPeriod *int32 `protobuf:"varint,1,opt,name=subscriptionPeriod" json:"subscriptionPeriod,omitempty"`
}

func (x *SubscriptionDetails) Reset() {
	*x = SubscriptionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionDetails) ProtoMessage() {}

func (x *SubscriptionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionDetails.ProtoReflect.Descriptor instead.
func (*SubscriptionDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{75}
}

func (x *SubscriptionDetails) GetSubscriptionPeriod() int32 {
	if x != nil && x.SubscriptionPeriod != nil {
		return *x.SubscriptionPeriod
	}
	return 0
}

type Trailer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrailerId    *string `protobuf:"bytes,1,opt,name=trailerId" json:"trailerId,omitempty"`
	Title        *string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	ThumbnailUrl *string `protobuf:"bytes,3,opt,name=thumbnailUrl" json:"thumbnailUrl,omitempty"`
	WatchUrl     *string `protobuf:"bytes,4,opt,name=watchUrl" json:"watchUrl,omitempty"`
	Duration     *string `protobuf:"bytes,5,opt,name=duration" json:"duration,omitempty"`
}

func (x *Trailer) Reset() {
	*x = Trailer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trailer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trailer) ProtoMessage() {}

func (x *Trailer) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trailer.ProtoReflect.Descriptor instead.
func (*Trailer) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{76}
}

func (x *Trailer) GetTrailerId() string {
	if x != nil && x.TrailerId != nil {
		return *x.TrailerId
	}
	return ""
}

func (x *Trailer) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Trailer) GetThumbnailUrl() string {
	if x != nil && x.ThumbnailUrl != nil {
		return *x.ThumbnailUrl
	}
	return ""
}

func (x *Trailer) GetWatchUrl() string {
	if x != nil && x.WatchUrl != nil {
		return *x.WatchUrl
	}
	return ""
}

func (x *Trailer) GetDuration() string {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return ""
}

type TvEpisodeDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentDetailsUrl *string `protobuf:"bytes,1,opt,name=parentDetailsUrl" json:"parentDetailsUrl,omitempty"`
	EpisodeIndex     *int32  `protobuf:"varint,2,opt,name=episodeIndex" json:"episodeIndex,omitempty"`
	ReleaseDate      *string `protobuf:"bytes,3,opt,name=releaseDate" json:"releaseDate,omitempty"`
}

func (x *TvEpisodeDetails) Reset() {
	*x = TvEpisodeDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TvEpisodeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TvEpisodeDetails) ProtoMessage() {}

func (x *TvEpisodeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TvEpisodeDetails.ProtoReflect.Descriptor instead.
func (*TvEpisodeDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{77}
}

func (x *TvEpisodeDetails) GetParentDetailsUrl() string {
	if x != nil && x.ParentDetailsUrl != nil {
		return *x.ParentDetailsUrl
	}
	return ""
}

func (x *TvEpisodeDetails) GetEpisodeIndex() int32 {
	if x != nil && x.EpisodeIndex != nil {
		return *x.EpisodeIndex
	}
	return 0
}

func (x *TvEpisodeDetails) GetReleaseDate() string {
	if x != nil && x.ReleaseDate != nil {
		return *x.ReleaseDate
	}
	return ""
}

type TvSeasonDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentDetailsUrl *string `protobuf:"bytes,1,opt,name=parentDetailsUrl" json:"parentDetailsUrl,omitempty"`
	SeasonIndex      *int32  `protobuf:"varint,2,opt,name=seasonIndex" json:"seasonIndex,omitempty"`
	ReleaseDate      *string `protobuf:"bytes,3,opt,name=releaseDate" json:"releaseDate,omitempty"`
	Broadcaster      *string `protobuf:"bytes,4,opt,name=broadcaster" json:"broadcaster,omitempty"`
}

func (x *TvSeasonDetails) Reset() {
	*x = TvSeasonDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TvSeasonDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TvSeasonDetails) ProtoMessage() {}

func (x *TvSeasonDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TvSeasonDetails.ProtoReflect.Descriptor instead.
func (*TvSeasonDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{78}
}

func (x *TvSeasonDetails) GetParentDetailsUrl() string {
	if x != nil && x.ParentDetailsUrl != nil {
		return *x.ParentDetailsUrl
	}
	return ""
}

func (x *TvSeasonDetails) GetSeasonIndex() int32 {
	if x != nil && x.SeasonIndex != nil {
		return *x.SeasonIndex
	}
	return 0
}

func (x *TvSeasonDetails) GetReleaseDate() string {
	if x != nil && x.ReleaseDate != nil {
		return *x.ReleaseDate
	}
	return ""
}

func (x *TvSeasonDetails) GetBroadcaster() string {
	if x != nil && x.Broadcaster != nil {
		return *x.Broadcaster
	}
	return ""
}

type TvShowDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonCount *int32  `protobuf:"varint,1,opt,name=seasonCount" json:"seasonCount,omitempty"`
	StartYear   *int32  `protobuf:"varint,2,opt,name=startYear" json:"startYear,omitempty"`
	EndYear     *int32  `protobuf:"varint,3,opt,name=endYear" json:"endYear,omitempty"`
	Broadcaster *string `protobuf:"bytes,4,opt,name=broadcaster" json:"broadcaster,omitempty"`
}

func (x *TvShowDetails) Reset() {
	*x = TvShowDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TvShowDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TvShowDetails) ProtoMessage() {}

func (x *TvShowDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TvShowDetails.ProtoReflect.Descriptor instead.
func (*TvShowDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{79}
}

func (x *TvShowDetails) GetSeasonCount() int32 {
	if x != nil && x.SeasonCount != nil {
		return *x.SeasonCount
	}
	return 0
}

func (x *TvShowDetails) GetStartYear() int32 {
	if x != nil && x.StartYear != nil {
		return *x.StartYear
	}
	return 0
}

func (x *TvShowDetails) GetEndYear() int32 {
	if x != nil && x.EndYear != nil {
		return *x.EndYear
	}
	return 0
}

func (x *TvShowDetails) GetBroadcaster() string {
	if x != nil && x.Broadcaster != nil {
		return *x.Broadcaster
	}
	return ""
}

type VideoCredit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreditType *int32   `protobuf:"varint,1,opt,name=creditType" json:"creditType,omitempty"`
	Credit     *string  `protobuf:"bytes,2,opt,name=credit" json:"credit,omitempty"`
	Name       []string `protobuf:"bytes,3,rep,name=name" json:"name,omitempty"`
}

func (x *VideoCredit) Reset() {
	*x = VideoCredit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCredit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCredit) ProtoMessage() {}

func (x *VideoCredit) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCredit.ProtoReflect.Descriptor instead.
func (*VideoCredit) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{80}
}

func (x *VideoCredit) GetCreditType() int32 {
	if x != nil && x.CreditType != nil {
		return *x.CreditType
	}
	return 0
}

func (x *VideoCredit) GetCredit() string {
	if x != nil && x.Credit != nil {
		return *x.Credit
	}
	return ""
}

func (x *VideoCredit) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

type VideoDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credit        []*VideoCredit     `protobuf:"bytes,1,rep,name=credit" json:"credit,omitempty"`
	Duration      *string            `protobuf:"bytes,2,opt,name=duration" json:"duration,omitempty"`
	ReleaseDate   *string            `protobuf:"bytes,3,opt,name=releaseDate" json:"releaseDate,omitempty"`
	ContentRating *string            `protobuf:"bytes,4,opt,name=contentRating" json:"contentRating,omitempty"`
	Likes         *int64             `protobuf:"varint,5,opt,name=likes" json:"likes,omitempty"`
	Dislikes      *int64             `protobuf:"varint,6,opt,name=dislikes" json:"dislikes,omitempty"`
	Genre         []string           `protobuf:"bytes,7,rep,name=genre" json:"genre,omitempty"`
	Trailer       []*Trailer         `protobuf:"bytes,8,rep,name=trailer" json:"trailer,omitempty"`
	RentalTerm    []*VideoRentalTerm `protobuf:"bytes,9,rep,name=rentalTerm" json:"rentalTerm,omitempty"`
}

func (x *VideoDetails) Reset() {
	*x = VideoDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoDetails) ProtoMessage() {}

func (x *VideoDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoDetails.ProtoReflect.Descriptor instead.
func (*VideoDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{81}
}

func (x *VideoDetails) GetCredit() []*VideoCredit {
	if x != nil {
		return x.Credit
	}
	return nil
}

func (x *VideoDetails) GetDuration() string {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return ""
}

func (x *VideoDetails) GetReleaseDate() string {
	if x != nil && x.ReleaseDate != nil {
		return *x.ReleaseDate
	}
	return ""
}

func (x *VideoDetails) GetContentRating() string {
	if x != nil && x.ContentRating != nil {
		return *x.ContentRating
	}
	return ""
}

func (x *VideoDetails) GetLikes() int64 {
	if x != nil && x.Likes != nil {
		return *x.Likes
	}
	return 0
}

func (x *VideoDetails) GetDislikes() int64 {
	if x != nil && x.Dislikes != nil {
		return *x.Dislikes
	}
	return 0
}

func (x *VideoDetails) GetGenre() []string {
	if x != nil {
		return x.Genre
	}
	return nil
}

func (x *VideoDetails) GetTrailer() []*Trailer {
	if x != nil {
		return x.Trailer
	}
	return nil
}

func (x *VideoDetails) GetRentalTerm() []*VideoRentalTerm {
	if x != nil {
		return x.RentalTerm
	}
	return nil
}

type VideoRentalTerm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferType         *int32                  `protobuf:"varint,1,opt,name=offerType" json:"offerType,omitempty"`
	OfferAbbreviation *string                 `protobuf:"bytes,2,opt,name=offerAbbreviation" json:"offerAbbreviation,omitempty"`
	RentalHeader      *string                 `protobuf:"bytes,3,opt,name=rentalHeader" json:"rentalHeader,omitempty"`
	Term              []*VideoRentalTerm_Term `protobuf:"group,4,rep,name=Term,json=term" json:"term,omitempty"`
}

func (x *VideoRentalTerm) Reset() {
	*x = VideoRentalTerm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoRentalTerm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoRentalTerm) ProtoMessage() {}

func (x *VideoRentalTerm) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoRentalTerm.ProtoReflect.Descriptor instead.
func (*VideoRentalTerm) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{82}
}

func (x *VideoRentalTerm) GetOfferType() int32 {
	if x != nil && x.OfferType != nil {
		return *x.OfferType
	}
	return 0
}

func (x *VideoRentalTerm) GetOfferAbbreviation() string {
	if x != nil && x.OfferAbbreviation != nil {
		return *x.OfferAbbreviation
	}
	return ""
}

func (x *VideoRentalTerm) GetRentalHeader() string {
	if x != nil && x.RentalHeader != nil {
		return *x.RentalHeader
	}
	return ""
}

func (x *VideoRentalTerm) GetTerm() []*VideoRentalTerm_Term {
	if x != nil {
		return x.Term
	}
	return nil
}

type Bucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Document            []*DocV1 `protobuf:"bytes,1,rep,name=document" json:"document,omitempty"`
	MultiCorpus         *bool    `protobuf:"varint,2,opt,name=multiCorpus" json:"multiCorpus,omitempty"`
	Title               *string  `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	IconUrl             *string  `protobuf:"bytes,4,opt,name=iconUrl" json:"iconUrl,omitempty"`
	FullContentsUrl     *string  `protobuf:"bytes,5,opt,name=fullContentsUrl" json:"fullContentsUrl,omitempty"`
	Relevance           *float64 `protobuf:"fixed64,6,opt,name=relevance" json:"relevance,omitempty"`
	EstimatedResults    *int64   `protobuf:"varint,7,opt,name=estimatedResults" json:"estimatedResults,omitempty"`
	AnalyticsCookie     *string  `protobuf:"bytes,8,opt,name=analyticsCookie" json:"analyticsCookie,omitempty"`
	FullContentsListUrl *string  `protobuf:"bytes,9,opt,name=fullContentsListUrl" json:"fullContentsListUrl,omitempty"`
	NextPageUrl         *string  `protobuf:"bytes,10,opt,name=nextPageUrl" json:"nextPageUrl,omitempty"`
	Ordered             *bool    `protobuf:"varint,11,opt,name=ordered" json:"ordered,omitempty"`
}

func (x *Bucket) Reset() {
	*x = Bucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bucket) ProtoMessage() {}

func (x *Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bucket.ProtoReflect.Descriptor instead.
func (*Bucket) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{83}
}

func (x *Bucket) GetDocument() []*DocV1 {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *Bucket) GetMultiCorpus() bool {
	if x != nil && x.MultiCorpus != nil {
		return *x.MultiCorpus
	}
	return false
}

func (x *Bucket) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Bucket) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *Bucket) GetFullContentsUrl() string {
	if x != nil && x.FullContentsUrl != nil {
		return *x.FullContentsUrl
	}
	return ""
}

func (x *Bucket) GetRelevance() float64 {
	if x != nil && x.Relevance != nil {
		return *x.Relevance
	}
	return 0
}

func (x *Bucket) GetEstimatedResults() int64 {
	if x != nil && x.EstimatedResults != nil {
		return *x.EstimatedResults
	}
	return 0
}

func (x *Bucket) GetAnalyticsCookie() string {
	if x != nil && x.AnalyticsCookie != nil {
		return *x.AnalyticsCookie
	}
	return ""
}

func (x *Bucket) GetFullContentsListUrl() string {
	if x != nil && x.FullContentsListUrl != nil {
		return *x.FullContentsListUrl
	}
	return ""
}

func (x *Bucket) GetNextPageUrl() string {
	if x != nil && x.NextPageUrl != nil {
		return *x.NextPageUrl
	}
	return ""
}

func (x *Bucket) GetOrdered() bool {
	if x != nil && x.Ordered != nil {
		return *x.Ordered
	}
	return false
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket []*Bucket `protobuf:"bytes,1,rep,name=bucket" json:"bucket,omitempty"`
	Doc    []*DocV2  `protobuf:"bytes,2,rep,name=doc" json:"doc,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{84}
}

func (x *ListResponse) GetBucket() []*Bucket {
	if x != nil {
		return x.Bucket
	}
	return nil
}

func (x *ListResponse) GetDoc() []*DocV2 {
	if x != nil {
		return x.Doc
	}
	return nil
}

type DocV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinskyDoc        *Document        `protobuf:"bytes,1,opt,name=finskyDoc" json:"finskyDoc,omitempty"`
	Docid            *string          `protobuf:"bytes,2,opt,name=docid" json:"docid,omitempty"`
	DetailsUrl       *string          `protobuf:"bytes,3,opt,name=detailsUrl" json:"detailsUrl,omitempty"`
	ReviewsUrl       *string          `protobuf:"bytes,4,opt,name=reviewsUrl" json:"reviewsUrl,omitempty"`
	RelatedListUrl   *string          `protobuf:"bytes,5,opt,name=relatedListUrl" json:"relatedListUrl,omitempty"`
	MoreByListUrl    *string          `protobuf:"bytes,6,opt,name=moreByListUrl" json:"moreByListUrl,omitempty"`
	ShareUrl         *string          `protobuf:"bytes,7,opt,name=shareUrl" json:"shareUrl,omitempty"`
	Creator          *string          `protobuf:"bytes,8,opt,name=creator" json:"creator,omitempty"`
	Details          *DocumentDetails `protobuf:"bytes,9,opt,name=details" json:"details,omitempty"`
	DescriptionHtml  *string          `protobuf:"bytes,10,opt,name=descriptionHtml" json:"descriptionHtml,omitempty"`
	RelatedBrowseUrl *string          `protobuf:"bytes,11,opt,name=relatedBrowseUrl" json:"relatedBrowseUrl,omitempty"`
	MoreByBrowseUrl  *string          `protobuf:"bytes,12,opt,name=moreByBrowseUrl" json:"moreByBrowseUrl,omitempty"`
	RelatedHeader    *string          `protobuf:"bytes,13,opt,name=relatedHeader" json:"relatedHeader,omitempty"`
	MoreByHeader     *string          `protobuf:"bytes,14,opt,name=moreByHeader" json:"moreByHeader,omitempty"`
	Title            *string          `protobuf:"bytes,15,opt,name=title" json:"title,omitempty"`
	PlusOneData      *PlusOneData     `protobuf:"bytes,16,opt,name=plusOneData" json:"plusOneData,omitempty"`
	WarningMessage   *string          `protobuf:"bytes,17,opt,name=warningMessage" json:"warningMessage,omitempty"`
}

func (x *DocV1) Reset() {
	*x = DocV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocV1) ProtoMessage() {}

func (x *DocV1) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocV1.ProtoReflect.Descriptor instead.
func (*DocV1) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{85}
}

func (x *DocV1) GetFinskyDoc() *Document {
	if x != nil {
		return x.FinskyDoc
	}
	return nil
}

func (x *DocV1) GetDocid() string {
	if x != nil && x.Docid != nil {
		return *x.Docid
	}
	return ""
}

func (x *DocV1) GetDetailsUrl() string {
	if x != nil && x.DetailsUrl != nil {
		return *x.DetailsUrl
	}
	return ""
}

func (x *DocV1) GetReviewsUrl() string {
	if x != nil && x.ReviewsUrl != nil {
		return *x.ReviewsUrl
	}
	return ""
}

func (x *DocV1) GetRelatedListUrl() string {
	if x != nil && x.RelatedListUrl != nil {
		return *x.RelatedListUrl
	}
	return ""
}

func (x *DocV1) GetMoreByListUrl() string {
	if x != nil && x.MoreByListUrl != nil {
		return *x.MoreByListUrl
	}
	return ""
}

func (x *DocV1) GetShareUrl() string {
	if x != nil && x.ShareUrl != nil {
		return *x.ShareUrl
	}
	return ""
}

func (x *DocV1) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *DocV1) GetDetails() *DocumentDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *DocV1) GetDescriptionHtml() string {
	if x != nil && x.DescriptionHtml != nil {
		return *x.DescriptionHtml
	}
	return ""
}

func (x *DocV1) GetRelatedBrowseUrl() string {
	if x != nil && x.RelatedBrowseUrl != nil {
		return *x.RelatedBrowseUrl
	}
	return ""
}

func (x *DocV1) GetMoreByBrowseUrl() string {
	if x != nil && x.MoreByBrowseUrl != nil {
		return *x.MoreByBrowseUrl
	}
	return ""
}

func (x *DocV1) GetRelatedHeader() string {
	if x != nil && x.RelatedHeader != nil {
		return *x.RelatedHeader
	}
	return ""
}

func (x *DocV1) GetMoreByHeader() string {
	if x != nil && x.MoreByHeader != nil {
		return *x.MoreByHeader
	}
	return ""
}

func (x *DocV1) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *DocV1) GetPlusOneData() *PlusOneData {
	if x != nil {
		return x.PlusOneData
	}
	return nil
}

func (x *DocV1) GetWarningMessage() string {
	if x != nil && x.WarningMessage != nil {
		return *x.WarningMessage
	}
	return ""
}

type DocV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docid                    *string                   `protobuf:"bytes,1,opt,name=docid" json:"docid,omitempty"`
	BackendDocid             *string                   `protobuf:"bytes,2,opt,name=backendDocid" json:"backendDocid,omitempty"`
	DocType                  *int32                    `protobuf:"varint,3,opt,name=docType" json:"docType,omitempty"`
	BackendId                *int32                    `protobuf:"varint,4,opt,name=backendId" json:"backendId,omitempty"`
	Title                    *string                   `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Creator                  *string                   `protobuf:"bytes,6,opt,name=creator" json:"creator,omitempty"`
	DescriptionHtml          *string                   `protobuf:"bytes,7,opt,name=descriptionHtml" json:"descriptionHtml,omitempty"`
	Offer                    []*Offer                  `protobuf:"bytes,8,rep,name=offer" json:"offer,omitempty"`
	Availability             *Availability             `protobuf:"bytes,9,opt,name=availability" json:"availability,omitempty"`
	Image                    []*Image                  `protobuf:"bytes,10,rep,name=image" json:"image,omitempty"`
	Child                    []*DocV2                  `protobuf:"bytes,11,rep,name=child" json:"child,omitempty"`
	ContainerMetadata        *ContainerMetadata        `protobuf:"bytes,12,opt,name=containerMetadata" json:"containerMetadata,omitempty"`
	Details                  *DocumentDetails          `protobuf:"bytes,13,opt,name=details" json:"details,omitempty"`
	AggregateRating          *AggregateRating          `protobuf:"bytes,14,opt,name=aggregateRating" json:"aggregateRating,omitempty"`
	RelatedLinks             *RelatedLinks             `protobuf:"bytes,15,opt,name=relatedLinks" json:"relatedLinks,omitempty"`
	DetailsUrl               *string                   `protobuf:"bytes,16,opt,name=detailsUrl" json:"detailsUrl,omitempty"`
	ShareUrl                 *string                   `protobuf:"bytes,17,opt,name=shareUrl" json:"shareUrl,omitempty"`
	ReviewsUrl               *string                   `protobuf:"bytes,18,opt,name=reviewsUrl" json:"reviewsUrl,omitempty"`
	BackendUrl               *string                   `protobuf:"bytes,19,opt,name=backendUrl" json:"backendUrl,omitempty"`
	PurchaseDetailsUrl       *string                   `protobuf:"bytes,20,opt,name=purchaseDetailsUrl" json:"purchaseDetailsUrl,omitempty"`
	DetailsReusable          *bool                     `protobuf:"varint,21,opt,name=detailsReusable" json:"detailsReusable,omitempty"`
	Subtitle                 *string                   `protobuf:"bytes,22,opt,name=subtitle" json:"subtitle,omitempty"`
	UnknownCategoryContainer *UnknownCategoryContainer `protobuf:"bytes,24,opt,name=unknownCategoryContainer" json:"unknownCategoryContainer,omitempty"`
	Unknown25                *Unknown25                `protobuf:"bytes,25,opt,name=unknown25" json:"unknown25,omitempty"`
	DescriptionShort         *string                   `protobuf:"bytes,27,opt,name=descriptionShort" json:"descriptionShort,omitempty"`
	ReviewSnippetsUrl        *string                   `protobuf:"bytes,31,opt,name=reviewSnippetsUrl" json:"reviewSnippetsUrl,omitempty"`
	ReviewQuestionsUrl       *string                   `protobuf:"bytes,34,opt,name=reviewQuestionsUrl" json:"reviewQuestionsUrl,omitempty"`
}

func (x *DocV2) Reset() {
	*x = DocV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocV2) ProtoMessage() {}

func (x *DocV2) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocV2.ProtoReflect.Descriptor instead.
func (*DocV2) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{86}
}

func (x *DocV2) GetDocid() string {
	if x != nil && x.Docid != nil {
		return *x.Docid
	}
	return ""
}

func (x *DocV2) GetBackendDocid() string {
	if x != nil && x.BackendDocid != nil {
		return *x.BackendDocid
	}
	return ""
}

func (x *DocV2) GetDocType() int32 {
	if x != nil && x.DocType != nil {
		return *x.DocType
	}
	return 0
}

func (x *DocV2) GetBackendId() int32 {
	if x != nil && x.BackendId != nil {
		return *x.BackendId
	}
	return 0
}

func (x *DocV2) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *DocV2) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *DocV2) GetDescriptionHtml() string {
	if x != nil && x.DescriptionHtml != nil {
		return *x.DescriptionHtml
	}
	return ""
}

func (x *DocV2) GetOffer() []*Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *DocV2) GetAvailability() *Availability {
	if x != nil {
		return x.Availability
	}
	return nil
}

func (x *DocV2) GetImage() []*Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *DocV2) GetChild() []*DocV2 {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *DocV2) GetContainerMetadata() *ContainerMetadata {
	if x != nil {
		return x.ContainerMetadata
	}
	return nil
}

func (x *DocV2) GetDetails() *DocumentDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *DocV2) GetAggregateRating() *AggregateRating {
	if x != nil {
		return x.AggregateRating
	}
	return nil
}

func (x *DocV2) GetRelatedLinks() *RelatedLinks {
	if x != nil {
		return x.RelatedLinks
	}
	return nil
}

func (x *DocV2) GetDetailsUrl() string {
	if x != nil && x.DetailsUrl != nil {
		return *x.DetailsUrl
	}
	return ""
}

func (x *DocV2) GetShareUrl() string {
	if x != nil && x.ShareUrl != nil {
		return *x.ShareUrl
	}
	return ""
}

func (x *DocV2) GetReviewsUrl() string {
	if x != nil && x.ReviewsUrl != nil {
		return *x.ReviewsUrl
	}
	return ""
}

func (x *DocV2) GetBackendUrl() string {
	if x != nil && x.BackendUrl != nil {
		return *x.BackendUrl
	}
	return ""
}

func (x *DocV2) GetPurchaseDetailsUrl() string {
	if x != nil && x.PurchaseDetailsUrl != nil {
		return *x.PurchaseDetailsUrl
	}
	return ""
}

func (x *DocV2) GetDetailsReusable() bool {
	if x != nil && x.DetailsReusable != nil {
		return *x.DetailsReusable
	}
	return false
}

func (x *DocV2) GetSubtitle() string {
	if x != nil && x.Subtitle != nil {
		return *x.Subtitle
	}
	return ""
}

func (x *DocV2) GetUnknownCategoryContainer() *UnknownCategoryContainer {
	if x != nil {
		return x.UnknownCategoryContainer
	}
	return nil
}

func (x *DocV2) GetUnknown25() *Unknown25 {
	if x != nil {
		return x.Unknown25
	}
	return nil
}

func (x *DocV2) GetDescriptionShort() string {
	if x != nil && x.DescriptionShort != nil {
		return *x.DescriptionShort
	}
	return ""
}

func (x *DocV2) GetReviewSnippetsUrl() string {
	if x != nil && x.ReviewSnippetsUrl != nil {
		return *x.ReviewSnippetsUrl
	}
	return ""
}

func (x *DocV2) GetReviewQuestionsUrl() string {
	if x != nil && x.ReviewQuestionsUrl != nil {
		return *x.ReviewQuestionsUrl
	}
	return ""
}

type Unknown25 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []*Unknown25Item `protobuf:"bytes,2,rep,name=item" json:"item,omitempty"`
}

func (x *Unknown25) Reset() {
	*x = Unknown25{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unknown25) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unknown25) ProtoMessage() {}

func (x *Unknown25) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unknown25.ProtoReflect.Descriptor instead.
func (*Unknown25) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{87}
}

func (x *Unknown25) GetItem() []*Unknown25Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type Unknown25Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label     *string             `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Container *Unknown25Container `protobuf:"bytes,3,opt,name=container" json:"container,omitempty"`
}

func (x *Unknown25Item) Reset() {
	*x = Unknown25Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unknown25Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unknown25Item) ProtoMessage() {}

func (x *Unknown25Item) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unknown25Item.ProtoReflect.Descriptor instead.
func (*Unknown25Item) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{88}
}

func (x *Unknown25Item) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *Unknown25Item) GetContainer() *Unknown25Container {
	if x != nil {
		return x.Container
	}
	return nil
}

type Unknown25Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *Unknown25Container) Reset() {
	*x = Unknown25Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unknown25Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unknown25Container) ProtoMessage() {}

func (x *Unknown25Container) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unknown25Container.ProtoReflect.Descriptor instead.
func (*Unknown25Container) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{89}
}

func (x *Unknown25Container) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type RelatedLinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unknown1         *RelatedLinksUnknown1 `protobuf:"bytes,10,opt,name=unknown1" json:"unknown1,omitempty"`
	PrivacyPolicyUrl *string               `protobuf:"bytes,18,opt,name=privacyPolicyUrl" json:"privacyPolicyUrl,omitempty"`
	YouMightAlsoLike *RelatedLink          `protobuf:"bytes,24,opt,name=youMightAlsoLike" json:"youMightAlsoLike,omitempty"`
	Rated            *Rated                `protobuf:"bytes,29,opt,name=rated" json:"rated,omitempty"`
	RelatedLinks     []*RelatedLink        `protobuf:"bytes,34,rep,name=relatedLinks" json:"relatedLinks,omitempty"`
	CategoryInfo     *CategoryInfo         `protobuf:"bytes,53,opt,name=categoryInfo" json:"categoryInfo,omitempty"`
}

func (x *RelatedLinks) Reset() {
	*x = RelatedLinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatedLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedLinks) ProtoMessage() {}

func (x *RelatedLinks) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedLinks.ProtoReflect.Descriptor instead.
func (*RelatedLinks) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{90}
}

func (x *RelatedLinks) GetUnknown1() *RelatedLinksUnknown1 {
	if x != nil {
		return x.Unknown1
	}
	return nil
}

func (x *RelatedLinks) GetPrivacyPolicyUrl() string {
	if x != nil && x.PrivacyPolicyUrl != nil {
		return *x.PrivacyPolicyUrl
	}
	return ""
}

func (x *RelatedLinks) GetYouMightAlsoLike() *RelatedLink {
	if x != nil {
		return x.YouMightAlsoLike
	}
	return nil
}

func (x *RelatedLinks) GetRated() *Rated {
	if x != nil {
		return x.Rated
	}
	return nil
}

func (x *RelatedLinks) GetRelatedLinks() []*RelatedLink {
	if x != nil {
		return x.RelatedLinks
	}
	return nil
}

func (x *RelatedLinks) GetCategoryInfo() *CategoryInfo {
	if x != nil {
		return x.CategoryInfo
	}
	return nil
}

type RelatedLinksUnknown1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unknown2 *RelatedLinksUnknown2 `protobuf:"bytes,2,opt,name=unknown2" json:"unknown2,omitempty"`
}

func (x *RelatedLinksUnknown1) Reset() {
	*x = RelatedLinksUnknown1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatedLinksUnknown1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedLinksUnknown1) ProtoMessage() {}

func (x *RelatedLinksUnknown1) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedLinksUnknown1.ProtoReflect.Descriptor instead.
func (*RelatedLinksUnknown1) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{91}
}

func (x *RelatedLinksUnknown1) GetUnknown2() *RelatedLinksUnknown2 {
	if x != nil {
		return x.Unknown2
	}
	return nil
}

type RelatedLinksUnknown2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeUrl     *string `protobuf:"bytes,2,opt,name=homeUrl" json:"homeUrl,omitempty"`
	NextPageUrl *string `protobuf:"bytes,3,opt,name=nextPageUrl" json:"nextPageUrl,omitempty"`
}

func (x *RelatedLinksUnknown2) Reset() {
	*x = RelatedLinksUnknown2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatedLinksUnknown2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedLinksUnknown2) ProtoMessage() {}

func (x *RelatedLinksUnknown2) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedLinksUnknown2.ProtoReflect.Descriptor instead.
func (*RelatedLinksUnknown2) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{92}
}

func (x *RelatedLinksUnknown2) GetHomeUrl() string {
	if x != nil && x.HomeUrl != nil {
		return *x.HomeUrl
	}
	return ""
}

func (x *RelatedLinksUnknown2) GetNextPageUrl() string {
	if x != nil && x.NextPageUrl != nil {
		return *x.NextPageUrl
	}
	return ""
}

type Rated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label             *string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Image             *Image  `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	LearnMoreHtmlLink *string `protobuf:"bytes,4,opt,name=learnMoreHtmlLink" json:"learnMoreHtmlLink,omitempty"`
}

func (x *Rated) Reset() {
	*x = Rated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rated) ProtoMessage() {}

func (x *Rated) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rated.ProtoReflect.Descriptor instead.
func (*Rated) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{93}
}

func (x *Rated) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *Rated) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Rated) GetLearnMoreHtmlLink() string {
	if x != nil && x.LearnMoreHtmlLink != nil {
		return *x.LearnMoreHtmlLink
	}
	return ""
}

type RelatedLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label *string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Url1  *string `protobuf:"bytes,2,opt,name=url1" json:"url1,omitempty"`
	Url2  *string `protobuf:"bytes,3,opt,name=url2" json:"url2,omitempty"`
}

func (x *RelatedLink) Reset() {
	*x = RelatedLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatedLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedLink) ProtoMessage() {}

func (x *RelatedLink) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedLink.ProtoReflect.Descriptor instead.
func (*RelatedLink) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{94}
}

func (x *RelatedLink) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *RelatedLink) GetUrl1() string {
	if x != nil && x.Url1 != nil {
		return *x.Url1
	}
	return ""
}

func (x *RelatedLink) GetUrl2() string {
	if x != nil && x.Url2 != nil {
		return *x.Url2
	}
	return ""
}

type CategoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppType     *string `protobuf:"bytes,1,opt,name=appType" json:"appType,omitempty"`
	AppCategory *string `protobuf:"bytes,2,opt,name=appCategory" json:"appCategory,omitempty"`
}

func (x *CategoryInfo) Reset() {
	*x = CategoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryInfo) ProtoMessage() {}

func (x *CategoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryInfo.ProtoReflect.Descriptor instead.
func (*CategoryInfo) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{95}
}

func (x *CategoryInfo) GetAppType() string {
	if x != nil && x.AppType != nil {
		return *x.AppType
	}
	return ""
}

func (x *CategoryInfo) GetAppCategory() string {
	if x != nil && x.AppCategory != nil {
		return *x.AppCategory
	}
	return ""
}

type EncryptedSubscriberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data              *string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	EncryptedKey      *string `protobuf:"bytes,2,opt,name=encryptedKey" json:"encryptedKey,omitempty"`
	Signature         *string `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
	InitVector        *string `protobuf:"bytes,4,opt,name=initVector" json:"initVector,omitempty"`
	GoogleKeyVersion  *int32  `protobuf:"varint,5,opt,name=googleKeyVersion" json:"googleKeyVersion,omitempty"`
	CarrierKeyVersion *int32  `protobuf:"varint,6,opt,name=carrierKeyVersion" json:"carrierKeyVersion,omitempty"`
}

func (x *EncryptedSubscriberInfo) Reset() {
	*x = EncryptedSubscriberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptedSubscriberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedSubscriberInfo) ProtoMessage() {}

func (x *EncryptedSubscriberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedSubscriberInfo.ProtoReflect.Descriptor instead.
func (*EncryptedSubscriberInfo) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{96}
}

func (x *EncryptedSubscriberInfo) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

func (x *EncryptedSubscriberInfo) GetEncryptedKey() string {
	if x != nil && x.EncryptedKey != nil {
		return *x.EncryptedKey
	}
	return ""
}

func (x *EncryptedSubscriberInfo) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

func (x *EncryptedSubscriberInfo) GetInitVector() string {
	if x != nil && x.InitVector != nil {
		return *x.InitVector
	}
	return ""
}

func (x *EncryptedSubscriberInfo) GetGoogleKeyVersion() int32 {
	if x != nil && x.GoogleKeyVersion != nil {
		return *x.GoogleKeyVersion
	}
	return 0
}

func (x *EncryptedSubscriberInfo) GetCarrierKeyVersion() int32 {
	if x != nil && x.CarrierKeyVersion != nil {
		return *x.CarrierKeyVersion
	}
	return 0
}

type Availability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Restriction                      *int32                                           `protobuf:"varint,5,opt,name=restriction" json:"restriction,omitempty"`
	OfferType                        *int32                                           `protobuf:"varint,6,opt,name=offerType" json:"offerType,omitempty"`
	Rule                             *Rule                                            `protobuf:"bytes,7,opt,name=rule" json:"rule,omitempty"`
	Perdeviceavailabilityrestriction []*Availability_PerDeviceAvailabilityRestriction `protobuf:"group,9,rep,name=PerDeviceAvailabilityRestriction,json=perdeviceavailabilityrestriction" json:"perdeviceavailabilityrestriction,omitempty"`
	AvailableIfOwned                 *bool                                            `protobuf:"varint,13,opt,name=availableIfOwned" json:"availableIfOwned,omitempty"`
	Install                          []*Install                                       `protobuf:"bytes,14,rep,name=install" json:"install,omitempty"`
	FilterInfo                       *FilterEvaluationInfo                            `protobuf:"bytes,16,opt,name=filterInfo" json:"filterInfo,omitempty"`
	OwnershipInfo                    *OwnershipInfo                                   `protobuf:"bytes,17,opt,name=ownershipInfo" json:"ownershipInfo,omitempty"`
}

func (x *Availability) Reset() {
	*x = Availability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Availability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Availability) ProtoMessage() {}

func (x *Availability) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Availability.ProtoReflect.Descriptor instead.
func (*Availability) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{97}
}

func (x *Availability) GetRestriction() int32 {
	if x != nil && x.Restriction != nil {
		return *x.Restriction
	}
	return 0
}

func (x *Availability) GetOfferType() int32 {
	if x != nil && x.OfferType != nil {
		return *x.OfferType
	}
	return 0
}

func (x *Availability) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *Availability) GetPerdeviceavailabilityrestriction() []*Availability_PerDeviceAvailabilityRestriction {
	if x != nil {
		return x.Perdeviceavailabilityrestriction
	}
	return nil
}

func (x *Availability) GetAvailableIfOwned() bool {
	if x != nil && x.AvailableIfOwned != nil {
		return *x.AvailableIfOwned
	}
	return false
}

func (x *Availability) GetInstall() []*Install {
	if x != nil {
		return x.Install
	}
	return nil
}

func (x *Availability) GetFilterInfo() *FilterEvaluationInfo {
	if x != nil {
		return x.FilterInfo
	}
	return nil
}

func (x *Availability) GetOwnershipInfo() *OwnershipInfo {
	if x != nil {
		return x.OwnershipInfo
	}
	return nil
}

type FilterEvaluationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleEvaluation []*RuleEvaluation `protobuf:"bytes,1,rep,name=ruleEvaluation" json:"ruleEvaluation,omitempty"`
}

func (x *FilterEvaluationInfo) Reset() {
	*x = FilterEvaluationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterEvaluationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterEvaluationInfo) ProtoMessage() {}

func (x *FilterEvaluationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterEvaluationInfo.ProtoReflect.Descriptor instead.
func (*FilterEvaluationInfo) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{98}
}

func (x *FilterEvaluationInfo) GetRuleEvaluation() []*RuleEvaluation {
	if x != nil {
		return x.RuleEvaluation
	}
	return nil
}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Negate        *bool     `protobuf:"varint,1,opt,name=negate" json:"negate,omitempty"`
	Operator      *int32    `protobuf:"varint,2,opt,name=operator" json:"operator,omitempty"`
	Key           *int32    `protobuf:"varint,3,opt,name=key" json:"key,omitempty"`
	StringArg     []string  `protobuf:"bytes,4,rep,name=stringArg" json:"stringArg,omitempty"`
	LongArg       []int64   `protobuf:"varint,5,rep,name=longArg" json:"longArg,omitempty"`
	DoubleArg     []float64 `protobuf:"fixed64,6,rep,name=doubleArg" json:"doubleArg,omitempty"`
	Subrule       []*Rule   `protobuf:"bytes,7,rep,name=subrule" json:"subrule,omitempty"`
	ResponseCode  *int32    `protobuf:"varint,8,opt,name=responseCode" json:"responseCode,omitempty"`
	Comment       *string   `protobuf:"bytes,9,opt,name=comment" json:"comment,omitempty"`
	StringArgHash []uint64  `protobuf:"fixed64,10,rep,name=stringArgHash" json:"stringArgHash,omitempty"`
	ConstArg      []int32   `protobuf:"varint,11,rep,name=constArg" json:"constArg,omitempty"`
}

func (x *Rule) Reset() {
	*x = Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{99}
}

func (x *Rule) GetNegate() bool {
	if x != nil && x.Negate != nil {
		return *x.Negate
	}
	return false
}

func (x *Rule) GetOperator() int32 {
	if x != nil && x.Operator != nil {
		return *x.Operator
	}
	return 0
}

func (x *Rule) GetKey() int32 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *Rule) GetStringArg() []string {
	if x != nil {
		return x.StringArg
	}
	return nil
}

func (x *Rule) GetLongArg() []int64 {
	if x != nil {
		return x.LongArg
	}
	return nil
}

func (x *Rule) GetDoubleArg() []float64 {
	if x != nil {
		return x.DoubleArg
	}
	return nil
}

func (x *Rule) GetSubrule() []*Rule {
	if x != nil {
		return x.Subrule
	}
	return nil
}

func (x *Rule) GetResponseCode() int32 {
	if x != nil && x.ResponseCode != nil {
		return *x.ResponseCode
	}
	return 0
}

func (x *Rule) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *Rule) GetStringArgHash() []uint64 {
	if x != nil {
		return x.StringArgHash
	}
	return nil
}

func (x *Rule) GetConstArg() []int32 {
	if x != nil {
		return x.ConstArg
	}
	return nil
}

type RuleEvaluation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule              *Rule     `protobuf:"bytes,1,opt,name=rule" json:"rule,omitempty"`
	ActualStringValue []string  `protobuf:"bytes,2,rep,name=actualStringValue" json:"actualStringValue,omitempty"`
	ActualLongValue   []int64   `protobuf:"varint,3,rep,name=actualLongValue" json:"actualLongValue,omitempty"`
	ActualBoolValue   []bool    `protobuf:"varint,4,rep,name=actualBoolValue" json:"actualBoolValue,omitempty"`
	ActualDoubleValue []float64 `protobuf:"fixed64,5,rep,name=actualDoubleValue" json:"actualDoubleValue,omitempty"`
}

func (x *RuleEvaluation) Reset() {
	*x = RuleEvaluation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleEvaluation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleEvaluation) ProtoMessage() {}

func (x *RuleEvaluation) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleEvaluation.ProtoReflect.Descriptor instead.
func (*RuleEvaluation) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{100}
}

func (x *RuleEvaluation) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *RuleEvaluation) GetActualStringValue() []string {
	if x != nil {
		return x.ActualStringValue
	}
	return nil
}

func (x *RuleEvaluation) GetActualLongValue() []int64 {
	if x != nil {
		return x.ActualLongValue
	}
	return nil
}

func (x *RuleEvaluation) GetActualBoolValue() []bool {
	if x != nil {
		return x.ActualBoolValue
	}
	return nil
}

func (x *RuleEvaluation) GetActualDoubleValue() []float64 {
	if x != nil {
		return x.ActualDoubleValue
	}
	return nil
}

type LibraryAppDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertificateHash              *string `protobuf:"bytes,2,opt,name=certificateHash" json:"certificateHash,omitempty"`
	RefundTimeoutTimestampMsec   *int64  `protobuf:"varint,3,opt,name=refundTimeoutTimestampMsec" json:"refundTimeoutTimestampMsec,omitempty"`
	PostDeliveryRefundWindowMsec *int64  `protobuf:"varint,4,opt,name=postDeliveryRefundWindowMsec" json:"postDeliveryRefundWindowMsec,omitempty"`
}

func (x *LibraryAppDetails) Reset() {
	*x = LibraryAppDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibraryAppDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibraryAppDetails) ProtoMessage() {}

func (x *LibraryAppDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibraryAppDetails.ProtoReflect.Descriptor instead.
func (*LibraryAppDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{101}
}

func (x *LibraryAppDetails) GetCertificateHash() string {
	if x != nil && x.CertificateHash != nil {
		return *x.CertificateHash
	}
	return ""
}

func (x *LibraryAppDetails) GetRefundTimeoutTimestampMsec() int64 {
	if x != nil && x.RefundTimeoutTimestampMsec != nil {
		return *x.RefundTimeoutTimestampMsec
	}
	return 0
}

func (x *LibraryAppDetails) GetPostDeliveryRefundWindowMsec() int64 {
	if x != nil && x.PostDeliveryRefundWindowMsec != nil {
		return *x.PostDeliveryRefundWindowMsec
	}
	return 0
}

type LibraryInAppDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedPurchaseData *string `protobuf:"bytes,1,opt,name=signedPurchaseData" json:"signedPurchaseData,omitempty"`
	Signature          *string `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
}

func (x *LibraryInAppDetails) Reset() {
	*x = LibraryInAppDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibraryInAppDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibraryInAppDetails) ProtoMessage() {}

func (x *LibraryInAppDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibraryInAppDetails.ProtoReflect.Descriptor instead.
func (*LibraryInAppDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{102}
}

func (x *LibraryInAppDetails) GetSignedPurchaseData() string {
	if x != nil && x.SignedPurchaseData != nil {
		return *x.SignedPurchaseData
	}
	return ""
}

func (x *LibraryInAppDetails) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

type LibraryMutation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docid               *Docid                      `protobuf:"bytes,1,opt,name=docid" json:"docid,omitempty"`
	OfferType           *int32                      `protobuf:"varint,2,opt,name=offerType" json:"offerType,omitempty"`
	DocumentHash        *int64                      `protobuf:"varint,3,opt,name=documentHash" json:"documentHash,omitempty"`
	Deleted             *bool                       `protobuf:"varint,4,opt,name=deleted" json:"deleted,omitempty"`
	AppDetails          *LibraryAppDetails          `protobuf:"bytes,5,opt,name=appDetails" json:"appDetails,omitempty"`
	SubscriptionDetails *LibrarySubscriptionDetails `protobuf:"bytes,6,opt,name=subscriptionDetails" json:"subscriptionDetails,omitempty"`
	InAppDetails        *LibraryInAppDetails        `protobuf:"bytes,7,opt,name=inAppDetails" json:"inAppDetails,omitempty"`
}

func (x *LibraryMutation) Reset() {
	*x = LibraryMutation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibraryMutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibraryMutation) ProtoMessage() {}

func (x *LibraryMutation) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibraryMutation.ProtoReflect.Descriptor instead.
func (*LibraryMutation) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{103}
}

func (x *LibraryMutation) GetDocid() *Docid {
	if x != nil {
		return x.Docid
	}
	return nil
}

func (x *LibraryMutation) GetOfferType() int32 {
	if x != nil && x.OfferType != nil {
		return *x.OfferType
	}
	return 0
}

func (x *LibraryMutation) GetDocumentHash() int64 {
	if x != nil && x.DocumentHash != nil {
		return *x.DocumentHash
	}
	return 0
}

func (x *LibraryMutation) GetDeleted() bool {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return false
}

func (x *LibraryMutation) GetAppDetails() *LibraryAppDetails {
	if x != nil {
		return x.AppDetails
	}
	return nil
}

func (x *LibraryMutation) GetSubscriptionDetails() *LibrarySubscriptionDetails {
	if x != nil {
		return x.SubscriptionDetails
	}
	return nil
}

func (x *LibraryMutation) GetInAppDetails() *LibraryInAppDetails {
	if x != nil {
		return x.InAppDetails
	}
	return nil
}

type LibrarySubscriptionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitiationTimestampMsec *int64 `protobuf:"varint,1,opt,name=initiationTimestampMsec" json:"initiationTimestampMsec,omitempty"`
	ValidUntilTimestampMsec *int64 `protobuf:"varint,2,opt,name=validUntilTimestampMsec" json:"validUntilTimestampMsec,omitempty"`
	AutoRenewing            *bool  `protobuf:"varint,3,opt,name=autoRenewing" json:"autoRenewing,omitempty"`
	TrialUntilTimestampMsec *int64 `protobuf:"varint,4,opt,name=trialUntilTimestampMsec" json:"trialUntilTimestampMsec,omitempty"`
}

func (x *LibrarySubscriptionDetails) Reset() {
	*x = LibrarySubscriptionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibrarySubscriptionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibrarySubscriptionDetails) ProtoMessage() {}

func (x *LibrarySubscriptionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibrarySubscriptionDetails.ProtoReflect.Descriptor instead.
func (*LibrarySubscriptionDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{104}
}

func (x *LibrarySubscriptionDetails) GetInitiationTimestampMsec() int64 {
	if x != nil && x.InitiationTimestampMsec != nil {
		return *x.InitiationTimestampMsec
	}
	return 0
}

func (x *LibrarySubscriptionDetails) GetValidUntilTimestampMsec() int64 {
	if x != nil && x.ValidUntilTimestampMsec != nil {
		return *x.ValidUntilTimestampMsec
	}
	return 0
}

func (x *LibrarySubscriptionDetails) GetAutoRenewing() bool {
	if x != nil && x.AutoRenewing != nil {
		return *x.AutoRenewing
	}
	return false
}

func (x *LibrarySubscriptionDetails) GetTrialUntilTimestampMsec() int64 {
	if x != nil && x.TrialUntilTimestampMsec != nil {
		return *x.TrialUntilTimestampMsec
	}
	return 0
}

type LibraryUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *int32             `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Corpus      *int32             `protobuf:"varint,2,opt,name=corpus" json:"corpus,omitempty"`
	ServerToken []byte             `protobuf:"bytes,3,opt,name=serverToken" json:"serverToken,omitempty"`
	Mutation    []*LibraryMutation `protobuf:"bytes,4,rep,name=mutation" json:"mutation,omitempty"`
	HasMore     *bool              `protobuf:"varint,5,opt,name=hasMore" json:"hasMore,omitempty"`
	LibraryId   *string            `protobuf:"bytes,6,opt,name=libraryId" json:"libraryId,omitempty"`
}

func (x *LibraryUpdate) Reset() {
	*x = LibraryUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibraryUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibraryUpdate) ProtoMessage() {}

func (x *LibraryUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibraryUpdate.ProtoReflect.Descriptor instead.
func (*LibraryUpdate) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{105}
}

func (x *LibraryUpdate) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *LibraryUpdate) GetCorpus() int32 {
	if x != nil && x.Corpus != nil {
		return *x.Corpus
	}
	return 0
}

func (x *LibraryUpdate) GetServerToken() []byte {
	if x != nil {
		return x.ServerToken
	}
	return nil
}

func (x *LibraryUpdate) GetMutation() []*LibraryMutation {
	if x != nil {
		return x.Mutation
	}
	return nil
}

func (x *LibraryUpdate) GetHasMore() bool {
	if x != nil && x.HasMore != nil {
		return *x.HasMore
	}
	return false
}

func (x *LibraryUpdate) GetLibraryId() string {
	if x != nil && x.LibraryId != nil {
		return *x.LibraryId
	}
	return ""
}

type AndroidAppNotificationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionCode *int32  `protobuf:"varint,1,opt,name=versionCode" json:"versionCode,omitempty"`
	AssetId     *string `protobuf:"bytes,2,opt,name=assetId" json:"assetId,omitempty"`
}

func (x *AndroidAppNotificationData) Reset() {
	*x = AndroidAppNotificationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidAppNotificationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidAppNotificationData) ProtoMessage() {}

func (x *AndroidAppNotificationData) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidAppNotificationData.ProtoReflect.Descriptor instead.
func (*AndroidAppNotificationData) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{106}
}

func (x *AndroidAppNotificationData) GetVersionCode() int32 {
	if x != nil && x.VersionCode != nil {
		return *x.VersionCode
	}
	return 0
}

func (x *AndroidAppNotificationData) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

type InAppNotificationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckoutOrderId     *string `protobuf:"bytes,1,opt,name=checkoutOrderId" json:"checkoutOrderId,omitempty"`
	InAppNotificationId *string `protobuf:"bytes,2,opt,name=inAppNotificationId" json:"inAppNotificationId,omitempty"`
}

func (x *InAppNotificationData) Reset() {
	*x = InAppNotificationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InAppNotificationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InAppNotificationData) ProtoMessage() {}

func (x *InAppNotificationData) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InAppNotificationData.ProtoReflect.Descriptor instead.
func (*InAppNotificationData) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{107}
}

func (x *InAppNotificationData) GetCheckoutOrderId() string {
	if x != nil && x.CheckoutOrderId != nil {
		return *x.CheckoutOrderId
	}
	return ""
}

func (x *InAppNotificationData) GetInAppNotificationId() string {
	if x != nil && x.InAppNotificationId != nil {
		return *x.InAppNotificationId
	}
	return ""
}

type LibraryDirtyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Backend *int32 `protobuf:"varint,1,opt,name=backend" json:"backend,omitempty"`
}

func (x *LibraryDirtyData) Reset() {
	*x = LibraryDirtyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibraryDirtyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibraryDirtyData) ProtoMessage() {}

func (x *LibraryDirtyData) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibraryDirtyData.ProtoReflect.Descriptor instead.
func (*LibraryDirtyData) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{108}
}

func (x *LibraryDirtyData) GetBackend() int32 {
	if x != nil && x.Backend != nil {
		return *x.Backend
	}
	return 0
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationType      *int32                      `protobuf:"varint,1,opt,name=notificationType" json:"notificationType,omitempty"`
	Timestamp             *int64                      `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Docid                 *Docid                      `protobuf:"bytes,4,opt,name=docid" json:"docid,omitempty"`
	DocTitle              *string                     `protobuf:"bytes,5,opt,name=docTitle" json:"docTitle,omitempty"`
	UserEmail             *string                     `protobuf:"bytes,6,opt,name=userEmail" json:"userEmail,omitempty"`
	AppData               *AndroidAppNotificationData `protobuf:"bytes,7,opt,name=appData" json:"appData,omitempty"`
	AppDeliveryData       *AndroidAppDeliveryData     `protobuf:"bytes,8,opt,name=appDeliveryData" json:"appDeliveryData,omitempty"`
	PurchaseRemovalData   *PurchaseRemovalData        `protobuf:"bytes,9,opt,name=purchaseRemovalData" json:"purchaseRemovalData,omitempty"`
	UserNotificationData  *UserNotificationData       `protobuf:"bytes,10,opt,name=userNotificationData" json:"userNotificationData,omitempty"`
	InAppNotificationData *InAppNotificationData      `protobuf:"bytes,11,opt,name=inAppNotificationData" json:"inAppNotificationData,omitempty"`
	PurchaseDeclinedData  *PurchaseDeclinedData       `protobuf:"bytes,12,opt,name=purchaseDeclinedData" json:"purchaseDeclinedData,omitempty"`
	NotificationId        *string                     `protobuf:"bytes,13,opt,name=notificationId" json:"notificationId,omitempty"`
	LibraryUpdate         *LibraryUpdate              `protobuf:"bytes,14,opt,name=libraryUpdate" json:"libraryUpdate,omitempty"`
	LibraryDirtyData      *LibraryDirtyData           `protobuf:"bytes,15,opt,name=libraryDirtyData" json:"libraryDirtyData,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{109}
}

func (x *Notification) GetNotificationType() int32 {
	if x != nil && x.NotificationType != nil {
		return *x.NotificationType
	}
	return 0
}

func (x *Notification) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *Notification) GetDocid() *Docid {
	if x != nil {
		return x.Docid
	}
	return nil
}

func (x *Notification) GetDocTitle() string {
	if x != nil && x.DocTitle != nil {
		return *x.DocTitle
	}
	return ""
}

func (x *Notification) GetUserEmail() string {
	if x != nil && x.UserEmail != nil {
		return *x.UserEmail
	}
	return ""
}

func (x *Notification) GetAppData() *AndroidAppNotificationData {
	if x != nil {
		return x.AppData
	}
	return nil
}

func (x *Notification) GetAppDeliveryData() *AndroidAppDeliveryData {
	if x != nil {
		return x.AppDeliveryData
	}
	return nil
}

func (x *Notification) GetPurchaseRemovalData() *PurchaseRemovalData {
	if x != nil {
		return x.PurchaseRemovalData
	}
	return nil
}

func (x *Notification) GetUserNotificationData() *UserNotificationData {
	if x != nil {
		return x.UserNotificationData
	}
	return nil
}

func (x *Notification) GetInAppNotificationData() *InAppNotificationData {
	if x != nil {
		return x.InAppNotificationData
	}
	return nil
}

func (x *Notification) GetPurchaseDeclinedData() *PurchaseDeclinedData {
	if x != nil {
		return x.PurchaseDeclinedData
	}
	return nil
}

func (x *Notification) GetNotificationId() string {
	if x != nil && x.NotificationId != nil {
		return *x.NotificationId
	}
	return ""
}

func (x *Notification) GetLibraryUpdate() *LibraryUpdate {
	if x != nil {
		return x.LibraryUpdate
	}
	return nil
}

func (x *Notification) GetLibraryDirtyData() *LibraryDirtyData {
	if x != nil {
		return x.LibraryDirtyData
	}
	return nil
}

type PurchaseDeclinedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason           *int32 `protobuf:"varint,1,opt,name=reason" json:"reason,omitempty"`
	ShowNotification *bool  `protobuf:"varint,2,opt,name=showNotification" json:"showNotification,omitempty"`
}

func (x *PurchaseDeclinedData) Reset() {
	*x = PurchaseDeclinedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseDeclinedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseDeclinedData) ProtoMessage() {}

func (x *PurchaseDeclinedData) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseDeclinedData.ProtoReflect.Descriptor instead.
func (*PurchaseDeclinedData) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{110}
}

func (x *PurchaseDeclinedData) GetReason() int32 {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return 0
}

func (x *PurchaseDeclinedData) GetShowNotification() bool {
	if x != nil && x.ShowNotification != nil {
		return *x.ShowNotification
	}
	return false
}

type PurchaseRemovalData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Malicious *bool `protobuf:"varint,1,opt,name=malicious" json:"malicious,omitempty"`
}

func (x *PurchaseRemovalData) Reset() {
	*x = PurchaseRemovalData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseRemovalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseRemovalData) ProtoMessage() {}

func (x *PurchaseRemovalData) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseRemovalData.ProtoReflect.Descriptor instead.
func (*PurchaseRemovalData) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{111}
}

func (x *PurchaseRemovalData) GetMalicious() bool {
	if x != nil && x.Malicious != nil {
		return *x.Malicious
	}
	return false
}

type UserNotificationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationTitle *string `protobuf:"bytes,1,opt,name=notificationTitle" json:"notificationTitle,omitempty"`
	NotificationText  *string `protobuf:"bytes,2,opt,name=notificationText" json:"notificationText,omitempty"`
	TickerText        *string `protobuf:"bytes,3,opt,name=tickerText" json:"tickerText,omitempty"`
	DialogTitle       *string `protobuf:"bytes,4,opt,name=dialogTitle" json:"dialogTitle,omitempty"`
	DialogText        *string `protobuf:"bytes,5,opt,name=dialogText" json:"dialogText,omitempty"`
}

func (x *UserNotificationData) Reset() {
	*x = UserNotificationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNotificationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNotificationData) ProtoMessage() {}

func (x *UserNotificationData) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNotificationData.ProtoReflect.Descriptor instead.
func (*UserNotificationData) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{112}
}

func (x *UserNotificationData) GetNotificationTitle() string {
	if x != nil && x.NotificationTitle != nil {
		return *x.NotificationTitle
	}
	return ""
}

func (x *UserNotificationData) GetNotificationText() string {
	if x != nil && x.NotificationText != nil {
		return *x.NotificationText
	}
	return ""
}

func (x *UserNotificationData) GetTickerText() string {
	if x != nil && x.TickerText != nil {
		return *x.TickerText
	}
	return ""
}

func (x *UserNotificationData) GetDialogTitle() string {
	if x != nil && x.DialogTitle != nil {
		return *x.DialogTitle
	}
	return ""
}

func (x *UserNotificationData) GetDialogText() string {
	if x != nil && x.DialogText != nil {
		return *x.DialogText
	}
	return ""
}

type AggregateRating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type               *int32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	StarRating         *float32 `protobuf:"fixed32,2,opt,name=starRating" json:"starRating,omitempty"`
	RatingsCount       *uint64  `protobuf:"varint,3,opt,name=ratingsCount" json:"ratingsCount,omitempty"`
	OneStarRatings     *uint64  `protobuf:"varint,4,opt,name=oneStarRatings" json:"oneStarRatings,omitempty"`
	TwoStarRatings     *uint64  `protobuf:"varint,5,opt,name=twoStarRatings" json:"twoStarRatings,omitempty"`
	ThreeStarRatings   *uint64  `protobuf:"varint,6,opt,name=threeStarRatings" json:"threeStarRatings,omitempty"`
	FourStarRatings    *uint64  `protobuf:"varint,7,opt,name=fourStarRatings" json:"fourStarRatings,omitempty"`
	FiveStarRatings    *uint64  `protobuf:"varint,8,opt,name=fiveStarRatings" json:"fiveStarRatings,omitempty"`
	ThumbsUpCount      *uint64  `protobuf:"varint,9,opt,name=thumbsUpCount" json:"thumbsUpCount,omitempty"`
	ThumbsDownCount    *uint64  `protobuf:"varint,10,opt,name=thumbsDownCount" json:"thumbsDownCount,omitempty"`
	CommentCount       *uint64  `protobuf:"varint,11,opt,name=commentCount" json:"commentCount,omitempty"`
	BayesianMeanRating *float64 `protobuf:"fixed64,12,opt,name=bayesianMeanRating" json:"bayesianMeanRating,omitempty"`
}

func (x *AggregateRating) Reset() {
	*x = AggregateRating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRating) ProtoMessage() {}

func (x *AggregateRating) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRating.ProtoReflect.Descriptor instead.
func (*AggregateRating) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{113}
}

func (x *AggregateRating) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *AggregateRating) GetStarRating() float32 {
	if x != nil && x.StarRating != nil {
		return *x.StarRating
	}
	return 0
}

func (x *AggregateRating) GetRatingsCount() uint64 {
	if x != nil && x.RatingsCount != nil {
		return *x.RatingsCount
	}
	return 0
}

func (x *AggregateRating) GetOneStarRatings() uint64 {
	if x != nil && x.OneStarRatings != nil {
		return *x.OneStarRatings
	}
	return 0
}

func (x *AggregateRating) GetTwoStarRatings() uint64 {
	if x != nil && x.TwoStarRatings != nil {
		return *x.TwoStarRatings
	}
	return 0
}

func (x *AggregateRating) GetThreeStarRatings() uint64 {
	if x != nil && x.ThreeStarRatings != nil {
		return *x.ThreeStarRatings
	}
	return 0
}

func (x *AggregateRating) GetFourStarRatings() uint64 {
	if x != nil && x.FourStarRatings != nil {
		return *x.FourStarRatings
	}
	return 0
}

func (x *AggregateRating) GetFiveStarRatings() uint64 {
	if x != nil && x.FiveStarRatings != nil {
		return *x.FiveStarRatings
	}
	return 0
}

func (x *AggregateRating) GetThumbsUpCount() uint64 {
	if x != nil && x.ThumbsUpCount != nil {
		return *x.ThumbsUpCount
	}
	return 0
}

func (x *AggregateRating) GetThumbsDownCount() uint64 {
	if x != nil && x.ThumbsDownCount != nil {
		return *x.ThumbsDownCount
	}
	return 0
}

func (x *AggregateRating) GetCommentCount() uint64 {
	if x != nil && x.CommentCount != nil {
		return *x.CommentCount
	}
	return 0
}

func (x *AggregateRating) GetBayesianMeanRating() float64 {
	if x != nil && x.BayesianMeanRating != nil {
		return *x.BayesianMeanRating
	}
	return 0
}

type AcceptTosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptTosResponse) Reset() {
	*x = AcceptTosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptTosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTosResponse) ProtoMessage() {}

func (x *AcceptTosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTosResponse.ProtoReflect.Descriptor instead.
func (*AcceptTosResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{114}
}

type CarrierBillingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                                         *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                                       *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ApiVersion                                 *int32  `protobuf:"varint,3,opt,name=apiVersion" json:"apiVersion,omitempty"`
	ProvisioningUrl                            *string `protobuf:"bytes,4,opt,name=provisioningUrl" json:"provisioningUrl,omitempty"`
	CredentialsUrl                             *string `protobuf:"bytes,5,opt,name=credentialsUrl" json:"credentialsUrl,omitempty"`
	TosRequired                                *bool   `protobuf:"varint,6,opt,name=tosRequired" json:"tosRequired,omitempty"`
	PerTransactionCredentialsRequired          *bool   `protobuf:"varint,7,opt,name=perTransactionCredentialsRequired" json:"perTransactionCredentialsRequired,omitempty"`
	SendSubscriberIdWithCarrierBillingRequests *bool   `protobuf:"varint,8,opt,name=sendSubscriberIdWithCarrierBillingRequests" json:"sendSubscriberIdWithCarrierBillingRequests,omitempty"`
}

func (x *CarrierBillingConfig) Reset() {
	*x = CarrierBillingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarrierBillingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierBillingConfig) ProtoMessage() {}

func (x *CarrierBillingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierBillingConfig.ProtoReflect.Descriptor instead.
func (*CarrierBillingConfig) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{115}
}

func (x *CarrierBillingConfig) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *CarrierBillingConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CarrierBillingConfig) GetApiVersion() int32 {
	if x != nil && x.ApiVersion != nil {
		return *x.ApiVersion
	}
	return 0
}

func (x *CarrierBillingConfig) GetProvisioningUrl() string {
	if x != nil && x.ProvisioningUrl != nil {
		return *x.ProvisioningUrl
	}
	return ""
}

func (x *CarrierBillingConfig) GetCredentialsUrl() string {
	if x != nil && x.CredentialsUrl != nil {
		return *x.CredentialsUrl
	}
	return ""
}

func (x *CarrierBillingConfig) GetTosRequired() bool {
	if x != nil && x.TosRequired != nil {
		return *x.TosRequired
	}
	return false
}

func (x *CarrierBillingConfig) GetPerTransactionCredentialsRequired() bool {
	if x != nil && x.PerTransactionCredentialsRequired != nil {
		return *x.PerTransactionCredentialsRequired
	}
	return false
}

func (x *CarrierBillingConfig) GetSendSubscriberIdWithCarrierBillingRequests() bool {
	if x != nil && x.SendSubscriberIdWithCarrierBillingRequests != nil {
		return *x.SendSubscriberIdWithCarrierBillingRequests
	}
	return false
}

type BillingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarrierBillingConfig *CarrierBillingConfig `protobuf:"bytes,1,opt,name=carrierBillingConfig" json:"carrierBillingConfig,omitempty"`
	MaxIabApiVersion     *int32                `protobuf:"varint,2,opt,name=maxIabApiVersion" json:"maxIabApiVersion,omitempty"`
}

func (x *BillingConfig) Reset() {
	*x = BillingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingConfig) ProtoMessage() {}

func (x *BillingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingConfig.ProtoReflect.Descriptor instead.
func (*BillingConfig) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{116}
}

func (x *BillingConfig) GetCarrierBillingConfig() *CarrierBillingConfig {
	if x != nil {
		return x.CarrierBillingConfig
	}
	return nil
}

func (x *BillingConfig) GetMaxIabApiVersion() int32 {
	if x != nil && x.MaxIabApiVersion != nil {
		return *x.MaxIabApiVersion
	}
	return 0
}

type CorpusMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Backend       *int32  `protobuf:"varint,1,opt,name=backend" json:"backend,omitempty"`
	Name          *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	LandingUrl    *string `protobuf:"bytes,3,opt,name=landingUrl" json:"landingUrl,omitempty"`
	LibraryName   *string `protobuf:"bytes,4,opt,name=libraryName" json:"libraryName,omitempty"`
	RecsWidgetUrl *string `protobuf:"bytes,6,opt,name=recsWidgetUrl" json:"recsWidgetUrl,omitempty"`
	ShopName      *string `protobuf:"bytes,7,opt,name=shopName" json:"shopName,omitempty"`
}

func (x *CorpusMetadata) Reset() {
	*x = CorpusMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CorpusMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CorpusMetadata) ProtoMessage() {}

func (x *CorpusMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CorpusMetadata.ProtoReflect.Descriptor instead.
func (*CorpusMetadata) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{117}
}

func (x *CorpusMetadata) GetBackend() int32 {
	if x != nil && x.Backend != nil {
		return *x.Backend
	}
	return 0
}

func (x *CorpusMetadata) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CorpusMetadata) GetLandingUrl() string {
	if x != nil && x.LandingUrl != nil {
		return *x.LandingUrl
	}
	return ""
}

func (x *CorpusMetadata) GetLibraryName() string {
	if x != nil && x.LibraryName != nil {
		return *x.LibraryName
	}
	return ""
}

func (x *CorpusMetadata) GetRecsWidgetUrl() string {
	if x != nil && x.RecsWidgetUrl != nil {
		return *x.RecsWidgetUrl
	}
	return ""
}

func (x *CorpusMetadata) GetShopName() string {
	if x != nil && x.ShopName != nil {
		return *x.ShopName
	}
	return ""
}

type Experiments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExperimentId []string `protobuf:"bytes,1,rep,name=experimentId" json:"experimentId,omitempty"`
}

func (x *Experiments) Reset() {
	*x = Experiments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Experiments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Experiments) ProtoMessage() {}

func (x *Experiments) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Experiments.ProtoReflect.Descriptor instead.
func (*Experiments) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{118}
}

func (x *Experiments) GetExperimentId() []string {
	if x != nil {
		return x.ExperimentId
	}
	return nil
}

type SelfUpdateConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatestClientVersionCode *int32 `protobuf:"varint,1,opt,name=latestClientVersionCode" json:"latestClientVersionCode,omitempty"`
}

func (x *SelfUpdateConfig) Reset() {
	*x = SelfUpdateConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfUpdateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfUpdateConfig) ProtoMessage() {}

func (x *SelfUpdateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfUpdateConfig.ProtoReflect.Descriptor instead.
func (*SelfUpdateConfig) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{119}
}

func (x *SelfUpdateConfig) GetLatestClientVersionCode() int32 {
	if x != nil && x.LatestClientVersionCode != nil {
		return *x.LatestClientVersionCode
	}
	return 0
}

type TocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Corpus                         []*CorpusMetadata `protobuf:"bytes,1,rep,name=corpus" json:"corpus,omitempty"`
	TosVersionDeprecated           *int32            `protobuf:"varint,2,opt,name=tosVersionDeprecated" json:"tosVersionDeprecated,omitempty"`
	TosContent                     *string           `protobuf:"bytes,3,opt,name=tosContent" json:"tosContent,omitempty"`
	HomeUrl                        *string           `protobuf:"bytes,4,opt,name=homeUrl" json:"homeUrl,omitempty"`
	Experiments                    *Experiments      `protobuf:"bytes,5,opt,name=experiments" json:"experiments,omitempty"`
	TosCheckboxTextMarketingEmails *string           `protobuf:"bytes,6,opt,name=tosCheckboxTextMarketingEmails" json:"tosCheckboxTextMarketingEmails,omitempty"`
	TosToken                       *string           `protobuf:"bytes,7,opt,name=tosToken" json:"tosToken,omitempty"`
	IconOverrideUrl                *string           `protobuf:"bytes,9,opt,name=iconOverrideUrl" json:"iconOverrideUrl,omitempty"`
	SelfUpdateConfig               *SelfUpdateConfig `protobuf:"bytes,10,opt,name=selfUpdateConfig" json:"selfUpdateConfig,omitempty"`
	RequiresUploadDeviceConfig     *bool             `protobuf:"varint,11,opt,name=requiresUploadDeviceConfig" json:"requiresUploadDeviceConfig,omitempty"`
	BillingConfig                  *BillingConfig    `protobuf:"bytes,12,opt,name=billingConfig" json:"billingConfig,omitempty"`
	RecsWidgetUrl                  *string           `protobuf:"bytes,13,opt,name=recsWidgetUrl" json:"recsWidgetUrl,omitempty"`
	SocialHomeUrl                  *string           `protobuf:"bytes,15,opt,name=socialHomeUrl" json:"socialHomeUrl,omitempty"`
	AgeVerificationRequired        *bool             `protobuf:"varint,16,opt,name=ageVerificationRequired" json:"ageVerificationRequired,omitempty"`
	GplusSignupEnabled             *bool             `protobuf:"varint,17,opt,name=gplusSignupEnabled" json:"gplusSignupEnabled,omitempty"`
	RedeemEnabled                  *bool             `protobuf:"varint,18,opt,name=redeemEnabled" json:"redeemEnabled,omitempty"`
	HelpUrl                        *string           `protobuf:"bytes,19,opt,name=helpUrl" json:"helpUrl,omitempty"`
	ThemeId                        *int32            `protobuf:"varint,20,opt,name=themeId" json:"themeId,omitempty"`
	EntertainmentHomeUrl           *string           `protobuf:"bytes,21,opt,name=entertainmentHomeUrl" json:"entertainmentHomeUrl,omitempty"`
	Cookie                         *string           `protobuf:"bytes,22,opt,name=cookie" json:"cookie,omitempty"`
}

func (x *TocResponse) Reset() {
	*x = TocResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TocResponse) ProtoMessage() {}

func (x *TocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TocResponse.ProtoReflect.Descriptor instead.
func (*TocResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{120}
}

func (x *TocResponse) GetCorpus() []*CorpusMetadata {
	if x != nil {
		return x.Corpus
	}
	return nil
}

func (x *TocResponse) GetTosVersionDeprecated() int32 {
	if x != nil && x.TosVersionDeprecated != nil {
		return *x.TosVersionDeprecated
	}
	return 0
}

func (x *TocResponse) GetTosContent() string {
	if x != nil && x.TosContent != nil {
		return *x.TosContent
	}
	return ""
}

func (x *TocResponse) GetHomeUrl() string {
	if x != nil && x.HomeUrl != nil {
		return *x.HomeUrl
	}
	return ""
}

func (x *TocResponse) GetExperiments() *Experiments {
	if x != nil {
		return x.Experiments
	}
	return nil
}

func (x *TocResponse) GetTosCheckboxTextMarketingEmails() string {
	if x != nil && x.TosCheckboxTextMarketingEmails != nil {
		return *x.TosCheckboxTextMarketingEmails
	}
	return ""
}

func (x *TocResponse) GetTosToken() string {
	if x != nil && x.TosToken != nil {
		return *x.TosToken
	}
	return ""
}

func (x *TocResponse) GetIconOverrideUrl() string {
	if x != nil && x.IconOverrideUrl != nil {
		return *x.IconOverrideUrl
	}
	return ""
}

func (x *TocResponse) GetSelfUpdateConfig() *SelfUpdateConfig {
	if x != nil {
		return x.SelfUpdateConfig
	}
	return nil
}

func (x *TocResponse) GetRequiresUploadDeviceConfig() bool {
	if x != nil && x.RequiresUploadDeviceConfig != nil {
		return *x.RequiresUploadDeviceConfig
	}
	return false
}

func (x *TocResponse) GetBillingConfig() *BillingConfig {
	if x != nil {
		return x.BillingConfig
	}
	return nil
}

func (x *TocResponse) GetRecsWidgetUrl() string {
	if x != nil && x.RecsWidgetUrl != nil {
		return *x.RecsWidgetUrl
	}
	return ""
}

func (x *TocResponse) GetSocialHomeUrl() string {
	if x != nil && x.SocialHomeUrl != nil {
		return *x.SocialHomeUrl
	}
	return ""
}

func (x *TocResponse) GetAgeVerificationRequired() bool {
	if x != nil && x.AgeVerificationRequired != nil {
		return *x.AgeVerificationRequired
	}
	return false
}

func (x *TocResponse) GetGplusSignupEnabled() bool {
	if x != nil && x.GplusSignupEnabled != nil {
		return *x.GplusSignupEnabled
	}
	return false
}

func (x *TocResponse) GetRedeemEnabled() bool {
	if x != nil && x.RedeemEnabled != nil {
		return *x.RedeemEnabled
	}
	return false
}

func (x *TocResponse) GetHelpUrl() string {
	if x != nil && x.HelpUrl != nil {
		return *x.HelpUrl
	}
	return ""
}

func (x *TocResponse) GetThemeId() int32 {
	if x != nil && x.ThemeId != nil {
		return *x.ThemeId
	}
	return 0
}

func (x *TocResponse) GetEntertainmentHomeUrl() string {
	if x != nil && x.EntertainmentHomeUrl != nil {
		return *x.EntertainmentHomeUrl
	}
	return ""
}

func (x *TocResponse) GetCookie() string {
	if x != nil && x.Cookie != nil {
		return *x.Cookie
	}
	return ""
}

type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListResponse               *ListResponse               `protobuf:"bytes,1,opt,name=listResponse" json:"listResponse,omitempty"`
	DetailsResponse            *DetailsResponse            `protobuf:"bytes,2,opt,name=detailsResponse" json:"detailsResponse,omitempty"`
	ReviewResponse             *ReviewResponse             `protobuf:"bytes,3,opt,name=reviewResponse" json:"reviewResponse,omitempty"`
	BuyResponse                *BuyResponse                `protobuf:"bytes,4,opt,name=buyResponse" json:"buyResponse,omitempty"`
	SearchResponse             *SearchResponse             `protobuf:"bytes,5,opt,name=searchResponse" json:"searchResponse,omitempty"`
	TocResponse                *TocResponse                `protobuf:"bytes,6,opt,name=tocResponse" json:"tocResponse,omitempty"`
	BrowseResponse             *BrowseResponse             `protobuf:"bytes,7,opt,name=browseResponse" json:"browseResponse,omitempty"`
	PurchaseStatusResponse     *PurchaseStatusResponse     `protobuf:"bytes,8,opt,name=purchaseStatusResponse" json:"purchaseStatusResponse,omitempty"`
	LogResponse                *string                     `protobuf:"bytes,10,opt,name=logResponse" json:"logResponse,omitempty"`
	FlagContentResponse        *string                     `protobuf:"bytes,13,opt,name=flagContentResponse" json:"flagContentResponse,omitempty"`
	BulkDetailsResponse        *BulkDetailsResponse        `protobuf:"bytes,19,opt,name=bulkDetailsResponse" json:"bulkDetailsResponse,omitempty"`
	DeliveryResponse           *DeliveryResponse           `protobuf:"bytes,21,opt,name=deliveryResponse" json:"deliveryResponse,omitempty"`
	AcceptTosResponse          *AcceptTosResponse          `protobuf:"bytes,22,opt,name=acceptTosResponse" json:"acceptTosResponse,omitempty"`
	AndroidCheckinResponse     *AndroidCheckinResponse     `protobuf:"bytes,26,opt,name=androidCheckinResponse" json:"androidCheckinResponse,omitempty"`
	UploadDeviceConfigResponse *UploadDeviceConfigResponse `protobuf:"bytes,28,opt,name=uploadDeviceConfigResponse" json:"uploadDeviceConfigResponse,omitempty"`
	SearchSuggestResponse      *SearchSuggestResponse      `protobuf:"bytes,40,opt,name=searchSuggestResponse" json:"searchSuggestResponse,omitempty"`
	TestingProgramResponse     *TestingProgramResponse     `protobuf:"bytes,80,opt,name=testingProgramResponse" json:"testingProgramResponse,omitempty"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{121}
}

func (x *Payload) GetListResponse() *ListResponse {
	if x != nil {
		return x.ListResponse
	}
	return nil
}

func (x *Payload) GetDetailsResponse() *DetailsResponse {
	if x != nil {
		return x.DetailsResponse
	}
	return nil
}

func (x *Payload) GetReviewResponse() *ReviewResponse {
	if x != nil {
		return x.ReviewResponse
	}
	return nil
}

func (x *Payload) GetBuyResponse() *BuyResponse {
	if x != nil {
		return x.BuyResponse
	}
	return nil
}

func (x *Payload) GetSearchResponse() *SearchResponse {
	if x != nil {
		return x.SearchResponse
	}
	return nil
}

func (x *Payload) GetTocResponse() *TocResponse {
	if x != nil {
		return x.TocResponse
	}
	return nil
}

func (x *Payload) GetBrowseResponse() *BrowseResponse {
	if x != nil {
		return x.BrowseResponse
	}
	return nil
}

func (x *Payload) GetPurchaseStatusResponse() *PurchaseStatusResponse {
	if x != nil {
		return x.PurchaseStatusResponse
	}
	return nil
}

func (x *Payload) GetLogResponse() string {
	if x != nil && x.LogResponse != nil {
		return *x.LogResponse
	}
	return ""
}

func (x *Payload) GetFlagContentResponse() string {
	if x != nil && x.FlagContentResponse != nil {
		return *x.FlagContentResponse
	}
	return ""
}

func (x *Payload) GetBulkDetailsResponse() *BulkDetailsResponse {
	if x != nil {
		return x.BulkDetailsResponse
	}
	return nil
}

func (x *Payload) GetDeliveryResponse() *DeliveryResponse {
	if x != nil {
		return x.DeliveryResponse
	}
	return nil
}

func (x *Payload) GetAcceptTosResponse() *AcceptTosResponse {
	if x != nil {
		return x.AcceptTosResponse
	}
	return nil
}

func (x *Payload) GetAndroidCheckinResponse() *AndroidCheckinResponse {
	if x != nil {
		return x.AndroidCheckinResponse
	}
	return nil
}

func (x *Payload) GetUploadDeviceConfigResponse() *UploadDeviceConfigResponse {
	if x != nil {
		return x.UploadDeviceConfigResponse
	}
	return nil
}

func (x *Payload) GetSearchSuggestResponse() *SearchSuggestResponse {
	if x != nil {
		return x.SearchSuggestResponse
	}
	return nil
}

func (x *Payload) GetTestingProgramResponse() *TestingProgramResponse {
	if x != nil {
		return x.TestingProgramResponse
	}
	return nil
}

type PreFetch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      *string          `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Response *ResponseWrapper `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
	Etag     *string          `protobuf:"bytes,3,opt,name=etag" json:"etag,omitempty"`
	Ttl      *int64           `protobuf:"varint,4,opt,name=ttl" json:"ttl,omitempty"`
	SoftTtl  *int64           `protobuf:"varint,5,opt,name=softTtl" json:"softTtl,omitempty"`
}

func (x *PreFetch) Reset() {
	*x = PreFetch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreFetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreFetch) ProtoMessage() {}

func (x *PreFetch) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreFetch.ProtoReflect.Descriptor instead.
func (*PreFetch) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{122}
}

func (x *PreFetch) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *PreFetch) GetResponse() *ResponseWrapper {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *PreFetch) GetEtag() string {
	if x != nil && x.Etag != nil {
		return *x.Etag
	}
	return ""
}

func (x *PreFetch) GetTtl() int64 {
	if x != nil && x.Ttl != nil {
		return *x.Ttl
	}
	return 0
}

func (x *PreFetch) GetSoftTtl() int64 {
	if x != nil && x.SoftTtl != nil {
		return *x.SoftTtl
	}
	return 0
}

type ServerMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatencyMillis *int64 `protobuf:"varint,1,opt,name=latencyMillis" json:"latencyMillis,omitempty"`
}

func (x *ServerMetadata) Reset() {
	*x = ServerMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMetadata) ProtoMessage() {}

func (x *ServerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMetadata.ProtoReflect.Descriptor instead.
func (*ServerMetadata) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{123}
}

func (x *ServerMetadata) GetLatencyMillis() int64 {
	if x != nil && x.LatencyMillis != nil {
		return *x.LatencyMillis
	}
	return 0
}

type Targets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId  []int64 `protobuf:"varint,1,rep,name=targetId" json:"targetId,omitempty"`
	Signature []byte  `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
}

func (x *Targets) Reset() {
	*x = Targets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Targets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Targets) ProtoMessage() {}

func (x *Targets) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Targets.ProtoReflect.Descriptor instead.
func (*Targets) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{124}
}

func (x *Targets) GetTargetId() []int64 {
	if x != nil {
		return x.TargetId
	}
	return nil
}

func (x *Targets) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ServerCookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Token []byte `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (x *ServerCookie) Reset() {
	*x = ServerCookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCookie) ProtoMessage() {}

func (x *ServerCookie) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCookie.ProtoReflect.Descriptor instead.
func (*ServerCookie) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{125}
}

func (x *ServerCookie) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ServerCookie) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type ServerCookies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerCookie []*ServerCookie `protobuf:"bytes,1,rep,name=serverCookie" json:"serverCookie,omitempty"`
}

func (x *ServerCookies) Reset() {
	*x = ServerCookies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCookies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCookies) ProtoMessage() {}

func (x *ServerCookies) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCookies.ProtoReflect.Descriptor instead.
func (*ServerCookies) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{126}
}

func (x *ServerCookies) GetServerCookie() []*ServerCookie {
	if x != nil {
		return x.ServerCookie
	}
	return nil
}

type ResponseWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload          *Payload        `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
	Commands         *ServerCommands `protobuf:"bytes,2,opt,name=commands" json:"commands,omitempty"`
	PreFetch         []*PreFetch     `protobuf:"bytes,3,rep,name=preFetch" json:"preFetch,omitempty"`
	Notification     []*Notification `protobuf:"bytes,4,rep,name=notification" json:"notification,omitempty"`
	ServerMetadata   *ServerMetadata `protobuf:"bytes,5,opt,name=serverMetadata" json:"serverMetadata,omitempty"`
	Targets          *Targets        `protobuf:"bytes,6,opt,name=targets" json:"targets,omitempty"`
	ServerCookies    *ServerCookies  `protobuf:"bytes,7,opt,name=serverCookies" json:"serverCookies,omitempty"`
	ServerLogsCookie []byte          `protobuf:"bytes,9,opt,name=serverLogsCookie" json:"serverLogsCookie,omitempty"`
}

func (x *ResponseWrapper) Reset() {
	*x = ResponseWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseWrapper) ProtoMessage() {}

func (x *ResponseWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseWrapper.ProtoReflect.Descriptor instead.
func (*ResponseWrapper) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{127}
}

func (x *ResponseWrapper) GetPayload() *Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ResponseWrapper) GetCommands() *ServerCommands {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *ResponseWrapper) GetPreFetch() []*PreFetch {
	if x != nil {
		return x.PreFetch
	}
	return nil
}

func (x *ResponseWrapper) GetNotification() []*Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *ResponseWrapper) GetServerMetadata() *ServerMetadata {
	if x != nil {
		return x.ServerMetadata
	}
	return nil
}

func (x *ResponseWrapper) GetTargets() *Targets {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *ResponseWrapper) GetServerCookies() *ServerCookies {
	if x != nil {
		return x.ServerCookies
	}
	return nil
}

func (x *ResponseWrapper) GetServerLogsCookie() []byte {
	if x != nil {
		return x.ServerLogsCookie
	}
	return nil
}

type ResponseWrapperApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *PayloadApi `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
}

func (x *ResponseWrapperApi) Reset() {
	*x = ResponseWrapperApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseWrapperApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseWrapperApi) ProtoMessage() {}

func (x *ResponseWrapperApi) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseWrapperApi.ProtoReflect.Descriptor instead.
func (*ResponseWrapperApi) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{128}
}

func (x *ResponseWrapperApi) GetPayload() *PayloadApi {
	if x != nil {
		return x.Payload
	}
	return nil
}

type PayloadApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserProfileResponse *UserProfileResponse `protobuf:"bytes,5,opt,name=userProfileResponse" json:"userProfileResponse,omitempty"`
}

func (x *PayloadApi) Reset() {
	*x = PayloadApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadApi) ProtoMessage() {}

func (x *PayloadApi) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadApi.ProtoReflect.Descriptor instead.
func (*PayloadApi) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{129}
}

func (x *PayloadApi) GetUserProfileResponse() *UserProfileResponse {
	if x != nil {
		return x.UserProfileResponse
	}
	return nil
}

type UserProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserProfile *UserProfile `protobuf:"bytes,1,opt,name=userProfile" json:"userProfile,omitempty"`
}

func (x *UserProfileResponse) Reset() {
	*x = UserProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfileResponse) ProtoMessage() {}

func (x *UserProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfileResponse.ProtoReflect.Descriptor instead.
func (*UserProfileResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{130}
}

func (x *UserProfileResponse) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

type ServerCommands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClearCache          *bool   `protobuf:"varint,1,opt,name=clearCache" json:"clearCache,omitempty"`
	DisplayErrorMessage *string `protobuf:"bytes,2,opt,name=displayErrorMessage" json:"displayErrorMessage,omitempty"`
	LogErrorStacktrace  *string `protobuf:"bytes,3,opt,name=logErrorStacktrace" json:"logErrorStacktrace,omitempty"`
}

func (x *ServerCommands) Reset() {
	*x = ServerCommands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCommands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCommands) ProtoMessage() {}

func (x *ServerCommands) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCommands.ProtoReflect.Descriptor instead.
func (*ServerCommands) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{131}
}

func (x *ServerCommands) GetClearCache() bool {
	if x != nil && x.ClearCache != nil {
		return *x.ClearCache
	}
	return false
}

func (x *ServerCommands) GetDisplayErrorMessage() string {
	if x != nil && x.DisplayErrorMessage != nil {
		return *x.DisplayErrorMessage
	}
	return ""
}

func (x *ServerCommands) GetLogErrorStacktrace() string {
	if x != nil && x.LogErrorStacktrace != nil {
		return *x.LogErrorStacktrace
	}
	return ""
}

type GetReviewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Review        []*Review `protobuf:"bytes,1,rep,name=review" json:"review,omitempty"`
	MatchingCount *int64    `protobuf:"varint,2,opt,name=matchingCount" json:"matchingCount,omitempty"`
}

func (x *GetReviewsResponse) Reset() {
	*x = GetReviewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewsResponse) ProtoMessage() {}

func (x *GetReviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewsResponse.ProtoReflect.Descriptor instead.
func (*GetReviewsResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{132}
}

func (x *GetReviewsResponse) GetReview() []*Review {
	if x != nil {
		return x.Review
	}
	return nil
}

func (x *GetReviewsResponse) GetMatchingCount() int64 {
	if x != nil && x.MatchingCount != nil {
		return *x.MatchingCount
	}
	return 0
}

type Review struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorName         *string       `protobuf:"bytes,1,opt,name=authorName" json:"authorName,omitempty"`
	Url                *string       `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Source             *string       `protobuf:"bytes,3,opt,name=source" json:"source,omitempty"`
	DocumentVersion    *string       `protobuf:"bytes,4,opt,name=documentVersion" json:"documentVersion,omitempty"`
	TimestampMsec      *int64        `protobuf:"varint,5,opt,name=timestampMsec" json:"timestampMsec,omitempty"`
	StarRating         *int32        `protobuf:"varint,6,opt,name=starRating" json:"starRating,omitempty"`
	Title              *string       `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	Comment            *string       `protobuf:"bytes,8,opt,name=comment" json:"comment,omitempty"`
	CommentId          *string       `protobuf:"bytes,9,opt,name=commentId" json:"commentId,omitempty"`
	DeviceName         *string       `protobuf:"bytes,19,opt,name=deviceName" json:"deviceName,omitempty"`
	ReplyText          *string       `protobuf:"bytes,29,opt,name=replyText" json:"replyText,omitempty"`
	ReplyTimestampMsec *int64        `protobuf:"varint,30,opt,name=replyTimestampMsec" json:"replyTimestampMsec,omitempty"`
	Author             *ReviewAuthor `protobuf:"bytes,31,opt,name=author" json:"author,omitempty"`
	UserProfile        *UserProfile  `protobuf:"bytes,33,opt,name=userProfile" json:"userProfile,omitempty"`
}

func (x *Review) Reset() {
	*x = Review{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Review) ProtoMessage() {}

func (x *Review) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Review.ProtoReflect.Descriptor instead.
func (*Review) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{133}
}

func (x *Review) GetAuthorName() string {
	if x != nil && x.AuthorName != nil {
		return *x.AuthorName
	}
	return ""
}

func (x *Review) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Review) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *Review) GetDocumentVersion() string {
	if x != nil && x.DocumentVersion != nil {
		return *x.DocumentVersion
	}
	return ""
}

func (x *Review) GetTimestampMsec() int64 {
	if x != nil && x.TimestampMsec != nil {
		return *x.TimestampMsec
	}
	return 0
}

func (x *Review) GetStarRating() int32 {
	if x != nil && x.StarRating != nil {
		return *x.StarRating
	}
	return 0
}

func (x *Review) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Review) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *Review) GetCommentId() string {
	if x != nil && x.CommentId != nil {
		return *x.CommentId
	}
	return ""
}

func (x *Review) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *Review) GetReplyText() string {
	if x != nil && x.ReplyText != nil {
		return *x.ReplyText
	}
	return ""
}

func (x *Review) GetReplyTimestampMsec() int64 {
	if x != nil && x.ReplyTimestampMsec != nil {
		return *x.ReplyTimestampMsec
	}
	return 0
}

func (x *Review) GetAuthor() *ReviewAuthor {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Review) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

type ReviewAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Avatar *Image  `protobuf:"bytes,5,opt,name=avatar" json:"avatar,omitempty"`
}

func (x *ReviewAuthor) Reset() {
	*x = ReviewAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewAuthor) ProtoMessage() {}

func (x *ReviewAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewAuthor.ProtoReflect.Descriptor instead.
func (*ReviewAuthor) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{134}
}

func (x *ReviewAuthor) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ReviewAuthor) GetAvatar() *Image {
	if x != nil {
		return x.Avatar
	}
	return nil
}

type UserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonIdString    *string  `protobuf:"bytes,1,opt,name=personIdString" json:"personIdString,omitempty"`
	PersonId          *string  `protobuf:"bytes,2,opt,name=personId" json:"personId,omitempty"`
	Unknown1          *int32   `protobuf:"varint,3,opt,name=unknown1" json:"unknown1,omitempty"`
	Unknown2          *int32   `protobuf:"varint,4,opt,name=unknown2" json:"unknown2,omitempty"`
	Name              *string  `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Image             []*Image `protobuf:"bytes,10,rep,name=image" json:"image,omitempty"`
	GooglePlusUrl     *string  `protobuf:"bytes,19,opt,name=googlePlusUrl" json:"googlePlusUrl,omitempty"`
	GooglePlusTagline *string  `protobuf:"bytes,22,opt,name=googlePlusTagline" json:"googlePlusTagline,omitempty"`
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile.ProtoReflect.Descriptor instead.
func (*UserProfile) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{135}
}

func (x *UserProfile) GetPersonIdString() string {
	if x != nil && x.PersonIdString != nil {
		return *x.PersonIdString
	}
	return ""
}

func (x *UserProfile) GetPersonId() string {
	if x != nil && x.PersonId != nil {
		return *x.PersonId
	}
	return ""
}

func (x *UserProfile) GetUnknown1() int32 {
	if x != nil && x.Unknown1 != nil {
		return *x.Unknown1
	}
	return 0
}

func (x *UserProfile) GetUnknown2() int32 {
	if x != nil && x.Unknown2 != nil {
		return *x.Unknown2
	}
	return 0
}

func (x *UserProfile) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UserProfile) GetImage() []*Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *UserProfile) GetGooglePlusUrl() string {
	if x != nil && x.GooglePlusUrl != nil {
		return *x.GooglePlusUrl
	}
	return ""
}

func (x *UserProfile) GetGooglePlusTagline() string {
	if x != nil && x.GooglePlusTagline != nil {
		return *x.GooglePlusTagline
	}
	return ""
}

type ReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetResponse *GetReviewsResponse `protobuf:"bytes,1,opt,name=getResponse" json:"getResponse,omitempty"`
	NextPageUrl *string             `protobuf:"bytes,2,opt,name=nextPageUrl" json:"nextPageUrl,omitempty"`
	UserReview  *Review             `protobuf:"bytes,3,opt,name=userReview" json:"userReview,omitempty"`
}

func (x *ReviewResponse) Reset() {
	*x = ReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewResponse) ProtoMessage() {}

func (x *ReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewResponse.ProtoReflect.Descriptor instead.
func (*ReviewResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{136}
}

func (x *ReviewResponse) GetGetResponse() *GetReviewsResponse {
	if x != nil {
		return x.GetResponse
	}
	return nil
}

func (x *ReviewResponse) GetNextPageUrl() string {
	if x != nil && x.NextPageUrl != nil {
		return *x.NextPageUrl
	}
	return ""
}

func (x *ReviewResponse) GetUserReview() *Review {
	if x != nil {
		return x.UserReview
	}
	return nil
}

type RelatedSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchUrl *string `protobuf:"bytes,1,opt,name=searchUrl" json:"searchUrl,omitempty"`
	Header    *string `protobuf:"bytes,2,opt,name=header" json:"header,omitempty"`
	BackendId *int32  `protobuf:"varint,3,opt,name=backendId" json:"backendId,omitempty"`
	DocType   *int32  `protobuf:"varint,4,opt,name=docType" json:"docType,omitempty"`
	Current   *bool   `protobuf:"varint,5,opt,name=current" json:"current,omitempty"`
}

func (x *RelatedSearch) Reset() {
	*x = RelatedSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatedSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedSearch) ProtoMessage() {}

func (x *RelatedSearch) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedSearch.ProtoReflect.Descriptor instead.
func (*RelatedSearch) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{137}
}

func (x *RelatedSearch) GetSearchUrl() string {
	if x != nil && x.SearchUrl != nil {
		return *x.SearchUrl
	}
	return ""
}

func (x *RelatedSearch) GetHeader() string {
	if x != nil && x.Header != nil {
		return *x.Header
	}
	return ""
}

func (x *RelatedSearch) GetBackendId() int32 {
	if x != nil && x.BackendId != nil {
		return *x.BackendId
	}
	return 0
}

func (x *RelatedSearch) GetDocType() int32 {
	if x != nil && x.DocType != nil {
		return *x.DocType
	}
	return 0
}

func (x *RelatedSearch) GetCurrent() bool {
	if x != nil && x.Current != nil {
		return *x.Current
	}
	return false
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalQuery  *string          `protobuf:"bytes,1,opt,name=originalQuery" json:"originalQuery,omitempty"`
	SuggestedQuery *string          `protobuf:"bytes,2,opt,name=suggestedQuery" json:"suggestedQuery,omitempty"`
	AggregateQuery *bool            `protobuf:"varint,3,opt,name=aggregateQuery" json:"aggregateQuery,omitempty"`
	Bucket         []*Bucket        `protobuf:"bytes,4,rep,name=bucket" json:"bucket,omitempty"`
	Doc            []*DocV2         `protobuf:"bytes,5,rep,name=doc" json:"doc,omitempty"`
	RelatedSearch  []*RelatedSearch `protobuf:"bytes,6,rep,name=relatedSearch" json:"relatedSearch,omitempty"`
	NextPageUrl    *string          `protobuf:"bytes,10,opt,name=nextPageUrl" json:"nextPageUrl,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{138}
}

func (x *SearchResponse) GetOriginalQuery() string {
	if x != nil && x.OriginalQuery != nil {
		return *x.OriginalQuery
	}
	return ""
}

func (x *SearchResponse) GetSuggestedQuery() string {
	if x != nil && x.SuggestedQuery != nil {
		return *x.SuggestedQuery
	}
	return ""
}

func (x *SearchResponse) GetAggregateQuery() bool {
	if x != nil && x.AggregateQuery != nil {
		return *x.AggregateQuery
	}
	return false
}

func (x *SearchResponse) GetBucket() []*Bucket {
	if x != nil {
		return x.Bucket
	}
	return nil
}

func (x *SearchResponse) GetDoc() []*DocV2 {
	if x != nil {
		return x.Doc
	}
	return nil
}

func (x *SearchResponse) GetRelatedSearch() []*RelatedSearch {
	if x != nil {
		return x.RelatedSearch
	}
	return nil
}

func (x *SearchResponse) GetNextPageUrl() string {
	if x != nil && x.NextPageUrl != nil {
		return *x.NextPageUrl
	}
	return ""
}

type SearchSuggestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry []*SearchSuggestEntry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
}

func (x *SearchSuggestResponse) Reset() {
	*x = SearchSuggestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSuggestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSuggestResponse) ProtoMessage() {}

func (x *SearchSuggestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSuggestResponse.ProtoReflect.Descriptor instead.
func (*SearchSuggestResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{139}
}

func (x *SearchSuggestResponse) GetEntry() []*SearchSuggestEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type SearchSuggestEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                 *int32                                   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	SuggestedQuery       *string                                  `protobuf:"bytes,2,opt,name=suggestedQuery" json:"suggestedQuery,omitempty"`
	ImageContainer       *SearchSuggestEntry_ImageContainer       `protobuf:"bytes,5,opt,name=imageContainer" json:"imageContainer,omitempty"`
	Title                *string                                  `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	PackageNameContainer *SearchSuggestEntry_PackageNameContainer `protobuf:"bytes,8,opt,name=packageNameContainer" json:"packageNameContainer,omitempty"`
}

func (x *SearchSuggestEntry) Reset() {
	*x = SearchSuggestEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSuggestEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSuggestEntry) ProtoMessage() {}

func (x *SearchSuggestEntry) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSuggestEntry.ProtoReflect.Descriptor instead.
func (*SearchSuggestEntry) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{140}
}

func (x *SearchSuggestEntry) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SearchSuggestEntry) GetSuggestedQuery() string {
	if x != nil && x.SuggestedQuery != nil {
		return *x.SuggestedQuery
	}
	return ""
}

func (x *SearchSuggestEntry) GetImageContainer() *SearchSuggestEntry_ImageContainer {
	if x != nil {
		return x.ImageContainer
	}
	return nil
}

func (x *SearchSuggestEntry) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *SearchSuggestEntry) GetPackageNameContainer() *SearchSuggestEntry_PackageNameContainer {
	if x != nil {
		return x.PackageNameContainer
	}
	return nil
}

type TestingProgramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *TestingProgramResult `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (x *TestingProgramResponse) Reset() {
	*x = TestingProgramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramResponse) ProtoMessage() {}

func (x *TestingProgramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramResponse.ProtoReflect.Descriptor instead.
func (*TestingProgramResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{141}
}

func (x *TestingProgramResponse) GetResult() *TestingProgramResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type TestingProgramResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *TestingProgramDetails `protobuf:"bytes,4,opt,name=details" json:"details,omitempty"`
}

func (x *TestingProgramResult) Reset() {
	*x = TestingProgramResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramResult) ProtoMessage() {}

func (x *TestingProgramResult) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramResult.ProtoReflect.Descriptor instead.
func (*TestingProgramResult) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{142}
}

func (x *TestingProgramResult) GetDetails() *TestingProgramDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type TestingProgramDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag1        *bool  `protobuf:"varint,2,opt,name=flag1" json:"flag1,omitempty"`
	Id           *int64 `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Unsubscribed *bool  `protobuf:"varint,4,opt,name=unsubscribed" json:"unsubscribed,omitempty"`
}

func (x *TestingProgramDetails) Reset() {
	*x = TestingProgramDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramDetails) ProtoMessage() {}

func (x *TestingProgramDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramDetails.ProtoReflect.Descriptor instead.
func (*TestingProgramDetails) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{143}
}

func (x *TestingProgramDetails) GetFlag1() bool {
	if x != nil && x.Flag1 != nil {
		return *x.Flag1
	}
	return false
}

func (x *TestingProgramDetails) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *TestingProgramDetails) GetUnsubscribed() bool {
	if x != nil && x.Unsubscribed != nil {
		return *x.Unsubscribed
	}
	return false
}

type LogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp                 *int64  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	DownloadConfirmationQuery *string `protobuf:"bytes,2,opt,name=downloadConfirmationQuery" json:"downloadConfirmationQuery,omitempty"`
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{144}
}

func (x *LogRequest) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *LogRequest) GetDownloadConfirmationQuery() string {
	if x != nil && x.DownloadConfirmationQuery != nil {
		return *x.DownloadConfirmationQuery
	}
	return ""
}

type TestingProgramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageName *string `protobuf:"bytes,1,opt,name=packageName" json:"packageName,omitempty"`
	Subscribe   *bool   `protobuf:"varint,2,opt,name=subscribe" json:"subscribe,omitempty"`
}

func (x *TestingProgramRequest) Reset() {
	*x = TestingProgramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramRequest) ProtoMessage() {}

func (x *TestingProgramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramRequest.ProtoReflect.Descriptor instead.
func (*TestingProgramRequest) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{145}
}

func (x *TestingProgramRequest) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

func (x *TestingProgramRequest) GetSubscribe() bool {
	if x != nil && x.Subscribe != nil {
		return *x.Subscribe
	}
	return false
}

type UploadDeviceConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceConfiguration *DeviceConfigurationProto `protobuf:"bytes,1,opt,name=deviceConfiguration" json:"deviceConfiguration,omitempty"`
	Manufacturer        *string                   `protobuf:"bytes,2,opt,name=manufacturer" json:"manufacturer,omitempty"`
	GcmRegistrationId   *string                   `protobuf:"bytes,3,opt,name=gcmRegistrationId" json:"gcmRegistrationId,omitempty"`
}

func (x *UploadDeviceConfigRequest) Reset() {
	*x = UploadDeviceConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDeviceConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDeviceConfigRequest) ProtoMessage() {}

func (x *UploadDeviceConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDeviceConfigRequest.ProtoReflect.Descriptor instead.
func (*UploadDeviceConfigRequest) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{146}
}

func (x *UploadDeviceConfigRequest) GetDeviceConfiguration() *DeviceConfigurationProto {
	if x != nil {
		return x.DeviceConfiguration
	}
	return nil
}

func (x *UploadDeviceConfigRequest) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *UploadDeviceConfigRequest) GetGcmRegistrationId() string {
	if x != nil && x.GcmRegistrationId != nil {
		return *x.GcmRegistrationId
	}
	return ""
}

type UploadDeviceConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadDeviceConfigToken *string `protobuf:"bytes,1,opt,name=uploadDeviceConfigToken" json:"uploadDeviceConfigToken,omitempty"`
}

func (x *UploadDeviceConfigResponse) Reset() {
	*x = UploadDeviceConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDeviceConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDeviceConfigResponse) ProtoMessage() {}

func (x *UploadDeviceConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDeviceConfigResponse.ProtoReflect.Descriptor instead.
func (*UploadDeviceConfigResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{147}
}

func (x *UploadDeviceConfigResponse) GetUploadDeviceConfigToken() string {
	if x != nil && x.UploadDeviceConfigToken != nil {
		return *x.UploadDeviceConfigToken
	}
	return ""
}

type AndroidCheckinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei                *string                   `protobuf:"bytes,1,opt,name=imei" json:"imei,omitempty"`
	Id                  *int64                    `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Digest              *string                   `protobuf:"bytes,3,opt,name=digest" json:"digest,omitempty"`
	Checkin             *AndroidCheckinProto      `protobuf:"bytes,4,opt,name=checkin" json:"checkin,omitempty"`
	DesiredBuild        *string                   `protobuf:"bytes,5,opt,name=desiredBuild" json:"desiredBuild,omitempty"`
	Locale              *string                   `protobuf:"bytes,6,opt,name=locale" json:"locale,omitempty"`
	LoggingId           *int64                    `protobuf:"varint,7,opt,name=loggingId" json:"loggingId,omitempty"`
	MarketCheckin       *string                   `protobuf:"bytes,8,opt,name=marketCheckin" json:"marketCheckin,omitempty"`
	MacAddr             []string                  `protobuf:"bytes,9,rep,name=macAddr" json:"macAddr,omitempty"`
	Meid                *string                   `protobuf:"bytes,10,opt,name=meid" json:"meid,omitempty"`
	AccountCookie       []string                  `protobuf:"bytes,11,rep,name=accountCookie" json:"accountCookie,omitempty"`
	TimeZone            *string                   `protobuf:"bytes,12,opt,name=timeZone" json:"timeZone,omitempty"`
	SecurityToken       *uint64                   `protobuf:"fixed64,13,opt,name=securityToken" json:"securityToken,omitempty"`
	Version             *int32                    `protobuf:"varint,14,opt,name=version" json:"version,omitempty"`
	OtaCert             []string                  `protobuf:"bytes,15,rep,name=otaCert" json:"otaCert,omitempty"`
	SerialNumber        *string                   `protobuf:"bytes,16,opt,name=serialNumber" json:"serialNumber,omitempty"`
	Esn                 *string                   `protobuf:"bytes,17,opt,name=esn" json:"esn,omitempty"`
	DeviceConfiguration *DeviceConfigurationProto `protobuf:"bytes,18,opt,name=deviceConfiguration" json:"deviceConfiguration,omitempty"`
	MacAddrType         []string                  `protobuf:"bytes,19,rep,name=macAddrType" json:"macAddrType,omitempty"`
	Fragment            *int32                    `protobuf:"varint,20,opt,name=fragment" json:"fragment,omitempty"`
	UserName            *string                   `protobuf:"bytes,21,opt,name=userName" json:"userName,omitempty"`
	UserSerialNumber    *int32                    `protobuf:"varint,22,opt,name=userSerialNumber" json:"userSerialNumber,omitempty"`
}

func (x *AndroidCheckinRequest) Reset() {
	*x = AndroidCheckinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidCheckinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidCheckinRequest) ProtoMessage() {}

func (x *AndroidCheckinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidCheckinRequest.ProtoReflect.Descriptor instead.
func (*AndroidCheckinRequest) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{148}
}

func (x *AndroidCheckinRequest) GetImei() string {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return ""
}

func (x *AndroidCheckinRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *AndroidCheckinRequest) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

func (x *AndroidCheckinRequest) GetCheckin() *AndroidCheckinProto {
	if x != nil {
		return x.Checkin
	}
	return nil
}

func (x *AndroidCheckinRequest) GetDesiredBuild() string {
	if x != nil && x.DesiredBuild != nil {
		return *x.DesiredBuild
	}
	return ""
}

func (x *AndroidCheckinRequest) GetLocale() string {
	if x != nil && x.Locale != nil {
		return *x.Locale
	}
	return ""
}

func (x *AndroidCheckinRequest) GetLoggingId() int64 {
	if x != nil && x.LoggingId != nil {
		return *x.LoggingId
	}
	return 0
}

func (x *AndroidCheckinRequest) GetMarketCheckin() string {
	if x != nil && x.MarketCheckin != nil {
		return *x.MarketCheckin
	}
	return ""
}

func (x *AndroidCheckinRequest) GetMacAddr() []string {
	if x != nil {
		return x.MacAddr
	}
	return nil
}

func (x *AndroidCheckinRequest) GetMeid() string {
	if x != nil && x.Meid != nil {
		return *x.Meid
	}
	return ""
}

func (x *AndroidCheckinRequest) GetAccountCookie() []string {
	if x != nil {
		return x.AccountCookie
	}
	return nil
}

func (x *AndroidCheckinRequest) GetTimeZone() string {
	if x != nil && x.TimeZone != nil {
		return *x.TimeZone
	}
	return ""
}

func (x *AndroidCheckinRequest) GetSecurityToken() uint64 {
	if x != nil && x.SecurityToken != nil {
		return *x.SecurityToken
	}
	return 0
}

func (x *AndroidCheckinRequest) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *AndroidCheckinRequest) GetOtaCert() []string {
	if x != nil {
		return x.OtaCert
	}
	return nil
}

func (x *AndroidCheckinRequest) GetSerialNumber() string {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return ""
}

func (x *AndroidCheckinRequest) GetEsn() string {
	if x != nil && x.Esn != nil {
		return *x.Esn
	}
	return ""
}

func (x *AndroidCheckinRequest) GetDeviceConfiguration() *DeviceConfigurationProto {
	if x != nil {
		return x.DeviceConfiguration
	}
	return nil
}

func (x *AndroidCheckinRequest) GetMacAddrType() []string {
	if x != nil {
		return x.MacAddrType
	}
	return nil
}

func (x *AndroidCheckinRequest) GetFragment() int32 {
	if x != nil && x.Fragment != nil {
		return *x.Fragment
	}
	return 0
}

func (x *AndroidCheckinRequest) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *AndroidCheckinRequest) GetUserSerialNumber() int32 {
	if x != nil && x.UserSerialNumber != nil {
		return *x.UserSerialNumber
	}
	return 0
}

type AndroidCheckinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatsOk                       *bool                 `protobuf:"varint,1,opt,name=statsOk" json:"statsOk,omitempty"`
	Intent                        []*AndroidIntentProto `protobuf:"bytes,2,rep,name=intent" json:"intent,omitempty"`
	TimeMsec                      *int64                `protobuf:"varint,3,opt,name=timeMsec" json:"timeMsec,omitempty"`
	Digest                        *string               `protobuf:"bytes,4,opt,name=digest" json:"digest,omitempty"`
	Setting                       []*GservicesSetting   `protobuf:"bytes,5,rep,name=setting" json:"setting,omitempty"`
	MarketOk                      *bool                 `protobuf:"varint,6,opt,name=marketOk" json:"marketOk,omitempty"`
	AndroidId                     *uint64               `protobuf:"fixed64,7,opt,name=androidId" json:"androidId,omitempty"`
	SecurityToken                 *uint64               `protobuf:"fixed64,8,opt,name=securityToken" json:"securityToken,omitempty"`
	SettingsDiff                  *bool                 `protobuf:"varint,9,opt,name=settingsDiff" json:"settingsDiff,omitempty"`
	DeleteSetting                 []string              `protobuf:"bytes,10,rep,name=deleteSetting" json:"deleteSetting,omitempty"`
	DeviceCheckinConsistencyToken *string               `protobuf:"bytes,12,opt,name=deviceCheckinConsistencyToken" json:"deviceCheckinConsistencyToken,omitempty"`
}

func (x *AndroidCheckinResponse) Reset() {
	*x = AndroidCheckinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidCheckinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidCheckinResponse) ProtoMessage() {}

func (x *AndroidCheckinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidCheckinResponse.ProtoReflect.Descriptor instead.
func (*AndroidCheckinResponse) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{149}
}

func (x *AndroidCheckinResponse) GetStatsOk() bool {
	if x != nil && x.StatsOk != nil {
		return *x.StatsOk
	}
	return false
}

func (x *AndroidCheckinResponse) GetIntent() []*AndroidIntentProto {
	if x != nil {
		return x.Intent
	}
	return nil
}

func (x *AndroidCheckinResponse) GetTimeMsec() int64 {
	if x != nil && x.TimeMsec != nil {
		return *x.TimeMsec
	}
	return 0
}

func (x *AndroidCheckinResponse) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

func (x *AndroidCheckinResponse) GetSetting() []*GservicesSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *AndroidCheckinResponse) GetMarketOk() bool {
	if x != nil && x.MarketOk != nil {
		return *x.MarketOk
	}
	return false
}

func (x *AndroidCheckinResponse) GetAndroidId() uint64 {
	if x != nil && x.AndroidId != nil {
		return *x.AndroidId
	}
	return 0
}

func (x *AndroidCheckinResponse) GetSecurityToken() uint64 {
	if x != nil && x.SecurityToken != nil {
		return *x.SecurityToken
	}
	return 0
}

func (x *AndroidCheckinResponse) GetSettingsDiff() bool {
	if x != nil && x.SettingsDiff != nil {
		return *x.SettingsDiff
	}
	return false
}

func (x *AndroidCheckinResponse) GetDeleteSetting() []string {
	if x != nil {
		return x.DeleteSetting
	}
	return nil
}

func (x *AndroidCheckinResponse) GetDeviceCheckinConsistencyToken() string {
	if x != nil && x.DeviceCheckinConsistencyToken != nil {
		return *x.DeviceCheckinConsistencyToken
	}
	return ""
}

type GservicesSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  []byte `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *GservicesSetting) Reset() {
	*x = GservicesSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GservicesSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GservicesSetting) ProtoMessage() {}

func (x *GservicesSetting) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GservicesSetting.ProtoReflect.Descriptor instead.
func (*GservicesSetting) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{150}
}

func (x *GservicesSetting) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *GservicesSetting) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type AndroidBuildProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Product        *string `protobuf:"bytes,2,opt,name=product" json:"product,omitempty"`
	Carrier        *string `protobuf:"bytes,3,opt,name=carrier" json:"carrier,omitempty"`
	Radio          *string `protobuf:"bytes,4,opt,name=radio" json:"radio,omitempty"`
	Bootloader     *string `protobuf:"bytes,5,opt,name=bootloader" json:"bootloader,omitempty"`
	Client         *string `protobuf:"bytes,6,opt,name=client" json:"client,omitempty"`
	Timestamp      *int64  `protobuf:"varint,7,opt,name=timestamp" json:"timestamp,omitempty"`
	GoogleServices *int32  `protobuf:"varint,8,opt,name=googleServices" json:"googleServices,omitempty"`
	Device         *string `protobuf:"bytes,9,opt,name=device" json:"device,omitempty"`
	SdkVersion     *int32  `protobuf:"varint,10,opt,name=sdkVersion" json:"sdkVersion,omitempty"`
	Model          *string `protobuf:"bytes,11,opt,name=model" json:"model,omitempty"`
	Manufacturer   *string `protobuf:"bytes,12,opt,name=manufacturer" json:"manufacturer,omitempty"`
	BuildProduct   *string `protobuf:"bytes,13,opt,name=buildProduct" json:"buildProduct,omitempty"`
	OtaInstalled   *bool   `protobuf:"varint,14,opt,name=otaInstalled" json:"otaInstalled,omitempty"`
}

func (x *AndroidBuildProto) Reset() {
	*x = AndroidBuildProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidBuildProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidBuildProto) ProtoMessage() {}

func (x *AndroidBuildProto) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidBuildProto.ProtoReflect.Descriptor instead.
func (*AndroidBuildProto) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{151}
}

func (x *AndroidBuildProto) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *AndroidBuildProto) GetProduct() string {
	if x != nil && x.Product != nil {
		return *x.Product
	}
	return ""
}

func (x *AndroidBuildProto) GetCarrier() string {
	if x != nil && x.Carrier != nil {
		return *x.Carrier
	}
	return ""
}

func (x *AndroidBuildProto) GetRadio() string {
	if x != nil && x.Radio != nil {
		return *x.Radio
	}
	return ""
}

func (x *AndroidBuildProto) GetBootloader() string {
	if x != nil && x.Bootloader != nil {
		return *x.Bootloader
	}
	return ""
}

func (x *AndroidBuildProto) GetClient() string {
	if x != nil && x.Client != nil {
		return *x.Client
	}
	return ""
}

func (x *AndroidBuildProto) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *AndroidBuildProto) GetGoogleServices() int32 {
	if x != nil && x.GoogleServices != nil {
		return *x.GoogleServices
	}
	return 0
}

func (x *AndroidBuildProto) GetDevice() string {
	if x != nil && x.Device != nil {
		return *x.Device
	}
	return ""
}

func (x *AndroidBuildProto) GetSdkVersion() int32 {
	if x != nil && x.SdkVersion != nil {
		return *x.SdkVersion
	}
	return 0
}

func (x *AndroidBuildProto) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *AndroidBuildProto) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *AndroidBuildProto) GetBuildProduct() string {
	if x != nil && x.BuildProduct != nil {
		return *x.BuildProduct
	}
	return ""
}

func (x *AndroidBuildProto) GetOtaInstalled() bool {
	if x != nil && x.OtaInstalled != nil {
		return *x.OtaInstalled
	}
	return false
}

type AndroidCheckinProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Build           *AndroidBuildProto       `protobuf:"bytes,1,opt,name=build" json:"build,omitempty"`
	LastCheckinMsec *int64                   `protobuf:"varint,2,opt,name=lastCheckinMsec" json:"lastCheckinMsec,omitempty"`
	Event           []*AndroidEventProto     `protobuf:"bytes,3,rep,name=event" json:"event,omitempty"`
	Stat            []*AndroidStatisticProto `protobuf:"bytes,4,rep,name=stat" json:"stat,omitempty"`
	RequestedGroup  []string                 `protobuf:"bytes,5,rep,name=requestedGroup" json:"requestedGroup,omitempty"`
	CellOperator    *string                  `protobuf:"bytes,6,opt,name=cellOperator" json:"cellOperator,omitempty"`
	SimOperator     *string                  `protobuf:"bytes,7,opt,name=simOperator" json:"simOperator,omitempty"`
	Roaming         *string                  `protobuf:"bytes,8,opt,name=roaming" json:"roaming,omitempty"`
	UserNumber      *int32                   `protobuf:"varint,9,opt,name=userNumber" json:"userNumber,omitempty"`
}

func (x *AndroidCheckinProto) Reset() {
	*x = AndroidCheckinProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidCheckinProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidCheckinProto) ProtoMessage() {}

func (x *AndroidCheckinProto) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidCheckinProto.ProtoReflect.Descriptor instead.
func (*AndroidCheckinProto) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{152}
}

func (x *AndroidCheckinProto) GetBuild() *AndroidBuildProto {
	if x != nil {
		return x.Build
	}
	return nil
}

func (x *AndroidCheckinProto) GetLastCheckinMsec() int64 {
	if x != nil && x.LastCheckinMsec != nil {
		return *x.LastCheckinMsec
	}
	return 0
}

func (x *AndroidCheckinProto) GetEvent() []*AndroidEventProto {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *AndroidCheckinProto) GetStat() []*AndroidStatisticProto {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *AndroidCheckinProto) GetRequestedGroup() []string {
	if x != nil {
		return x.RequestedGroup
	}
	return nil
}

func (x *AndroidCheckinProto) GetCellOperator() string {
	if x != nil && x.CellOperator != nil {
		return *x.CellOperator
	}
	return ""
}

func (x *AndroidCheckinProto) GetSimOperator() string {
	if x != nil && x.SimOperator != nil {
		return *x.SimOperator
	}
	return ""
}

func (x *AndroidCheckinProto) GetRoaming() string {
	if x != nil && x.Roaming != nil {
		return *x.Roaming
	}
	return ""
}

func (x *AndroidCheckinProto) GetUserNumber() int32 {
	if x != nil && x.UserNumber != nil {
		return *x.UserNumber
	}
	return 0
}

type AndroidEventProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag      *string `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	Value    *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	TimeMsec *int64  `protobuf:"varint,3,opt,name=timeMsec" json:"timeMsec,omitempty"`
}

func (x *AndroidEventProto) Reset() {
	*x = AndroidEventProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidEventProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidEventProto) ProtoMessage() {}

func (x *AndroidEventProto) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidEventProto.ProtoReflect.Descriptor instead.
func (*AndroidEventProto) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{153}
}

func (x *AndroidEventProto) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *AndroidEventProto) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *AndroidEventProto) GetTimeMsec() int64 {
	if x != nil && x.TimeMsec != nil {
		return *x.TimeMsec
	}
	return 0
}

type AndroidIntentProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    *string                     `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	DataUri   *string                     `protobuf:"bytes,2,opt,name=dataUri" json:"dataUri,omitempty"`
	MimeType  *string                     `protobuf:"bytes,3,opt,name=mimeType" json:"mimeType,omitempty"`
	JavaClass *string                     `protobuf:"bytes,4,opt,name=javaClass" json:"javaClass,omitempty"`
	Extra     []*AndroidIntentProto_Extra `protobuf:"group,5,rep,name=Extra,json=extra" json:"extra,omitempty"`
}

func (x *AndroidIntentProto) Reset() {
	*x = AndroidIntentProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidIntentProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidIntentProto) ProtoMessage() {}

func (x *AndroidIntentProto) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidIntentProto.ProtoReflect.Descriptor instead.
func (*AndroidIntentProto) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{154}
}

func (x *AndroidIntentProto) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *AndroidIntentProto) GetDataUri() string {
	if x != nil && x.DataUri != nil {
		return *x.DataUri
	}
	return ""
}

func (x *AndroidIntentProto) GetMimeType() string {
	if x != nil && x.MimeType != nil {
		return *x.MimeType
	}
	return ""
}

func (x *AndroidIntentProto) GetJavaClass() string {
	if x != nil && x.JavaClass != nil {
		return *x.JavaClass
	}
	return ""
}

func (x *AndroidIntentProto) GetExtra() []*AndroidIntentProto_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type AndroidStatisticProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   *string  `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	Count *int32   `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Sum   *float32 `protobuf:"fixed32,3,opt,name=sum" json:"sum,omitempty"`
}

func (x *AndroidStatisticProto) Reset() {
	*x = AndroidStatisticProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidStatisticProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidStatisticProto) ProtoMessage() {}

func (x *AndroidStatisticProto) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidStatisticProto.ProtoReflect.Descriptor instead.
func (*AndroidStatisticProto) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{155}
}

func (x *AndroidStatisticProto) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *AndroidStatisticProto) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *AndroidStatisticProto) GetSum() float32 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

type ClientLibraryState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Corpus      *int32  `protobuf:"varint,1,opt,name=corpus" json:"corpus,omitempty"`
	ServerToken []byte  `protobuf:"bytes,2,opt,name=serverToken" json:"serverToken,omitempty"`
	HashCodeSum *int64  `protobuf:"varint,3,opt,name=hashCodeSum" json:"hashCodeSum,omitempty"`
	LibrarySize *int32  `protobuf:"varint,4,opt,name=librarySize" json:"librarySize,omitempty"`
	LibraryId   *string `protobuf:"bytes,5,opt,name=libraryId" json:"libraryId,omitempty"`
}

func (x *ClientLibraryState) Reset() {
	*x = ClientLibraryState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientLibraryState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientLibraryState) ProtoMessage() {}

func (x *ClientLibraryState) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientLibraryState.ProtoReflect.Descriptor instead.
func (*ClientLibraryState) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{156}
}

func (x *ClientLibraryState) GetCorpus() int32 {
	if x != nil && x.Corpus != nil {
		return *x.Corpus
	}
	return 0
}

func (x *ClientLibraryState) GetServerToken() []byte {
	if x != nil {
		return x.ServerToken
	}
	return nil
}

func (x *ClientLibraryState) GetHashCodeSum() int64 {
	if x != nil && x.HashCodeSum != nil {
		return *x.HashCodeSum
	}
	return 0
}

func (x *ClientLibraryState) GetLibrarySize() int32 {
	if x != nil && x.LibrarySize != nil {
		return *x.LibrarySize
	}
	return 0
}

func (x *ClientLibraryState) GetLibraryId() string {
	if x != nil && x.LibraryId != nil {
		return *x.LibraryId
	}
	return ""
}

type AndroidDataUsageProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version                 *int32                     `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	CurrentReportMsec       *int64                     `protobuf:"varint,2,opt,name=currentReportMsec" json:"currentReportMsec,omitempty"`
	KeyToPackageNameMapping []*KeyToPackageNameMapping `protobuf:"bytes,3,rep,name=keyToPackageNameMapping" json:"keyToPackageNameMapping,omitempty"`
	PayloadLevelAppStat     []*PayloadLevelAppStat     `protobuf:"bytes,4,rep,name=payloadLevelAppStat" json:"payloadLevelAppStat,omitempty"`
	IpLayerNetworkStat      []*IpLayerNetworkStat      `protobuf:"bytes,5,rep,name=ipLayerNetworkStat" json:"ipLayerNetworkStat,omitempty"`
}

func (x *AndroidDataUsageProto) Reset() {
	*x = AndroidDataUsageProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidDataUsageProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidDataUsageProto) ProtoMessage() {}

func (x *AndroidDataUsageProto) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidDataUsageProto.ProtoReflect.Descriptor instead.
func (*AndroidDataUsageProto) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{157}
}

func (x *AndroidDataUsageProto) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *AndroidDataUsageProto) GetCurrentReportMsec() int64 {
	if x != nil && x.CurrentReportMsec != nil {
		return *x.CurrentReportMsec
	}
	return 0
}

func (x *AndroidDataUsageProto) GetKeyToPackageNameMapping() []*KeyToPackageNameMapping {
	if x != nil {
		return x.KeyToPackageNameMapping
	}
	return nil
}

func (x *AndroidDataUsageProto) GetPayloadLevelAppStat() []*PayloadLevelAppStat {
	if x != nil {
		return x.PayloadLevelAppStat
	}
	return nil
}

func (x *AndroidDataUsageProto) GetIpLayerNetworkStat() []*IpLayerNetworkStat {
	if x != nil {
		return x.IpLayerNetworkStat
	}
	return nil
}

type AndroidUsageStatsReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AndroidId  *int64                    `protobuf:"varint,1,opt,name=androidId" json:"androidId,omitempty"`
	LoggingId  *int64                    `protobuf:"varint,2,opt,name=loggingId" json:"loggingId,omitempty"`
	UsageStats *UsageStatsExtensionProto `protobuf:"bytes,3,opt,name=usageStats" json:"usageStats,omitempty"`
}

func (x *AndroidUsageStatsReport) Reset() {
	*x = AndroidUsageStatsReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidUsageStatsReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidUsageStatsReport) ProtoMessage() {}

func (x *AndroidUsageStatsReport) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidUsageStatsReport.ProtoReflect.Descriptor instead.
func (*AndroidUsageStatsReport) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{158}
}

func (x *AndroidUsageStatsReport) GetAndroidId() int64 {
	if x != nil && x.AndroidId != nil {
		return *x.AndroidId
	}
	return 0
}

func (x *AndroidUsageStatsReport) GetLoggingId() int64 {
	if x != nil && x.LoggingId != nil {
		return *x.LoggingId
	}
	return 0
}

func (x *AndroidUsageStatsReport) GetUsageStats() *UsageStatsExtensionProto {
	if x != nil {
		return x.UsageStats
	}
	return nil
}

type AppBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketStartMsec    *int64          `protobuf:"varint,1,opt,name=bucketStartMsec" json:"bucketStartMsec,omitempty"`
	BucketDurationMsec *int64          `protobuf:"varint,2,opt,name=bucketDurationMsec" json:"bucketDurationMsec,omitempty"`
	StatCounters       []*StatCounters `protobuf:"bytes,3,rep,name=statCounters" json:"statCounters,omitempty"`
	OperationCount     *int64          `protobuf:"varint,4,opt,name=operationCount" json:"operationCount,omitempty"`
}

func (x *AppBucket) Reset() {
	*x = AppBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBucket) ProtoMessage() {}

func (x *AppBucket) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBucket.ProtoReflect.Descriptor instead.
func (*AppBucket) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{159}
}

func (x *AppBucket) GetBucketStartMsec() int64 {
	if x != nil && x.BucketStartMsec != nil {
		return *x.BucketStartMsec
	}
	return 0
}

func (x *AppBucket) GetBucketDurationMsec() int64 {
	if x != nil && x.BucketDurationMsec != nil {
		return *x.BucketDurationMsec
	}
	return 0
}

func (x *AppBucket) GetStatCounters() []*StatCounters {
	if x != nil {
		return x.StatCounters
	}
	return nil
}

func (x *AppBucket) GetOperationCount() int64 {
	if x != nil && x.OperationCount != nil {
		return *x.OperationCount
	}
	return 0
}

type CounterData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes   *int64 `protobuf:"varint,1,opt,name=bytes" json:"bytes,omitempty"`
	Packets *int64 `protobuf:"varint,2,opt,name=packets" json:"packets,omitempty"`
}

func (x *CounterData) Reset() {
	*x = CounterData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CounterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterData) ProtoMessage() {}

func (x *CounterData) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CounterData.ProtoReflect.Descriptor instead.
func (*CounterData) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{160}
}

func (x *CounterData) GetBytes() int64 {
	if x != nil && x.Bytes != nil {
		return *x.Bytes
	}
	return 0
}

func (x *CounterData) GetPackets() int64 {
	if x != nil && x.Packets != nil {
		return *x.Packets
	}
	return 0
}

type IpLayerAppStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageKey       *int32       `protobuf:"varint,1,opt,name=packageKey" json:"packageKey,omitempty"`
	ApplicationTag   *int32       `protobuf:"varint,2,opt,name=applicationTag" json:"applicationTag,omitempty"`
	IpLayerAppBucket []*AppBucket `protobuf:"bytes,3,rep,name=ipLayerAppBucket" json:"ipLayerAppBucket,omitempty"`
}

func (x *IpLayerAppStat) Reset() {
	*x = IpLayerAppStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpLayerAppStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpLayerAppStat) ProtoMessage() {}

func (x *IpLayerAppStat) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpLayerAppStat.ProtoReflect.Descriptor instead.
func (*IpLayerAppStat) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{161}
}

func (x *IpLayerAppStat) GetPackageKey() int32 {
	if x != nil && x.PackageKey != nil {
		return *x.PackageKey
	}
	return 0
}

func (x *IpLayerAppStat) GetApplicationTag() int32 {
	if x != nil && x.ApplicationTag != nil {
		return *x.ApplicationTag
	}
	return 0
}

func (x *IpLayerAppStat) GetIpLayerAppBucket() []*AppBucket {
	if x != nil {
		return x.IpLayerAppBucket
	}
	return nil
}

type IpLayerNetworkBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketStartMsec       *int64          `protobuf:"varint,1,opt,name=bucketStartMsec" json:"bucketStartMsec,omitempty"`
	BucketDurationMsec    *int64          `protobuf:"varint,2,opt,name=bucketDurationMsec" json:"bucketDurationMsec,omitempty"`
	StatCounters          []*StatCounters `protobuf:"bytes,3,rep,name=statCounters" json:"statCounters,omitempty"`
	NetworkActiveDuration *int64          `protobuf:"varint,4,opt,name=networkActiveDuration" json:"networkActiveDuration,omitempty"`
}

func (x *IpLayerNetworkBucket) Reset() {
	*x = IpLayerNetworkBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpLayerNetworkBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpLayerNetworkBucket) ProtoMessage() {}

func (x *IpLayerNetworkBucket) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpLayerNetworkBucket.ProtoReflect.Descriptor instead.
func (*IpLayerNetworkBucket) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{162}
}

func (x *IpLayerNetworkBucket) GetBucketStartMsec() int64 {
	if x != nil && x.BucketStartMsec != nil {
		return *x.BucketStartMsec
	}
	return 0
}

func (x *IpLayerNetworkBucket) GetBucketDurationMsec() int64 {
	if x != nil && x.BucketDurationMsec != nil {
		return *x.BucketDurationMsec
	}
	return 0
}

func (x *IpLayerNetworkBucket) GetStatCounters() []*StatCounters {
	if x != nil {
		return x.StatCounters
	}
	return nil
}

func (x *IpLayerNetworkBucket) GetNetworkActiveDuration() int64 {
	if x != nil && x.NetworkActiveDuration != nil {
		return *x.NetworkActiveDuration
	}
	return 0
}

type IpLayerNetworkStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkDetails       *string                 `protobuf:"bytes,1,opt,name=networkDetails" json:"networkDetails,omitempty"`
	Type                 *int32                  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	IpLayerNetworkBucket []*IpLayerNetworkBucket `protobuf:"bytes,3,rep,name=ipLayerNetworkBucket" json:"ipLayerNetworkBucket,omitempty"`
	IpLayerAppStat       []*IpLayerAppStat       `protobuf:"bytes,4,rep,name=ipLayerAppStat" json:"ipLayerAppStat,omitempty"`
}

func (x *IpLayerNetworkStat) Reset() {
	*x = IpLayerNetworkStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpLayerNetworkStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpLayerNetworkStat) ProtoMessage() {}

func (x *IpLayerNetworkStat) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpLayerNetworkStat.ProtoReflect.Descriptor instead.
func (*IpLayerNetworkStat) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{163}
}

func (x *IpLayerNetworkStat) GetNetworkDetails() string {
	if x != nil && x.NetworkDetails != nil {
		return *x.NetworkDetails
	}
	return ""
}

func (x *IpLayerNetworkStat) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *IpLayerNetworkStat) GetIpLayerNetworkBucket() []*IpLayerNetworkBucket {
	if x != nil {
		return x.IpLayerNetworkBucket
	}
	return nil
}

func (x *IpLayerNetworkStat) GetIpLayerAppStat() []*IpLayerAppStat {
	if x != nil {
		return x.IpLayerAppStat
	}
	return nil
}

type KeyToPackageNameMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageKey        *int32         `protobuf:"varint,1,opt,name=packageKey" json:"packageKey,omitempty"`
	UidName           *string        `protobuf:"bytes,2,opt,name=uidName" json:"uidName,omitempty"`
	SharedPackageList []*PackageInfo `protobuf:"bytes,3,rep,name=sharedPackageList" json:"sharedPackageList,omitempty"`
}

func (x *KeyToPackageNameMapping) Reset() {
	*x = KeyToPackageNameMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyToPackageNameMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyToPackageNameMapping) ProtoMessage() {}

func (x *KeyToPackageNameMapping) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyToPackageNameMapping.ProtoReflect.Descriptor instead.
func (*KeyToPackageNameMapping) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{164}
}

func (x *KeyToPackageNameMapping) GetPackageKey() int32 {
	if x != nil && x.PackageKey != nil {
		return *x.PackageKey
	}
	return 0
}

func (x *KeyToPackageNameMapping) GetUidName() string {
	if x != nil && x.UidName != nil {
		return *x.UidName
	}
	return ""
}

func (x *KeyToPackageNameMapping) GetSharedPackageList() []*PackageInfo {
	if x != nil {
		return x.SharedPackageList
	}
	return nil
}

type PackageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkgName     *string `protobuf:"bytes,1,opt,name=pkgName" json:"pkgName,omitempty"`
	VersionCode *int32  `protobuf:"varint,2,opt,name=versionCode" json:"versionCode,omitempty"`
}

func (x *PackageInfo) Reset() {
	*x = PackageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageInfo) ProtoMessage() {}

func (x *PackageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageInfo.ProtoReflect.Descriptor instead.
func (*PackageInfo) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{165}
}

func (x *PackageInfo) GetPkgName() string {
	if x != nil && x.PkgName != nil {
		return *x.PkgName
	}
	return ""
}

func (x *PackageInfo) GetVersionCode() int32 {
	if x != nil && x.VersionCode != nil {
		return *x.VersionCode
	}
	return 0
}

type PayloadLevelAppStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageKey            *int32       `protobuf:"varint,1,opt,name=packageKey" json:"packageKey,omitempty"`
	ApplicationTag        *int32       `protobuf:"varint,2,opt,name=applicationTag" json:"applicationTag,omitempty"`
	PayloadLevelAppBucket []*AppBucket `protobuf:"bytes,3,rep,name=payloadLevelAppBucket" json:"payloadLevelAppBucket,omitempty"`
}

func (x *PayloadLevelAppStat) Reset() {
	*x = PayloadLevelAppStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadLevelAppStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadLevelAppStat) ProtoMessage() {}

func (x *PayloadLevelAppStat) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadLevelAppStat.ProtoReflect.Descriptor instead.
func (*PayloadLevelAppStat) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{166}
}

func (x *PayloadLevelAppStat) GetPackageKey() int32 {
	if x != nil && x.PackageKey != nil {
		return *x.PackageKey
	}
	return 0
}

func (x *PayloadLevelAppStat) GetApplicationTag() int32 {
	if x != nil && x.ApplicationTag != nil {
		return *x.ApplicationTag
	}
	return 0
}

func (x *PayloadLevelAppStat) GetPayloadLevelAppBucket() []*AppBucket {
	if x != nil {
		return x.PayloadLevelAppBucket
	}
	return nil
}

type StatCounters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkProto *int32       `protobuf:"varint,1,opt,name=networkProto" json:"networkProto,omitempty"`
	Direction    *int32       `protobuf:"varint,2,opt,name=direction" json:"direction,omitempty"`
	CounterData  *CounterData `protobuf:"bytes,3,opt,name=counterData" json:"counterData,omitempty"`
	FgBg         *int32       `protobuf:"varint,4,opt,name=fgBg" json:"fgBg,omitempty"`
}

func (x *StatCounters) Reset() {
	*x = StatCounters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatCounters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatCounters) ProtoMessage() {}

func (x *StatCounters) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatCounters.ProtoReflect.Descriptor instead.
func (*StatCounters) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{167}
}

func (x *StatCounters) GetNetworkProto() int32 {
	if x != nil && x.NetworkProto != nil {
		return *x.NetworkProto
	}
	return 0
}

func (x *StatCounters) GetDirection() int32 {
	if x != nil && x.Direction != nil {
		return *x.Direction
	}
	return 0
}

func (x *StatCounters) GetCounterData() *CounterData {
	if x != nil {
		return x.CounterData
	}
	return nil
}

func (x *StatCounters) GetFgBg() int32 {
	if x != nil && x.FgBg != nil {
		return *x.FgBg
	}
	return 0
}

type UsageStatsExtensionProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataUsage *AndroidDataUsageProto `protobuf:"bytes,1,opt,name=dataUsage" json:"dataUsage,omitempty"`
}

func (x *UsageStatsExtensionProto) Reset() {
	*x = UsageStatsExtensionProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsageStatsExtensionProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageStatsExtensionProto) ProtoMessage() {}

func (x *UsageStatsExtensionProto) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageStatsExtensionProto.ProtoReflect.Descriptor instead.
func (*UsageStatsExtensionProto) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{168}
}

func (x *UsageStatsExtensionProto) GetDataUsage() *AndroidDataUsageProto {
	if x != nil {
		return x.DataUsage
	}
	return nil
}

type ModifyLibraryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LibraryId         *string  `protobuf:"bytes,1,opt,name=libraryId" json:"libraryId,omitempty"`
	AddPackageName    []string `protobuf:"bytes,2,rep,name=addPackageName" json:"addPackageName,omitempty"`
	RemovePackageName []string `protobuf:"bytes,3,rep,name=removePackageName" json:"removePackageName,omitempty"`
}

func (x *ModifyLibraryRequest) Reset() {
	*x = ModifyLibraryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLibraryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLibraryRequest) ProtoMessage() {}

func (x *ModifyLibraryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLibraryRequest.ProtoReflect.Descriptor instead.
func (*ModifyLibraryRequest) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{169}
}

func (x *ModifyLibraryRequest) GetLibraryId() string {
	if x != nil && x.LibraryId != nil {
		return *x.LibraryId
	}
	return ""
}

func (x *ModifyLibraryRequest) GetAddPackageName() []string {
	if x != nil {
		return x.AddPackageName
	}
	return nil
}

func (x *ModifyLibraryRequest) GetRemovePackageName() []string {
	if x != nil {
		return x.RemovePackageName
	}
	return nil
}

type UrlRequestWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperAppsRequest *DeveloperAppsRequest `protobuf:"bytes,49,opt,name=developerAppsRequest" json:"developerAppsRequest,omitempty"`
}

func (x *UrlRequestWrapper) Reset() {
	*x = UrlRequestWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlRequestWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlRequestWrapper) ProtoMessage() {}

func (x *UrlRequestWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlRequestWrapper.ProtoReflect.Descriptor instead.
func (*UrlRequestWrapper) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{170}
}

func (x *UrlRequestWrapper) GetDeveloperAppsRequest() *DeveloperAppsRequest {
	if x != nil {
		return x.DeveloperAppsRequest
	}
	return nil
}

type DeveloperAppsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperIdContainer1 *DeveloperIdContainer `protobuf:"bytes,1,opt,name=developerIdContainer1" json:"developerIdContainer1,omitempty"`
	DeveloperIdContainer2 *DeveloperIdContainer `protobuf:"bytes,2,opt,name=developerIdContainer2" json:"developerIdContainer2,omitempty"`
	UnknownInt3           *int32                `protobuf:"varint,3,opt,name=unknownInt3" json:"unknownInt3,omitempty"`
}

func (x *DeveloperAppsRequest) Reset() {
	*x = DeveloperAppsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeveloperAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeveloperAppsRequest) ProtoMessage() {}

func (x *DeveloperAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeveloperAppsRequest.ProtoReflect.Descriptor instead.
func (*DeveloperAppsRequest) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{171}
}

func (x *DeveloperAppsRequest) GetDeveloperIdContainer1() *DeveloperIdContainer {
	if x != nil {
		return x.DeveloperIdContainer1
	}
	return nil
}

func (x *DeveloperAppsRequest) GetDeveloperIdContainer2() *DeveloperIdContainer {
	if x != nil {
		return x.DeveloperIdContainer2
	}
	return nil
}

func (x *DeveloperAppsRequest) GetUnknownInt3() int32 {
	if x != nil && x.UnknownInt3 != nil {
		return *x.UnknownInt3
	}
	return 0
}

type DeveloperIdContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId *string `protobuf:"bytes,1,opt,name=developerId" json:"developerId,omitempty"`
	UnknownInt2 *int32  `protobuf:"varint,2,opt,name=unknownInt2" json:"unknownInt2,omitempty"`
	UnknownInt3 *int32  `protobuf:"varint,3,opt,name=unknownInt3" json:"unknownInt3,omitempty"`
}

func (x *DeveloperIdContainer) Reset() {
	*x = DeveloperIdContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeveloperIdContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeveloperIdContainer) ProtoMessage() {}

func (x *DeveloperIdContainer) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeveloperIdContainer.ProtoReflect.Descriptor instead.
func (*DeveloperIdContainer) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{172}
}

func (x *DeveloperIdContainer) GetDeveloperId() string {
	if x != nil && x.DeveloperId != nil {
		return *x.DeveloperId
	}
	return ""
}

func (x *DeveloperIdContainer) GetUnknownInt2() int32 {
	if x != nil && x.UnknownInt2 != nil {
		return *x.UnknownInt2
	}
	return 0
}

func (x *DeveloperIdContainer) GetUnknownInt3() int32 {
	if x != nil && x.UnknownInt3 != nil {
		return *x.UnknownInt3
	}
	return 0
}

type BookDetails_Identifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       *int32  `protobuf:"varint,19,opt,name=type" json:"type,omitempty"`
	Identifier *string `protobuf:"bytes,20,opt,name=identifier" json:"identifier,omitempty"`
}

func (x *BookDetails_Identifier) Reset() {
	*x = BookDetails_Identifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookDetails_Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookDetails_Identifier) ProtoMessage() {}

func (x *BookDetails_Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookDetails_Identifier.ProtoReflect.Descriptor instead.
func (*BookDetails_Identifier) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{8, 0}
}

func (x *BookDetails_Identifier) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *BookDetails_Identifier) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

type BuyResponse_CheckoutInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item                     *LineItem                                  `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
	SubItem                  []*LineItem                                `protobuf:"bytes,4,rep,name=subItem" json:"subItem,omitempty"`
	Checkoutoption           []*BuyResponse_CheckoutInfo_CheckoutOption `protobuf:"group,5,rep,name=CheckoutOption,json=checkoutoption" json:"checkoutoption,omitempty"`
	DeprecatedCheckoutUrl    *string                                    `protobuf:"bytes,10,opt,name=deprecatedCheckoutUrl" json:"deprecatedCheckoutUrl,omitempty"`
	AddInstrumentUrl         *string                                    `protobuf:"bytes,11,opt,name=addInstrumentUrl" json:"addInstrumentUrl,omitempty"`
	FooterHtml               []string                                   `protobuf:"bytes,20,rep,name=footerHtml" json:"footerHtml,omitempty"`
	EligibleInstrumentFamily []int32                                    `protobuf:"varint,31,rep,name=eligibleInstrumentFamily" json:"eligibleInstrumentFamily,omitempty"`
	FootnoteHtml             []string                                   `protobuf:"bytes,36,rep,name=footnoteHtml" json:"footnoteHtml,omitempty"`
	EligibleInstrument       []*Instrument                              `protobuf:"bytes,44,rep,name=eligibleInstrument" json:"eligibleInstrument,omitempty"`
}

func (x *BuyResponse_CheckoutInfo) Reset() {
	*x = BuyResponse_CheckoutInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResponse_CheckoutInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResponse_CheckoutInfo) ProtoMessage() {}

func (x *BuyResponse_CheckoutInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResponse_CheckoutInfo.ProtoReflect.Descriptor instead.
func (*BuyResponse_CheckoutInfo) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{17, 0}
}

func (x *BuyResponse_CheckoutInfo) GetItem() *LineItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo) GetSubItem() []*LineItem {
	if x != nil {
		return x.SubItem
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo) GetCheckoutoption() []*BuyResponse_CheckoutInfo_CheckoutOption {
	if x != nil {
		return x.Checkoutoption
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo) GetDeprecatedCheckoutUrl() string {
	if x != nil && x.DeprecatedCheckoutUrl != nil {
		return *x.DeprecatedCheckoutUrl
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo) GetAddInstrumentUrl() string {
	if x != nil && x.AddInstrumentUrl != nil {
		return *x.AddInstrumentUrl
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo) GetFooterHtml() []string {
	if x != nil {
		return x.FooterHtml
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo) GetEligibleInstrumentFamily() []int32 {
	if x != nil {
		return x.EligibleInstrumentFamily
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo) GetFootnoteHtml() []string {
	if x != nil {
		return x.FootnoteHtml
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo) GetEligibleInstrument() []*Instrument {
	if x != nil {
		return x.EligibleInstrument
	}
	return nil
}

type BuyResponse_CheckoutInfo_CheckoutOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormOfPayment                          *string     `protobuf:"bytes,6,opt,name=formOfPayment" json:"formOfPayment,omitempty"`
	EncodedAdjustedCart                    *string     `protobuf:"bytes,7,opt,name=encodedAdjustedCart" json:"encodedAdjustedCart,omitempty"`
	InstrumentId                           *string     `protobuf:"bytes,15,opt,name=instrumentId" json:"instrumentId,omitempty"`
	Item                                   []*LineItem `protobuf:"bytes,16,rep,name=item" json:"item,omitempty"`
	SubItem                                []*LineItem `protobuf:"bytes,17,rep,name=subItem" json:"subItem,omitempty"`
	Total                                  *LineItem   `protobuf:"bytes,18,opt,name=total" json:"total,omitempty"`
	FooterHtml                             []string    `protobuf:"bytes,19,rep,name=footerHtml" json:"footerHtml,omitempty"`
	InstrumentFamily                       *int32      `protobuf:"varint,29,opt,name=instrumentFamily" json:"instrumentFamily,omitempty"`
	DeprecatedInstrumentInapplicableReason []int32     `protobuf:"varint,30,rep,name=deprecatedInstrumentInapplicableReason" json:"deprecatedInstrumentInapplicableReason,omitempty"`
	SelectedInstrument                     *bool       `protobuf:"varint,32,opt,name=selectedInstrument" json:"selectedInstrument,omitempty"`
	Summary                                *LineItem   `protobuf:"bytes,33,opt,name=summary" json:"summary,omitempty"`
	FootnoteHtml                           []string    `protobuf:"bytes,35,rep,name=footnoteHtml" json:"footnoteHtml,omitempty"`
	Instrument                             *Instrument `protobuf:"bytes,43,opt,name=instrument" json:"instrument,omitempty"`
	PurchaseCookie                         *string     `protobuf:"bytes,45,opt,name=purchaseCookie" json:"purchaseCookie,omitempty"`
	DisabledReason                         []string    `protobuf:"bytes,48,rep,name=disabledReason" json:"disabledReason,omitempty"`
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) Reset() {
	*x = BuyResponse_CheckoutInfo_CheckoutOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResponse_CheckoutInfo_CheckoutOption) ProtoMessage() {}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResponse_CheckoutInfo_CheckoutOption.ProtoReflect.Descriptor instead.
func (*BuyResponse_CheckoutInfo_CheckoutOption) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{17, 0, 0}
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetFormOfPayment() string {
	if x != nil && x.FormOfPayment != nil {
		return *x.FormOfPayment
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetEncodedAdjustedCart() string {
	if x != nil && x.EncodedAdjustedCart != nil {
		return *x.EncodedAdjustedCart
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetInstrumentId() string {
	if x != nil && x.InstrumentId != nil {
		return *x.InstrumentId
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetItem() []*LineItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetSubItem() []*LineItem {
	if x != nil {
		return x.SubItem
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetTotal() *LineItem {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetFooterHtml() []string {
	if x != nil {
		return x.FooterHtml
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetInstrumentFamily() int32 {
	if x != nil && x.InstrumentFamily != nil {
		return *x.InstrumentFamily
	}
	return 0
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetDeprecatedInstrumentInapplicableReason() []int32 {
	if x != nil {
		return x.DeprecatedInstrumentInapplicableReason
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetSelectedInstrument() bool {
	if x != nil && x.SelectedInstrument != nil {
		return *x.SelectedInstrument
	}
	return false
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetSummary() *LineItem {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetFootnoteHtml() []string {
	if x != nil {
		return x.FootnoteHtml
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetInstrument() *Instrument {
	if x != nil {
		return x.Instrument
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetPurchaseCookie() string {
	if x != nil && x.PurchaseCookie != nil {
		return *x.PurchaseCookie
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetDisabledReason() []string {
	if x != nil {
		return x.DisabledReason
	}
	return nil
}

type DebugInfo_Timing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	TimeInMs *float64 `protobuf:"fixed64,4,opt,name=timeInMs" json:"timeInMs,omitempty"`
}

func (x *DebugInfo_Timing) Reset() {
	*x = DebugInfo_Timing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugInfo_Timing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugInfo_Timing) ProtoMessage() {}

func (x *DebugInfo_Timing) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugInfo_Timing.ProtoReflect.Descriptor instead.
func (*DebugInfo_Timing) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{44, 0}
}

func (x *DebugInfo_Timing) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DebugInfo_Timing) GetTimeInMs() float64 {
	if x != nil && x.TimeInMs != nil {
		return *x.TimeInMs
	}
	return 0
}

type Image_Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  *int32 `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height *int32 `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
}

func (x *Image_Dimension) Reset() {
	*x = Image_Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image_Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image_Dimension) ProtoMessage() {}

func (x *Image_Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image_Dimension.ProtoReflect.Descriptor instead.
func (*Image_Dimension) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{58, 0}
}

func (x *Image_Dimension) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Image_Dimension) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type Image_Citation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleLocalized *string `protobuf:"bytes,11,opt,name=titleLocalized" json:"titleLocalized,omitempty"`
	Url            *string `protobuf:"bytes,12,opt,name=url" json:"url,omitempty"`
}

func (x *Image_Citation) Reset() {
	*x = Image_Citation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image_Citation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image_Citation) ProtoMessage() {}

func (x *Image_Citation) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image_Citation.ProtoReflect.Descriptor instead.
func (*Image_Citation) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{58, 1}
}

func (x *Image_Citation) GetTitleLocalized() string {
	if x != nil && x.TitleLocalized != nil {
		return *x.TitleLocalized
	}
	return ""
}

func (x *Image_Citation) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type VideoRentalTerm_Term struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *string `protobuf:"bytes,5,opt,name=header" json:"header,omitempty"`
	Body   *string `protobuf:"bytes,6,opt,name=body" json:"body,omitempty"`
}

func (x *VideoRentalTerm_Term) Reset() {
	*x = VideoRentalTerm_Term{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoRentalTerm_Term) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoRentalTerm_Term) ProtoMessage() {}

func (x *VideoRentalTerm_Term) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoRentalTerm_Term.ProtoReflect.Descriptor instead.
func (*VideoRentalTerm_Term) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{82, 0}
}

func (x *VideoRentalTerm_Term) GetHeader() string {
	if x != nil && x.Header != nil {
		return *x.Header
	}
	return ""
}

func (x *VideoRentalTerm_Term) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

type Availability_PerDeviceAvailabilityRestriction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AndroidId         *uint64               `protobuf:"fixed64,10,opt,name=androidId" json:"androidId,omitempty"`
	DeviceRestriction *int32                `protobuf:"varint,11,opt,name=deviceRestriction" json:"deviceRestriction,omitempty"`
	ChannelId         *int64                `protobuf:"varint,12,opt,name=channelId" json:"channelId,omitempty"`
	FilterInfo        *FilterEvaluationInfo `protobuf:"bytes,15,opt,name=filterInfo" json:"filterInfo,omitempty"`
}

func (x *Availability_PerDeviceAvailabilityRestriction) Reset() {
	*x = Availability_PerDeviceAvailabilityRestriction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Availability_PerDeviceAvailabilityRestriction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Availability_PerDeviceAvailabilityRestriction) ProtoMessage() {}

func (x *Availability_PerDeviceAvailabilityRestriction) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Availability_PerDeviceAvailabilityRestriction.ProtoReflect.Descriptor instead.
func (*Availability_PerDeviceAvailabilityRestriction) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{97, 0}
}

func (x *Availability_PerDeviceAvailabilityRestriction) GetAndroidId() uint64 {
	if x != nil && x.AndroidId != nil {
		return *x.AndroidId
	}
	return 0
}

func (x *Availability_PerDeviceAvailabilityRestriction) GetDeviceRestriction() int32 {
	if x != nil && x.DeviceRestriction != nil {
		return *x.DeviceRestriction
	}
	return 0
}

func (x *Availability_PerDeviceAvailabilityRestriction) GetChannelId() int64 {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return 0
}

func (x *Availability_PerDeviceAvailabilityRestriction) GetFilterInfo() *FilterEvaluationInfo {
	if x != nil {
		return x.FilterInfo
	}
	return nil
}

type SearchSuggestEntry_ImageContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl *string `protobuf:"bytes,5,opt,name=imageUrl" json:"imageUrl,omitempty"`
}

func (x *SearchSuggestEntry_ImageContainer) Reset() {
	*x = SearchSuggestEntry_ImageContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSuggestEntry_ImageContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSuggestEntry_ImageContainer) ProtoMessage() {}

func (x *SearchSuggestEntry_ImageContainer) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSuggestEntry_ImageContainer.ProtoReflect.Descriptor instead.
func (*SearchSuggestEntry_ImageContainer) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{140, 0}
}

func (x *SearchSuggestEntry_ImageContainer) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

type SearchSuggestEntry_PackageNameContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageName *string `protobuf:"bytes,1,opt,name=packageName" json:"packageName,omitempty"`
}

func (x *SearchSuggestEntry_PackageNameContainer) Reset() {
	*x = SearchSuggestEntry_PackageNameContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSuggestEntry_PackageNameContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSuggestEntry_PackageNameContainer) ProtoMessage() {}

func (x *SearchSuggestEntry_PackageNameContainer) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSuggestEntry_PackageNameContainer.ProtoReflect.Descriptor instead.
func (*SearchSuggestEntry_PackageNameContainer) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{140, 1}
}

func (x *SearchSuggestEntry_PackageNameContainer) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

type AndroidIntentProto_Extra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,7,opt,name=value" json:"value,omitempty"`
}

func (x *AndroidIntentProto_Extra) Reset() {
	*x = AndroidIntentProto_Extra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidIntentProto_Extra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidIntentProto_Extra) ProtoMessage() {}

func (x *AndroidIntentProto_Extra) ProtoReflect() protoreflect.Message {
	mi := &file_google_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidIntentProto_Extra.ProtoReflect.Descriptor instead.
func (*AndroidIntentProto_Extra) Descriptor() ([]byte, []int) {
	return file_google_proto_rawDescGZIP(), []int{154, 0}
}

func (x *AndroidIntentProto_Extra) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AndroidIntentProto_Extra) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

var File_google_proto protoreflect.FileDescriptor

var file_google_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4,
	0x05, 0x0a, 0x16, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70, 0x70, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x68, 0x61, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x61,
	0x31, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41, 0x70,
	0x70, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x3b, 0x0a,
	0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x44, 0x0a, 0x1d, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1d, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x09, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70, 0x70, 0x50, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x09, 0x70, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d,
	0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x10, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2e, 0x0a,
	0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x47, 0x7a, 0x69, 0x70,
	0x70, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x30, 0x0a,
	0x13, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x47, 0x7a, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x05, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x05, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x68, 0x61, 0x32, 0x35, 0x36, 0x22, 0xcf, 0x01, 0x0a, 0x05, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x7a, 0x65, 0x47,
	0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x69,
	0x7a, 0x65, 0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x61,
	0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x61, 0x31, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12,
	0x2e, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x47, 0x7a,
	0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x22, 0xc3, 0x01, 0x0a, 0x13, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x41, 0x70, 0x70, 0x50, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x28, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x53, 0x68, 0x61, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x53, 0x68, 0x61, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xeb, 0x01,
	0x0a, 0x0f, 0x41, 0x70, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x7a, 0x65, 0x47, 0x7a, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x69, 0x7a, 0x65,
	0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c,
	0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x61, 0x31, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x61, 0x31, 0x22, 0x6c, 0x0a, 0x10, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x68, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x36, 0x0a, 0x0a, 0x48, 0x74, 0x74,
	0x70, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xd9, 0x03, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65,
	0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x6e, 0x65, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x6e, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x68, 0x0a,
	0x0a, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x05, 0x64, 0x6f, 0x63,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x69, 0x64,
	0x52, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x22, 0xa7, 0x05, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x55, 0x72, 0x6c,
	0x12, 0x28, 0x0a, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x70, 0x75, 0x62,
	0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x45, 0x70, 0x75, 0x62, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x64, 0x66, 0x55, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x64, 0x66, 0x55,
	0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x73, 0x45, 0x70, 0x75, 0x62, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x73,
	0x45, 0x70, 0x75, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e,
	0x61, 0x63, 0x73, 0x50, 0x64, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x73, 0x50, 0x64, 0x66, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x70, 0x75, 0x62, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x70, 0x75,
	0x62, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x64,
	0x66, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x70, 0x64, 0x66, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x54, 0x68, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x54, 0x68, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x17, 0x2e, 0x42, 0x6f, 0x6f,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a,
	0x40, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x22, 0x55, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x0a, 0x42, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61,
	0x74, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x55, 0x0a, 0x18, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x18,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x18, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x13, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x13, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x13,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x0e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2b, 0x0a,
	0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0a,
	0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x12, 0x40, 0x0a, 0x11, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x11, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x11,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x12, 0x27, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x94, 0x03, 0x0a, 0x10, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12,
	0x32, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x38, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x29, 0x0a,
	0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x52, 0x08,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x0f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x22, 0x8d, 0x03, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x2e, 0x0a,
	0x12, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a,
	0x1f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x38, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x69, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x69, 0x6e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x69, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x74, 0x6d,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x70, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x74, 0x6d, 0x6c, 0x12,
	0x26, 0x0a, 0x0e, 0x67, 0x61, 0x69, 0x61, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x61, 0x69, 0x61, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x67, 0x61, 0x69, 0x61, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x74,
	0x6d, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x67, 0x61, 0x69, 0x61, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x74, 0x6d,
	0x6c, 0x22, 0xf2, 0x0d, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x49, 0x0a, 0x10, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0a, 0x32, 0x19, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x56, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x56, 0x69, 0x61,
	0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x72,
	0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x34, 0x0a, 0x15, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x62, 0x61, 0x73, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x48, 0x74,
	0x6d, 0x6c, 0x18, 0x25, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f, 0x73, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x62, 0x6f, 0x78, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x61, 0x62,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x69, 0x61, 0x62, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x16, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x16, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x2e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18,
	0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x37, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x1a, 0xd1, 0x08, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x12, 0x23, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x50, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0a, 0x32,
	0x28, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x55,
	0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x2a, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x64, 0x64, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x66,
	0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x3a, 0x0a, 0x18, 0x65,
	0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x05, 0x52, 0x18, 0x65,
	0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f, 0x6f, 0x74, 0x6e,
	0x6f, 0x74, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x24, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x6f, 0x6f, 0x74, 0x6e, 0x6f, 0x74, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x3b, 0x0a, 0x12, 0x65,
	0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x2c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x8b, 0x05, 0x0a, 0x0e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x66,
	0x6f, 0x72, 0x6d, 0x4f, 0x66, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x66, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x65, 0x64, 0x43, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x64, 0x43,
	0x61, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x23, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65,
	0x6d, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x07, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2a, 0x0a, 0x10,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x56, 0x0a, 0x26, 0x64, 0x65, 0x70, 0x72,
	0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x05, 0x52, 0x26, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x2e, 0x0a, 0x12, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f, 0x6f, 0x74, 0x6e, 0x6f, 0x74,
	0x65, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x23, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x6f,
	0x74, 0x6e, 0x6f, 0x74, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2b, 0x0a, 0x0a, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x30, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x52, 0x10, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x12, 0x52, 0x0a, 0x17, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x17,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x22, 0x66, 0x0a, 0x0c, 0x46, 0x6f, 0x72, 0x6d, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22,
	0x7e, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x6d, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb6,
	0x01, 0x0a, 0x1c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x34, 0x0a, 0x15, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0xe4, 0x02, 0x0a, 0x16, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x72,
	0x69, 0x65, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x72, 0x69, 0x65, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x6e, 0x66, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x6e, 0x66, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x0d, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x0d, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3b,
	0x0a, 0x12, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0f, 0x61,
	0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x61,
	0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x55,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x05, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x22, 0x5b, 0x0a, 0x07, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x22, 0xdb, 0x05,
	0x0a, 0x05, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a,
	0x14, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x75, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x75, 0x6c, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x74, 0x65, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x72,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x52, 0x0b,
	0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6f,
	0x6e, 0x53, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72,
	0x6d, 0x73, 0x52, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74,
	0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x74, 0x65, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73,
	0x61, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x73, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x61, 0x6c,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x61, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xab, 0x02, 0x0a, 0x0d,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a,
	0x17, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x38, 0x0a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x55, 0x6e, 0x74, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73,
	0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55,
	0x6e, 0x74, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x65,
	0x63, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x1a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d,
	0x73, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x42, 0x0a, 0x1c, 0x70, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1c, 0x70, 0x6f, 0x73,
	0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x73, 0x65, 0x63, 0x22, 0x73, 0x0a, 0x0b, 0x52, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x79,
	0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x72, 0x6d, 0x73, 0x12, 0x35, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x75, 0x72,
	0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x2d, 0x0a, 0x0b, 0x74, 0x72,
	0x69, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0b, 0x74, 0x72,
	0x69, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x36, 0x0a, 0x0a, 0x54, 0x69, 0x6d,
	0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x6a, 0x0a, 0x12, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x12, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x51, 0x0a,
	0x19, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xb5, 0x03, 0x0a, 0x18, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x17, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x17, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x3b, 0x0a, 0x12, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x54, 0x6f, 0x73, 0x52, 0x12, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x43, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x73, 0x22, 0xa6, 0x02, 0x0a, 0x1e, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x73, 0x52, 0x0a, 0x63, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x15, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x15, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xcc, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x73,
	0x12, 0x28, 0x0a, 0x06, 0x64, 0x63, 0x62, 0x54, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x64, 0x63, 0x62, 0x54, 0x6f, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x69,
	0x69, 0x54, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x69,
	0x69, 0x54, 0x6f, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x44, 0x63, 0x62,
	0x54, 0x6f, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x15, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x44, 0x63, 0x62, 0x54, 0x6f, 0x73,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x6e, 0x65,
	0x65, 0x64, 0x73, 0x50, 0x69, 0x69, 0x54, 0x6f, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x6e, 0x65, 0x65, 0x64, 0x73,
	0x50, 0x69, 0x69, 0x54, 0x6f, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0x3d, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0xf3, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x69, 0x67, 0x69, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x69, 0x67, 0x69, 0x74, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65,
	0x61, 0x72, 0x12, 0x31, 0x0a, 0x0e, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x45, 0x66, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x45, 0x66, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x45, 0x66, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x32, 0x0a, 0x08, 0x45, 0x66, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5a, 0x0a, 0x14, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc6, 0x03, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x12, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x70, 0x65, 0x63, 0x52, 0x12, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x53, 0x0a, 0x14, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x14, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x56,
	0x0a, 0x0e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x6f, 0x72, 0x67,
	0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x55, 0x72, 0x6c, 0x22, 0xe1, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x09, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0a, 0x32, 0x11, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x1a, 0x38, 0x0a,
	0x06, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x73, 0x22, 0x2c, 0x0a, 0x10, 0x42, 0x75, 0x6c, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x03, 0x64,
	0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x56, 0x32,
	0x52, 0x03, 0x64, 0x6f, 0x63, 0x22, 0x56, 0x0a, 0x12, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x6f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x44, 0x6f, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x44, 0x6f, 0x63, 0x73, 0x22, 0x3e, 0x0a,
	0x13, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x99, 0x03,
	0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x05, 0x64, 0x6f, 0x63, 0x56, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x56, 0x31, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x56, 0x31, 0x12,
	0x28, 0x0a, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x1c, 0x0a, 0x05, 0x64, 0x6f, 0x63, 0x56, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x56, 0x32, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x56, 0x32,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c,
	0x12, 0x1c, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x25,
	0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x08, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72,
	0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55,
	0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x40, 0x0a, 0x1b, 0x70, 0x6f, 0x73, 0x74, 0x41,
	0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x70, 0x6f,
	0x73, 0x74, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x22, 0x91, 0x01, 0x0a, 0x05, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x31, 0x52, 0x0f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a,
	0x0f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x31,
	0x12, 0x3a, 0x0a, 0x0f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x32, 0x52, 0x0f, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x32, 0x22, 0x56, 0x0a, 0x0f,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x32, 0x12,
	0x43, 0x0a, 0x12, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x12, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x22, 0x28, 0x0a, 0x12, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x6e,
	0x0a, 0x08, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0f, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0f, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2e,
	0x0a, 0x0d, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x0d, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x35,
	0x0a, 0x07, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc8, 0x05, 0x0a, 0x18, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x48, 0x61, 0x72, 0x64, 0x4b,
	0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68,
	0x61, 0x73, 0x48, 0x61, 0x72, 0x64, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x32,
	0x0a, 0x14, 0x68, 0x61, 0x73, 0x46, 0x69, 0x76, 0x65, 0x57, 0x61, 0x79, 0x4e, 0x61, 0x76, 0x69,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x68, 0x61,
	0x73, 0x46, 0x69, 0x76, 0x65, 0x57, 0x61, 0x79, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x6c, 0x45, 0x73,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67,
	0x6c, 0x45, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x16,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x15, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x6c, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x67,
	0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x14,
	0x6d, 0x61, 0x78, 0x41, 0x70, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69,
	0x7a, 0x65, 0x4d, 0x62, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x41,
	0x70, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x62,
	0x22, 0xcf, 0x05, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44,
	0x6f, 0x63, 0x69, 0x64, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x52, 0x0a, 0x66, 0x65, 0x74, 0x63, 0x68, 0x44, 0x6f,
	0x63, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x63,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x69, 0x64,
	0x52, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12,
	0x30, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x12, 0x3a, 0x0a, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0f,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x1c, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x3d, 0x0a,
	0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6e, 0x69, 0x70, 0x70,
	0x65, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x3a, 0x0a, 0x0f,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x0f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x64, 0x65, 0x63, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55,
	0x72, 0x6c, 0x22, 0xeb, 0x02, 0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x04,
	0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x39, 0x0a,
	0x0f, 0x61, 0x75, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52,
	0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x99, 0x04, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0a, 0x32, 0x10, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6c, 0x74, 0x54, 0x65, 0x78, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x61, 0x6c, 0x74, 0x54, 0x65, 0x78, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2e,
	0x0a, 0x12, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x36,
	0x0a, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x46, 0x69, 0x66, 0x65, 0x55, 0x72,
	0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x46, 0x69, 0x66, 0x65, 0x55, 0x72, 0x6c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0a, 0x32, 0x0f, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x2e, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68,
	0x6f, 0x74, 0x53, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x39, 0x0a, 0x09, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x44, 0x0a, 0x08, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x6c, 0x0a, 0x0e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x0b, 0x50,
	0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73,
	0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x73, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x31, 0x0a, 0x0d, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x73, 0x50, 0x65, 0x6f,
	0x70, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x6c, 0x75, 0x73,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x73, 0x50,
	0x65, 0x6f, 0x70, 0x6c, 0x65, 0x22, 0x58, 0x0a, 0x0a, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22,
	0x81, 0x01, 0x0a, 0x0c, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x34, 0x0a,
	0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x22, 0xe1, 0x07, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x6a, 0x6f,
	0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2a,
	0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x57,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x48, 0x74,
	0x6d, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x68,
	0x61, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x41,
	0x64, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x73, 0x41, 0x64, 0x73, 0x12, 0x31, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x12, 0x74, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x74, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a,
	0x0f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2a, 0x0a, 0x10, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32,
	0x12, 0x2b, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x33, 0x22, 0x64, 0x0a, 0x0a, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x34, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x34, 0x22,
	0x88, 0x01, 0x0a, 0x12, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x64, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x31, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x27, 0x0a, 0x0f, 0x45, 0x61,
	0x72, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x22, 0x7f, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x13, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x14,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x2c, 0x0a, 0x11, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x79, 0x6f, 0x75,
	0x74, 0x75, 0x62, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x72, 0x6c, 0x22, 0xef,
	0x04, 0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x31, 0x0a, 0x0c, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x34, 0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x0b, 0x73, 0x6f, 0x6e, 0x67,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x53, 0x6f, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0b, 0x73, 0x6f, 0x6e,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6b,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0b, 0x62, 0x6f, 0x6f,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x31, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x13, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x13,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x6d, 0x61, 0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d,
	0x61, 0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f,
	0x6d, 0x61, 0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x34, 0x0a, 0x0d, 0x74, 0x76, 0x53, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x76, 0x53, 0x68, 0x6f, 0x77, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x74, 0x76, 0x53, 0x68, 0x6f, 0x77, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x74, 0x76, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x54, 0x76, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0f, 0x74, 0x76, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x3d, 0x0a, 0x10, 0x74, 0x76, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x54, 0x76,
	0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x10,
	0x74, 0x76, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x60, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0xf7, 0x01, 0x0a, 0x0f, 0x4d, 0x61, 0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55,
	0x72, 0x6c, 0x12, 0x4c, 0x0a, 0x21, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x21, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x73, 0x76, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x73, 0x76, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x1c, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x02, 0x0a,
	0x0c, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x63, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x12, 0x30, 0x0a,
	0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x67, 0x65,
	0x6e, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x0b, 0x53, 0x6f, 0x6e, 0x67,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55,
	0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x13, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x22, 0x99, 0x01, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x74, 0x63, 0x68, 0x55, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x74, 0x63, 0x68, 0x55, 0x72,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x84, 0x01,
	0x0a, 0x10, 0x54, 0x76, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x22,
	0x0a, 0x0c, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x0f, 0x54, 0x76, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x54,
	0x76, 0x53, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x22, 0x59, 0x0a, 0x0b, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xb6, 0x02, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x69, 0x6b, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65,
	0x72, 0x52, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x0a, 0x72, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x54, 0x65, 0x72, 0x6d,
	0x52, 0x0a, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x54, 0x65, 0x72, 0x6d, 0x22, 0xe0, 0x01, 0x0a,
	0x0f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x54, 0x65, 0x72, 0x6d,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x29, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x15,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x54, 0x65, 0x72, 0x6d,
	0x2e, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x1a, 0x32, 0x0a, 0x04, 0x54,
	0x65, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22,
	0x8a, 0x03, 0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44,
	0x6f, 0x63, 0x56, 0x31, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x6f, 0x72, 0x70, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x12, 0x28, 0x0a, 0x0f, 0x66, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x75, 0x6c, 0x6c, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x72,
	0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x30,
	0x0a, 0x13, 0x66, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x75, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x22, 0x49, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a,
	0x03, 0x64, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63,
	0x56, 0x32, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x22, 0xee, 0x04, 0x0a, 0x05, 0x44, 0x6f, 0x63, 0x56,
	0x31, 0x12, 0x27, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x73, 0x6b, 0x79, 0x44, 0x6f, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x09, 0x66, 0x69, 0x6e, 0x73, 0x6b, 0x79, 0x44, 0x6f, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f,
	0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x55, 0x72, 0x6c,
	0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6f, 0x72, 0x65,
	0x42, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x6f, 0x72, 0x65, 0x42, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x74, 0x6d, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x42, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x6f, 0x72, 0x65, 0x42, 0x79,
	0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6d, 0x6f, 0x72, 0x65, 0x42, 0x79, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x72, 0x65, 0x42, 0x79,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f,
	0x72, 0x65, 0x42, 0x79, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x2e, 0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0b, 0x70, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x26, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xba, 0x08, 0x0a, 0x05, 0x44, 0x6f, 0x63,
	0x56, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64,
	0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x1c,
	0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0c,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x1c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44,
	0x6f, 0x63, 0x56, 0x32, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x40, 0x0a, 0x11, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x55,
	0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x55,
	0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x55, 0x0a, 0x18, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x18, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x09, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x35, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x35,
	0x52, 0x09, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x35, 0x12, 0x2a, 0x0a, 0x10, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65,
	0x74, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x55, 0x72, 0x6c, 0x22, 0x2f, 0x0a, 0x09, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x32, 0x35, 0x12, 0x22, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x35, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x58, 0x0a, 0x0d, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x32, 0x35, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x31, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x35, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x22, 0x2a, 0x0a, 0x12, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x35, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xaa, 0x02, 0x0a,
	0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x31, 0x0a,
	0x08, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x31, 0x52, 0x08, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x31,
	0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x55, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x10,
	0x79, 0x6f, 0x75, 0x4d, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6c, 0x73, 0x6f, 0x4c, 0x69, 0x6b, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x10, 0x79, 0x6f, 0x75, 0x4d, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6c,
	0x73, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x64, 0x52, 0x05, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x18, 0x22, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x31, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a, 0x14, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x31, 0x12, 0x31, 0x0a, 0x08, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x52, 0x08, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x32, 0x22, 0x52, 0x0a, 0x14, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x6f, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68,
	0x6f, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x69, 0x0a, 0x05, 0x52, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x4d, 0x6f,
	0x72, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x4d, 0x6f, 0x72, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x4c,
	0x69, 0x6e, 0x6b, 0x22, 0x4b, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x31,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x31, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x72, 0x6c, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x32,
	0x22, 0x4a, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0xe9, 0x01, 0x0a,
	0x17, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2a,
	0x0a, 0x10, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe8, 0x04, 0x0a, 0x0c, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x72, 0x75, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x75, 0x6c, 0x65, 0x12, 0x7a, 0x0a, 0x20, 0x70, 0x65, 0x72, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x72, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x2e,
	0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x65,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x20,
	0x70, 0x65, 0x72, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x66, 0x4f,
	0x77, 0x6e, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x66, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x07,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x12, 0x35, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xc3, 0x01,
	0x0a, 0x20, 0x50, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x4f, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0e, 0x72,
	0x75, 0x6c, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x72, 0x75, 0x6c, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc3, 0x02, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x67,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x6e, 0x67, 0x41, 0x72, 0x67, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x07, 0x6c, 0x6f, 0x6e, 0x67, 0x41, 0x72, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28, 0x01, 0x52, 0x09,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x67, 0x12, 0x1f, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x72, 0x75, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x41, 0x72, 0x67, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x06, 0x52,
	0x0d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x67, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x41, 0x72, 0x67, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x41, 0x72, 0x67, 0x22, 0xdb, 0x01, 0x0a, 0x0e, 0x52,
	0x75, 0x6c, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x4c, 0x6f, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x6f, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x01, 0x52, 0x11, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3e, 0x0a, 0x1a, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x42, 0x0a, 0x1c, 0x70, 0x6f, 0x73, 0x74,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1c,
	0x70, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x73, 0x65, 0x63, 0x22, 0x63, 0x0a, 0x13,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x22, 0xc8, 0x02, 0x0a, 0x0f, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x52, 0x05, 0x64, 0x6f,
	0x63, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x32, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x41, 0x70, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x4d, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x13, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c,
	0x69, 0x6e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xee, 0x01, 0x0a,
	0x1a, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x38, 0x0a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e,
	0x74, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74,
	0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x65, 0x63, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77,
	0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x17, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x55, 0x6e, 0x74, 0x69,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x55, 0x6e, 0x74, 0x69, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x65, 0x63, 0x22, 0xc7, 0x01,
	0x0a, 0x0d, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x1a, 0x41, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x73, 0x0a, 0x15, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x10, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x44, 0x69, 0x72, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x22, 0xf3, 0x05, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1c, 0x0a, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x6f, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6f, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x61, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x41,
	0x0a, 0x0f, 0x61, 0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x41, 0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0f, 0x61, 0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x46, 0x0a, 0x13, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x13, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x14, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x15, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x15, 0x69, 0x6e, 0x41,
	0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x49, 0x0a, 0x14, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65,
	0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x63, 0x6c, 0x69,
	0x6e, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a,
	0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0d, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x44, 0x69, 0x72, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x44,
	0x69, 0x72, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x44, 0x69, 0x72, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x14, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x68,
	0x6f, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x13, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x61, 0x6c, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x6d, 0x61, 0x6c, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x14,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x65, 0x78, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x65, 0x78, 0x74,
	0x22, 0xdd, 0x03, 0x0a, 0x0f, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x6f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x77, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74, 0x77,
	0x6f, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x10,
	0x74, 0x68, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x68, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6f, 0x75, 0x72,
	0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x66, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x66, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x55, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x55, 0x70, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x44, 0x6f, 0x77, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2e, 0x0a, 0x12, 0x62, 0x61, 0x79, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x4d, 0x65, 0x61, 0x6e,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x62, 0x61,
	0x79, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x4d, 0x65, 0x61, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x22, 0x13, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xfc, 0x02, 0x0a, 0x14, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69,
	0x6e, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x21, 0x70, 0x65, 0x72, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x21, 0x70, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x12, 0x5e, 0x0a, 0x2a, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2a, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x49, 0x0a, 0x14, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x14, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x49, 0x61, 0x62, 0x41, 0x70, 0x69, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x61, 0x78,
	0x49, 0x61, 0x62, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x01,
	0x0a, 0x0e, 0x43, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x73, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x55, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x73, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x31, 0x0a, 0x0b, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x66, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x38, 0x0a, 0x17, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0xf3, 0x06, 0x0a, 0x0b, 0x54, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x14,
	0x74, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x73, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x0b, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0b, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x74, 0x6f,
	0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1e, 0x74, 0x6f, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x54,
	0x65, 0x78, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x69, 0x63, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x63, 0x6f, 0x6e, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x3d, 0x0a, 0x10, 0x73, 0x65, 0x6c, 0x66,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x73, 0x65, 0x6c, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x1a, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x73, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x73, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x73, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x73, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x48, 0x6f, 0x6d,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x17, 0x61, 0x67, 0x65,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x61, 0x67, 0x65, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x67, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x69, 0x67, 0x6e,
	0x75, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x67, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x6c,
	0x70, 0x55, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x6c, 0x70,
	0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a,
	0x14, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x6f,
	0x6d, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x22, 0xbe, 0x08, 0x0a, 0x07, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x0b, 0x62, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0b, 0x62, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x74, 0x6f, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x6f,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x74, 0x6f, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4f, 0x0a, 0x16, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x16, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x6c, 0x61, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x66, 0x6c, 0x61, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x13, 0x62, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13, 0x62, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x10,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x11, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x54, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x16, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x16, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b,
	0x0a, 0x1a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x1a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x15, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x15, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x16, 0x74, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x16, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x08, 0x50,
	0x72, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x6f, 0x66, 0x74, 0x54, 0x74, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x6f, 0x66, 0x74, 0x54, 0x74, 0x6c, 0x22, 0x36, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x22,
	0x43, 0x0a, 0x07, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x38, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x42,
	0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12,
	0x31, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x22, 0xfb, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x72, 0x65, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x52, 0x08, 0x70, 0x72, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x31,
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x37, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x07, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x34,
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x22, 0x3b, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x57, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x41, 0x70, 0x69, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x70, 0x69, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x54, 0x0a,
	0x0a, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x70, 0x69, 0x12, 0x46, 0x0a, 0x13, 0x75,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13,
	0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x30, 0x0a,
	0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x6c, 0x6f, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x6f, 0x67,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x22,
	0x5b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd5, 0x03, 0x0a,
	0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x65,
	0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x78, 0x74, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2e, 0x0a,
	0x12, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d,
	0x73, 0x65, 0x63, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x25, 0x0a,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0x42, 0x0a, 0x0c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x8f, 0x02, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x50, 0x6c, 0x75, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x11,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x61, 0x67, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50,
	0x6c, 0x75, 0x73, 0x54, 0x61, 0x67, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x0b, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22,
	0x97, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x99, 0x02, 0x0a, 0x0e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x56, 0x32, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x34, 0x0a,
	0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x55,
	0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x42, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xf8, 0x02, 0x0a, 0x12, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x4a, 0x0a, 0x0e,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x5c,
	0x0a, 0x14, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x14, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x1a, 0x2c, 0x0a, 0x0e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x1a, 0x38, 0x0a, 0x14, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x16, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x48, 0x0a,
	0x14, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x61, 0x0a, 0x15, 0x54, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x22, 0x68, 0x0a, 0x0a, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3c, 0x0a, 0x19, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x57, 0x0a, 0x15, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0xba, 0x01,
	0x0a, 0x19, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x13, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75,
	0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11,
	0x67, 0x63, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x63, 0x6d, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1a, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xd6, 0x05, 0x0a, 0x15, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x69,
	0x72, 0x65, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x74, 0x61, 0x43,
	0x65, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x74, 0x61, 0x43, 0x65,
	0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x73, 0x6e, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x73, 0x6e, 0x12, 0x4b, 0x0a, 0x13, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb0, 0x03, 0x0a, 0x16,
	0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4f, 0x6b,
	0x12, 0x2b, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x44, 0x69, 0x66, 0x66, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x44, 0x69,
	0x66, 0x66, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x44, 0x0a, 0x1d, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3c,
	0x0a, 0x10, 0x47, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa5, 0x03, 0x0a,
	0x11, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75,
	0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6f, 0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x65, 0x64, 0x22, 0xe7, 0x02, 0x0a, 0x13, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x0a, 0x05,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x4d, 0x73, 0x65, 0x63,
	0x12, 0x28, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x73, 0x74,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x65, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x69, 0x6d, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x57,
	0x0a, 0x11, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x4d, 0x73, 0x65, 0x63, 0x22, 0xe4, 0x01, 0x0a, 0x12, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x69,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6a, 0x61, 0x76, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6a, 0x61, 0x76, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x19, 0x2e, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x31, 0x0a, 0x05, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x51,
	0x0a, 0x15, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x73, 0x75,
	0x6d, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x72, 0x70,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64,
	0x65, 0x53, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x49, 0x64, 0x22, 0xc0, 0x02, 0x0a, 0x15, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x52, 0x0a, 0x17, 0x6b, 0x65, 0x79, 0x54, 0x6f, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4b, 0x65, 0x79, 0x54, 0x6f, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x17, 0x6b, 0x65, 0x79, 0x54, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x13, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x52, 0x13, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x43, 0x0a, 0x12, 0x69, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x49, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x12, 0x69, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x17, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x09, 0x41,
	0x70, 0x70, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73,
	0x65, 0x63, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73,
	0x65, 0x63, 0x12, 0x31, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d, 0x0a,
	0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x90, 0x01, 0x0a,
	0x0e, 0x49, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x26, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x12, 0x36, 0x0a, 0x10, 0x69, 0x70, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x70, 0x70, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x70, 0x70, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x10, 0x69,
	0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x70, 0x70, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22,
	0xd9, 0x01, 0x0a, 0x14, 0x49, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73,
	0x65, 0x63, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73,
	0x65, 0x63, 0x12, 0x31, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd4, 0x01, 0x0a, 0x12,
	0x49, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x49,
	0x0a, 0x14, 0x69, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x49,
	0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x14, 0x69, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x0e, 0x69, 0x70, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x49, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x70, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x0e, 0x69, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x70, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x17, 0x4b, 0x65, 0x79, 0x54, 0x6f, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x69, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x69, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x11, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6b, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6b, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x9f, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x12,
	0x40, 0x0a, 0x15, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x41,
	0x70, 0x70, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x41, 0x70, 0x70, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x15, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x67, 0x42, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x66, 0x67, 0x42, 0x67, 0x22, 0x50, 0x0a, 0x18, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x14, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x11, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x14,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x14, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4b, 0x0a, 0x15, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x15, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x31, 0x12, 0x4b, 0x0a,
	0x15, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x15, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x49, 0x6e, 0x74, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x49, 0x6e, 0x74, 0x33, 0x22, 0x7c, 0x0a, 0x14,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x49, 0x6e, 0x74, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x49, 0x6e, 0x74, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x49, 0x6e, 0x74, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x49, 0x6e, 0x74, 0x33, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x34, 0x74, 0x68, 0x65, 0x6c, 0x30, 0x30,
	0x7a, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2d, 0x70, 0x6c, 0x61, 0x79, 0x3b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79,
}

var (
	file_google_proto_rawDescOnce sync.Once
	file_google_proto_rawDescData = file_google_proto_rawDesc
)

func file_google_proto_rawDescGZIP() []byte {
	file_google_proto_rawDescOnce.Do(func() {
		file_google_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_proto_rawDescData)
	})
	return file_google_proto_rawDescData
}

var file_google_proto_msgTypes = make([]protoimpl.MessageInfo, 184)
var file_google_proto_goTypes = []interface{}{
	(*AndroidAppDeliveryData)(nil),                        // 0: AndroidAppDeliveryData
	(*Split)(nil),                                         // 1: Splits
	(*AndroidAppPatchData)(nil),                           // 2: AndroidAppPatchData
	(*AppFileMetadata)(nil),                               // 3: AppFileMetadata
	(*EncryptionParams)(nil),                              // 4: EncryptionParams
	(*HttpCookie)(nil),                                    // 5: HttpCookie
	(*Address)(nil),                                       // 6: Address
	(*BookAuthor)(nil),                                    // 7: BookAuthor
	(*BookDetails)(nil),                                   // 8: BookDetails
	(*BookSubject)(nil),                                   // 9: BookSubject
	(*BrowseLink)(nil),                                    // 10: BrowseLink
	(*UnknownCategoryContainer)(nil),                      // 11: UnknownCategoryContainer
	(*CategoryIdContainer)(nil),                           // 12: CategoryIdContainer
	(*BrowseResponse)(nil),                                // 13: BrowseResponse
	(*CategoryContainer)(nil),                             // 14: CategoryContainer
	(*AddressChallenge)(nil),                              // 15: AddressChallenge
	(*AuthenticationChallenge)(nil),                       // 16: AuthenticationChallenge
	(*BuyResponse)(nil),                                   // 17: BuyResponse
	(*Challenge)(nil),                                     // 18: Challenge
	(*FormCheckbox)(nil),                                  // 19: FormCheckbox
	(*LineItem)(nil),                                      // 20: LineItem
	(*Money)(nil),                                         // 21: Money
	(*PurchaseNotificationResponse)(nil),                  // 22: PurchaseNotificationResponse
	(*PurchaseStatusResponse)(nil),                        // 23: PurchaseStatusResponse
	(*DeliveryResponse)(nil),                              // 24: DeliveryResponse
	(*Docid)(nil),                                         // 25: Docid
	(*Install)(nil),                                       // 26: Install
	(*Offer)(nil),                                         // 27: Offer
	(*OwnershipInfo)(nil),                                 // 28: OwnershipInfo
	(*RentalTerms)(nil),                                   // 29: RentalTerms
	(*SubscriptionTerms)(nil),                             // 30: SubscriptionTerms
	(*TimePeriod)(nil),                                    // 31: TimePeriod
	(*BillingAddressSpec)(nil),                            // 32: BillingAddressSpec
	(*CarrierBillingCredentials)(nil),                     // 33: CarrierBillingCredentials
	(*CarrierBillingInstrument)(nil),                      // 34: CarrierBillingInstrument
	(*CarrierBillingInstrumentStatus)(nil),                // 35: CarrierBillingInstrumentStatus
	(*CarrierTos)(nil),                                    // 36: CarrierTos
	(*CarrierTosEntry)(nil),                               // 37: CarrierTosEntry
	(*CreditCardInstrument)(nil),                          // 38: CreditCardInstrument
	(*EfeParam)(nil),                                      // 39: EfeParam
	(*InputValidationError)(nil),                          // 40: InputValidationError
	(*Instrument)(nil),                                    // 41: Instrument
	(*PasswordPrompt)(nil),                                // 42: PasswordPrompt
	(*ContainerMetadata)(nil),                             // 43: ContainerMetadata
	(*DebugInfo)(nil),                                     // 44: DebugInfo
	(*BulkDetailsEntry)(nil),                              // 45: BulkDetailsEntry
	(*BulkDetailsRequest)(nil),                            // 46: BulkDetailsRequest
	(*BulkDetailsResponse)(nil),                           // 47: BulkDetailsResponse
	(*DetailsResponse)(nil),                               // 48: DetailsResponse
	(*Badge)(nil),                                         // 49: Badge
	(*BadgeContainer1)(nil),                               // 50: BadgeContainer1
	(*BadgeContainer2)(nil),                               // 51: BadgeContainer2
	(*BadgeLinkContainer)(nil),                            // 52: BadgeLinkContainer
	(*Features)(nil),                                      // 53: Features
	(*Feature)(nil),                                       // 54: Feature
	(*DeviceConfigurationProto)(nil),                      // 55: DeviceConfigurationProto
	(*Document)(nil),                                      // 56: Document
	(*DocumentVariant)(nil),                               // 57: DocumentVariant
	(*Image)(nil),                                         // 58: Image
	(*TranslatedText)(nil),                                // 59: TranslatedText
	(*PlusOneData)(nil),                                   // 60: PlusOneData
	(*PlusPerson)(nil),                                    // 61: PlusPerson
	(*AlbumDetails)(nil),                                  // 62: AlbumDetails
	(*AppDetails)(nil),                                    // 63: AppDetails
	(*Dependencies)(nil),                                  // 64: Dependencies
	(*Dependency)(nil),                                    // 65: Dependency
	(*TestingProgramInfo)(nil),                            // 66: TestingProgramInfo
	(*EarlyAccessInfo)(nil),                               // 67: EarlyAccessInfo
	(*ArtistDetails)(nil),                                 // 68: ArtistDetails
	(*ArtistExternalLinks)(nil),                           // 69: ArtistExternalLinks
	(*DocumentDetails)(nil),                               // 70: DocumentDetails
	(*FileMetadata)(nil),                                  // 71: FileMetadata
	(*MagazineDetails)(nil),                               // 72: MagazineDetails
	(*MusicDetails)(nil),                                  // 73: MusicDetails
	(*SongDetails)(nil),                                   // 74: SongDetails
	(*SubscriptionDetails)(nil),                           // 75: SubscriptionDetails
	(*Trailer)(nil),                                       // 76: Trailer
	(*TvEpisodeDetails)(nil),                              // 77: TvEpisodeDetails
	(*TvSeasonDetails)(nil),                               // 78: TvSeasonDetails
	(*TvShowDetails)(nil),                                 // 79: TvShowDetails
	(*VideoCredit)(nil),                                   // 80: VideoCredit
	(*VideoDetails)(nil),                                  // 81: VideoDetails
	(*VideoRentalTerm)(nil),                               // 82: VideoRentalTerm
	(*Bucket)(nil),                                        // 83: Bucket
	(*ListResponse)(nil),                                  // 84: ListResponse
	(*DocV1)(nil),                                         // 85: DocV1
	(*DocV2)(nil),                                         // 86: DocV2
	(*Unknown25)(nil),                                     // 87: Unknown25
	(*Unknown25Item)(nil),                                 // 88: Unknown25Item
	(*Unknown25Container)(nil),                            // 89: Unknown25Container
	(*RelatedLinks)(nil),                                  // 90: RelatedLinks
	(*RelatedLinksUnknown1)(nil),                          // 91: RelatedLinksUnknown1
	(*RelatedLinksUnknown2)(nil),                          // 92: RelatedLinksUnknown2
	(*Rated)(nil),                                         // 93: Rated
	(*RelatedLink)(nil),                                   // 94: RelatedLink
	(*CategoryInfo)(nil),                                  // 95: CategoryInfo
	(*EncryptedSubscriberInfo)(nil),                       // 96: EncryptedSubscriberInfo
	(*Availability)(nil),                                  // 97: Availability
	(*FilterEvaluationInfo)(nil),                          // 98: FilterEvaluationInfo
	(*Rule)(nil),                                          // 99: Rule
	(*RuleEvaluation)(nil),                                // 100: RuleEvaluation
	(*LibraryAppDetails)(nil),                             // 101: LibraryAppDetails
	(*LibraryInAppDetails)(nil),                           // 102: LibraryInAppDetails
	(*LibraryMutation)(nil),                               // 103: LibraryMutation
	(*LibrarySubscriptionDetails)(nil),                    // 104: LibrarySubscriptionDetails
	(*LibraryUpdate)(nil),                                 // 105: LibraryUpdate
	(*AndroidAppNotificationData)(nil),                    // 106: AndroidAppNotificationData
	(*InAppNotificationData)(nil),                         // 107: InAppNotificationData
	(*LibraryDirtyData)(nil),                              // 108: LibraryDirtyData
	(*Notification)(nil),                                  // 109: Notification
	(*PurchaseDeclinedData)(nil),                          // 110: PurchaseDeclinedData
	(*PurchaseRemovalData)(nil),                           // 111: PurchaseRemovalData
	(*UserNotificationData)(nil),                          // 112: UserNotificationData
	(*AggregateRating)(nil),                               // 113: AggregateRating
	(*AcceptTosResponse)(nil),                             // 114: AcceptTosResponse
	(*CarrierBillingConfig)(nil),                          // 115: CarrierBillingConfig
	(*BillingConfig)(nil),                                 // 116: BillingConfig
	(*CorpusMetadata)(nil),                                // 117: CorpusMetadata
	(*Experiments)(nil),                                   // 118: Experiments
	(*SelfUpdateConfig)(nil),                              // 119: SelfUpdateConfig
	(*TocResponse)(nil),                                   // 120: TocResponse
	(*Payload)(nil),                                       // 121: Payload
	(*PreFetch)(nil),                                      // 122: PreFetch
	(*ServerMetadata)(nil),                                // 123: ServerMetadata
	(*Targets)(nil),                                       // 124: Targets
	(*ServerCookie)(nil),                                  // 125: ServerCookie
	(*ServerCookies)(nil),                                 // 126: ServerCookies
	(*ResponseWrapper)(nil),                               // 127: ResponseWrapper
	(*ResponseWrapperApi)(nil),                            // 128: ResponseWrapperApi
	(*PayloadApi)(nil),                                    // 129: PayloadApi
	(*UserProfileResponse)(nil),                           // 130: UserProfileResponse
	(*ServerCommands)(nil),                                // 131: ServerCommands
	(*GetReviewsResponse)(nil),                            // 132: GetReviewsResponse
	(*Review)(nil),                                        // 133: Review
	(*ReviewAuthor)(nil),                                  // 134: ReviewAuthor
	(*UserProfile)(nil),                                   // 135: UserProfile
	(*ReviewResponse)(nil),                                // 136: ReviewResponse
	(*RelatedSearch)(nil),                                 // 137: RelatedSearch
	(*SearchResponse)(nil),                                // 138: SearchResponse
	(*SearchSuggestResponse)(nil),                         // 139: SearchSuggestResponse
	(*SearchSuggestEntry)(nil),                            // 140: SearchSuggestEntry
	(*TestingProgramResponse)(nil),                        // 141: TestingProgramResponse
	(*TestingProgramResult)(nil),                          // 142: TestingProgramResult
	(*TestingProgramDetails)(nil),                         // 143: TestingProgramDetails
	(*LogRequest)(nil),                                    // 144: LogRequest
	(*TestingProgramRequest)(nil),                         // 145: TestingProgramRequest
	(*UploadDeviceConfigRequest)(nil),                     // 146: UploadDeviceConfigRequest
	(*UploadDeviceConfigResponse)(nil),                    // 147: UploadDeviceConfigResponse
	(*AndroidCheckinRequest)(nil),                         // 148: AndroidCheckinRequest
	(*AndroidCheckinResponse)(nil),                        // 149: AndroidCheckinResponse
	(*GservicesSetting)(nil),                              // 150: GservicesSetting
	(*AndroidBuildProto)(nil),                             // 151: AndroidBuildProto
	(*AndroidCheckinProto)(nil),                           // 152: AndroidCheckinProto
	(*AndroidEventProto)(nil),                             // 153: AndroidEventProto
	(*AndroidIntentProto)(nil),                            // 154: AndroidIntentProto
	(*AndroidStatisticProto)(nil),                         // 155: AndroidStatisticProto
	(*ClientLibraryState)(nil),                            // 156: ClientLibraryState
	(*AndroidDataUsageProto)(nil),                         // 157: AndroidDataUsageProto
	(*AndroidUsageStatsReport)(nil),                       // 158: AndroidUsageStatsReport
	(*AppBucket)(nil),                                     // 159: AppBucket
	(*CounterData)(nil),                                   // 160: CounterData
	(*IpLayerAppStat)(nil),                                // 161: IpLayerAppStat
	(*IpLayerNetworkBucket)(nil),                          // 162: IpLayerNetworkBucket
	(*IpLayerNetworkStat)(nil),                            // 163: IpLayerNetworkStat
	(*KeyToPackageNameMapping)(nil),                       // 164: KeyToPackageNameMapping
	(*PackageInfo)(nil),                                   // 165: PackageInfo
	(*PayloadLevelAppStat)(nil),                           // 166: PayloadLevelAppStat
	(*StatCounters)(nil),                                  // 167: StatCounters
	(*UsageStatsExtensionProto)(nil),                      // 168: UsageStatsExtensionProto
	(*ModifyLibraryRequest)(nil),                          // 169: ModifyLibraryRequest
	(*UrlRequestWrapper)(nil),                             // 170: UrlRequestWrapper
	(*DeveloperAppsRequest)(nil),                          // 171: DeveloperAppsRequest
	(*DeveloperIdContainer)(nil),                          // 172: DeveloperIdContainer
	(*BookDetails_Identifier)(nil),                        // 173: BookDetails.Identifier
	(*BuyResponse_CheckoutInfo)(nil),                      // 174: BuyResponse.CheckoutInfo
	(*BuyResponse_CheckoutInfo_CheckoutOption)(nil),       // 175: BuyResponse.CheckoutInfo.CheckoutOption
	(*DebugInfo_Timing)(nil),                              // 176: DebugInfo.Timing
	(*Image_Dimension)(nil),                               // 177: Image.Dimension
	(*Image_Citation)(nil),                                // 178: Image.Citation
	(*VideoRentalTerm_Term)(nil),                          // 179: VideoRentalTerm.Term
	(*Availability_PerDeviceAvailabilityRestriction)(nil), // 180: Availability.PerDeviceAvailabilityRestriction
	(*SearchSuggestEntry_ImageContainer)(nil),             // 181: SearchSuggestEntry.ImageContainer
	(*SearchSuggestEntry_PackageNameContainer)(nil),       // 182: SearchSuggestEntry.PackageNameContainer
	(*AndroidIntentProto_Extra)(nil),                      // 183: AndroidIntentProto.Extra
}
var file_google_proto_depIdxs = []int32{
	3,   // 0: AndroidAppDeliveryData.additionalFile:type_name -> AppFileMetadata
	5,   // 1: AndroidAppDeliveryData.downloadAuthCookie:type_name -> HttpCookie
	2,   // 2: AndroidAppDeliveryData.patchData:type_name -> AndroidAppPatchData
	4,   // 3: AndroidAppDeliveryData.encryptionParams:type_name -> EncryptionParams
	1,   // 4: AndroidAppDeliveryData.split:type_name -> Splits
	25,  // 5: BookAuthor.docid:type_name -> Docid
	9,   // 6: BookDetails.subject:type_name -> BookSubject
	7,   // 7: BookDetails.author:type_name -> BookAuthor
	173, // 8: BookDetails.identifier:type_name -> BookDetails.Identifier
	58,  // 9: BrowseLink.icon:type_name -> Image
	11,  // 10: BrowseLink.unknownCategoryContainer:type_name -> UnknownCategoryContainer
	12,  // 11: UnknownCategoryContainer.categoryIdContainer:type_name -> CategoryIdContainer
	10,  // 12: BrowseResponse.category:type_name -> BrowseLink
	10,  // 13: BrowseResponse.breadcrumb:type_name -> BrowseLink
	14,  // 14: BrowseResponse.categoryContainer:type_name -> CategoryContainer
	10,  // 15: CategoryContainer.category:type_name -> BrowseLink
	19,  // 16: AddressChallenge.checkbox:type_name -> FormCheckbox
	6,   // 17: AddressChallenge.address:type_name -> Address
	40,  // 18: AddressChallenge.errorInputField:type_name -> InputValidationError
	22,  // 19: BuyResponse.purchaseResponse:type_name -> PurchaseNotificationResponse
	174, // 20: BuyResponse.checkoutinfo:type_name -> BuyResponse.CheckoutInfo
	23,  // 21: BuyResponse.purchaseStatusResponse:type_name -> PurchaseStatusResponse
	18,  // 22: BuyResponse.challenge:type_name -> Challenge
	15,  // 23: Challenge.addressChallenge:type_name -> AddressChallenge
	16,  // 24: Challenge.authenticationChallenge:type_name -> AuthenticationChallenge
	27,  // 25: LineItem.offer:type_name -> Offer
	21,  // 26: LineItem.amount:type_name -> Money
	44,  // 27: PurchaseNotificationResponse.debugInfo:type_name -> DebugInfo
	105, // 28: PurchaseStatusResponse.libraryUpdate:type_name -> LibraryUpdate
	41,  // 29: PurchaseStatusResponse.rejectedInstrument:type_name -> Instrument
	0,   // 30: PurchaseStatusResponse.appDeliveryData:type_name -> AndroidAppDeliveryData
	0,   // 31: DeliveryResponse.appDeliveryData:type_name -> AndroidAppDeliveryData
	27,  // 32: Offer.convertedPrice:type_name -> Offer
	29,  // 33: Offer.rentalTerms:type_name -> RentalTerms
	30,  // 34: Offer.subscriptionTerms:type_name -> SubscriptionTerms
	31,  // 35: SubscriptionTerms.recurringPeriod:type_name -> TimePeriod
	31,  // 36: SubscriptionTerms.trialPeriod:type_name -> TimePeriod
	96,  // 37: CarrierBillingInstrument.encryptedSubscriberInfo:type_name -> EncryptedSubscriberInfo
	33,  // 38: CarrierBillingInstrument.credentials:type_name -> CarrierBillingCredentials
	36,  // 39: CarrierBillingInstrument.acceptedCarrierTos:type_name -> CarrierTos
	36,  // 40: CarrierBillingInstrumentStatus.carrierTos:type_name -> CarrierTos
	42,  // 41: CarrierBillingInstrumentStatus.carrierPasswordPrompt:type_name -> PasswordPrompt
	37,  // 42: CarrierTos.dcbTos:type_name -> CarrierTosEntry
	37,  // 43: CarrierTos.piiTos:type_name -> CarrierTosEntry
	39,  // 44: CreditCardInstrument.escrowEfeParam:type_name -> EfeParam
	6,   // 45: Instrument.billingAddress:type_name -> Address
	38,  // 46: Instrument.creditCard:type_name -> CreditCardInstrument
	34,  // 47: Instrument.carrierBilling:type_name -> CarrierBillingInstrument
	32,  // 48: Instrument.billingAddressSpec:type_name -> BillingAddressSpec
	35,  // 49: Instrument.carrierBillingStatus:type_name -> CarrierBillingInstrumentStatus
	176, // 50: DebugInfo.timing:type_name -> DebugInfo.Timing
	86,  // 51: BulkDetailsEntry.doc:type_name -> DocV2
	45,  // 52: BulkDetailsResponse.entry:type_name -> BulkDetailsEntry
	85,  // 53: DetailsResponse.docV1:type_name -> DocV1
	133, // 54: DetailsResponse.userReview:type_name -> Review
	86,  // 55: DetailsResponse.docV2:type_name -> DocV2
	49,  // 56: DetailsResponse.badge:type_name -> Badge
	53,  // 57: DetailsResponse.features:type_name -> Features
	58,  // 58: Badge.image:type_name -> Image
	50,  // 59: Badge.badgeContainer1:type_name -> BadgeContainer1
	51,  // 60: BadgeContainer1.badgeContainer2:type_name -> BadgeContainer2
	52,  // 61: BadgeContainer2.badgeLinkContainer:type_name -> BadgeLinkContainer
	54,  // 62: Features.featurePresence:type_name -> Feature
	54,  // 63: Features.featureRating:type_name -> Feature
	25,  // 64: Document.docid:type_name -> Docid
	25,  // 65: Document.fetchDocid:type_name -> Docid
	25,  // 66: Document.sampleDocid:type_name -> Docid
	27,  // 67: Document.priceDeprecated:type_name -> Offer
	97,  // 68: Document.availability:type_name -> Availability
	58,  // 69: Document.image:type_name -> Image
	56,  // 70: Document.child:type_name -> Document
	113, // 71: Document.aggregateRating:type_name -> AggregateRating
	27,  // 72: Document.offer:type_name -> Offer
	59,  // 73: Document.translatedSnippet:type_name -> TranslatedText
	57,  // 74: Document.documentVariant:type_name -> DocumentVariant
	56,  // 75: Document.decoration:type_name -> Document
	56,  // 76: Document.parent:type_name -> Document
	99,  // 77: DocumentVariant.rule:type_name -> Rule
	59,  // 78: DocumentVariant.autoTranslation:type_name -> TranslatedText
	27,  // 79: DocumentVariant.offer:type_name -> Offer
	56,  // 80: DocumentVariant.child:type_name -> Document
	56,  // 81: DocumentVariant.decoration:type_name -> Document
	177, // 82: Image.dimension:type_name -> Image.Dimension
	178, // 83: Image.citation:type_name -> Image.Citation
	61,  // 84: PlusOneData.circlesPeople:type_name -> PlusPerson
	73,  // 85: AlbumDetails.details:type_name -> MusicDetails
	68,  // 86: AlbumDetails.displayArtist:type_name -> ArtistDetails
	71,  // 87: AppDetails.file:type_name -> FileMetadata
	64,  // 88: AppDetails.dependencies:type_name -> Dependencies
	66,  // 89: AppDetails.testingProgramInfo:type_name -> TestingProgramInfo
	67,  // 90: AppDetails.earlyAccessInfo:type_name -> EarlyAccessInfo
	65,  // 91: Dependencies.dependency:type_name -> Dependency
	69,  // 92: ArtistDetails.externalLinks:type_name -> ArtistExternalLinks
	63,  // 93: DocumentDetails.appDetails:type_name -> AppDetails
	62,  // 94: DocumentDetails.albumDetails:type_name -> AlbumDetails
	68,  // 95: DocumentDetails.artistDetails:type_name -> ArtistDetails
	74,  // 96: DocumentDetails.songDetails:type_name -> SongDetails
	8,   // 97: DocumentDetails.bookDetails:type_name -> BookDetails
	81,  // 98: DocumentDetails.videoDetails:type_name -> VideoDetails
	75,  // 99: DocumentDetails.subscriptionDetails:type_name -> SubscriptionDetails
	72,  // 100: DocumentDetails.magazineDetails:type_name -> MagazineDetails
	79,  // 101: DocumentDetails.tvShowDetails:type_name -> TvShowDetails
	78,  // 102: DocumentDetails.tvSeasonDetails:type_name -> TvSeasonDetails
	77,  // 103: DocumentDetails.tvEpisodeDetails:type_name -> TvEpisodeDetails
	68,  // 104: MusicDetails.artist:type_name -> ArtistDetails
	73,  // 105: SongDetails.details:type_name -> MusicDetails
	68,  // 106: SongDetails.displayArtist:type_name -> ArtistDetails
	80,  // 107: VideoDetails.credit:type_name -> VideoCredit
	76,  // 108: VideoDetails.trailer:type_name -> Trailer
	82,  // 109: VideoDetails.rentalTerm:type_name -> VideoRentalTerm
	179, // 110: VideoRentalTerm.term:type_name -> VideoRentalTerm.Term
	85,  // 111: Bucket.document:type_name -> DocV1
	83,  // 112: ListResponse.bucket:type_name -> Bucket
	86,  // 113: ListResponse.doc:type_name -> DocV2
	56,  // 114: DocV1.finskyDoc:type_name -> Document
	70,  // 115: DocV1.details:type_name -> DocumentDetails
	60,  // 116: DocV1.plusOneData:type_name -> PlusOneData
	27,  // 117: DocV2.offer:type_name -> Offer
	97,  // 118: DocV2.availability:type_name -> Availability
	58,  // 119: DocV2.image:type_name -> Image
	86,  // 120: DocV2.child:type_name -> DocV2
	43,  // 121: DocV2.containerMetadata:type_name -> ContainerMetadata
	70,  // 122: DocV2.details:type_name -> DocumentDetails
	113, // 123: DocV2.aggregateRating:type_name -> AggregateRating
	90,  // 124: DocV2.relatedLinks:type_name -> RelatedLinks
	11,  // 125: DocV2.unknownCategoryContainer:type_name -> UnknownCategoryContainer
	87,  // 126: DocV2.unknown25:type_name -> Unknown25
	88,  // 127: Unknown25.item:type_name -> Unknown25Item
	89,  // 128: Unknown25Item.container:type_name -> Unknown25Container
	91,  // 129: RelatedLinks.unknown1:type_name -> RelatedLinksUnknown1
	94,  // 130: RelatedLinks.youMightAlsoLike:type_name -> RelatedLink
	93,  // 131: RelatedLinks.rated:type_name -> Rated
	94,  // 132: RelatedLinks.relatedLinks:type_name -> RelatedLink
	95,  // 133: RelatedLinks.categoryInfo:type_name -> CategoryInfo
	92,  // 134: RelatedLinksUnknown1.unknown2:type_name -> RelatedLinksUnknown2
	58,  // 135: Rated.image:type_name -> Image
	99,  // 136: Availability.rule:type_name -> Rule
	180, // 137: Availability.perdeviceavailabilityrestriction:type_name -> Availability.PerDeviceAvailabilityRestriction
	26,  // 138: Availability.install:type_name -> Install
	98,  // 139: Availability.filterInfo:type_name -> FilterEvaluationInfo
	28,  // 140: Availability.ownershipInfo:type_name -> OwnershipInfo
	100, // 141: FilterEvaluationInfo.ruleEvaluation:type_name -> RuleEvaluation
	99,  // 142: Rule.subrule:type_name -> Rule
	99,  // 143: RuleEvaluation.rule:type_name -> Rule
	25,  // 144: LibraryMutation.docid:type_name -> Docid
	101, // 145: LibraryMutation.appDetails:type_name -> LibraryAppDetails
	104, // 146: LibraryMutation.subscriptionDetails:type_name -> LibrarySubscriptionDetails
	102, // 147: LibraryMutation.inAppDetails:type_name -> LibraryInAppDetails
	103, // 148: LibraryUpdate.mutation:type_name -> LibraryMutation
	25,  // 149: Notification.docid:type_name -> Docid
	106, // 150: Notification.appData:type_name -> AndroidAppNotificationData
	0,   // 151: Notification.appDeliveryData:type_name -> AndroidAppDeliveryData
	111, // 152: Notification.purchaseRemovalData:type_name -> PurchaseRemovalData
	112, // 153: Notification.userNotificationData:type_name -> UserNotificationData
	107, // 154: Notification.inAppNotificationData:type_name -> InAppNotificationData
	110, // 155: Notification.purchaseDeclinedData:type_name -> PurchaseDeclinedData
	105, // 156: Notification.libraryUpdate:type_name -> LibraryUpdate
	108, // 157: Notification.libraryDirtyData:type_name -> LibraryDirtyData
	115, // 158: BillingConfig.carrierBillingConfig:type_name -> CarrierBillingConfig
	117, // 159: TocResponse.corpus:type_name -> CorpusMetadata
	118, // 160: TocResponse.experiments:type_name -> Experiments
	119, // 161: TocResponse.selfUpdateConfig:type_name -> SelfUpdateConfig
	116, // 162: TocResponse.billingConfig:type_name -> BillingConfig
	84,  // 163: Payload.listResponse:type_name -> ListResponse
	48,  // 164: Payload.detailsResponse:type_name -> DetailsResponse
	136, // 165: Payload.reviewResponse:type_name -> ReviewResponse
	17,  // 166: Payload.buyResponse:type_name -> BuyResponse
	138, // 167: Payload.searchResponse:type_name -> SearchResponse
	120, // 168: Payload.tocResponse:type_name -> TocResponse
	13,  // 169: Payload.browseResponse:type_name -> BrowseResponse
	23,  // 170: Payload.purchaseStatusResponse:type_name -> PurchaseStatusResponse
	47,  // 171: Payload.bulkDetailsResponse:type_name -> BulkDetailsResponse
	24,  // 172: Payload.deliveryResponse:type_name -> DeliveryResponse
	114, // 173: Payload.acceptTosResponse:type_name -> AcceptTosResponse
	149, // 174: Payload.androidCheckinResponse:type_name -> AndroidCheckinResponse
	147, // 175: Payload.uploadDeviceConfigResponse:type_name -> UploadDeviceConfigResponse
	139, // 176: Payload.searchSuggestResponse:type_name -> SearchSuggestResponse
	141, // 177: Payload.testingProgramResponse:type_name -> TestingProgramResponse
	127, // 178: PreFetch.response:type_name -> ResponseWrapper
	125, // 179: ServerCookies.serverCookie:type_name -> ServerCookie
	121, // 180: ResponseWrapper.payload:type_name -> Payload
	131, // 181: ResponseWrapper.commands:type_name -> ServerCommands
	122, // 182: ResponseWrapper.preFetch:type_name -> PreFetch
	109, // 183: ResponseWrapper.notification:type_name -> Notification
	123, // 184: ResponseWrapper.serverMetadata:type_name -> ServerMetadata
	124, // 185: ResponseWrapper.targets:type_name -> Targets
	126, // 186: ResponseWrapper.serverCookies:type_name -> ServerCookies
	129, // 187: ResponseWrapperApi.payload:type_name -> PayloadApi
	130, // 188: PayloadApi.userProfileResponse:type_name -> UserProfileResponse
	135, // 189: UserProfileResponse.userProfile:type_name -> UserProfile
	133, // 190: GetReviewsResponse.review:type_name -> Review
	134, // 191: Review.author:type_name -> ReviewAuthor
	135, // 192: Review.userProfile:type_name -> UserProfile
	58,  // 193: ReviewAuthor.avatar:type_name -> Image
	58,  // 194: UserProfile.image:type_name -> Image
	132, // 195: ReviewResponse.getResponse:type_name -> GetReviewsResponse
	133, // 196: ReviewResponse.userReview:type_name -> Review
	83,  // 197: SearchResponse.bucket:type_name -> Bucket
	86,  // 198: SearchResponse.doc:type_name -> DocV2
	137, // 199: SearchResponse.relatedSearch:type_name -> RelatedSearch
	140, // 200: SearchSuggestResponse.entry:type_name -> SearchSuggestEntry
	181, // 201: SearchSuggestEntry.imageContainer:type_name -> SearchSuggestEntry.ImageContainer
	182, // 202: SearchSuggestEntry.packageNameContainer:type_name -> SearchSuggestEntry.PackageNameContainer
	142, // 203: TestingProgramResponse.result:type_name -> TestingProgramResult
	143, // 204: TestingProgramResult.details:type_name -> TestingProgramDetails
	55,  // 205: UploadDeviceConfigRequest.deviceConfiguration:type_name -> DeviceConfigurationProto
	152, // 206: AndroidCheckinRequest.checkin:type_name -> AndroidCheckinProto
	55,  // 207: AndroidCheckinRequest.deviceConfiguration:type_name -> DeviceConfigurationProto
	154, // 208: AndroidCheckinResponse.intent:type_name -> AndroidIntentProto
	150, // 209: AndroidCheckinResponse.setting:type_name -> GservicesSetting
	151, // 210: AndroidCheckinProto.build:type_name -> AndroidBuildProto
	153, // 211: AndroidCheckinProto.event:type_name -> AndroidEventProto
	155, // 212: AndroidCheckinProto.stat:type_name -> AndroidStatisticProto
	183, // 213: AndroidIntentProto.extra:type_name -> AndroidIntentProto.Extra
	164, // 214: AndroidDataUsageProto.keyToPackageNameMapping:type_name -> KeyToPackageNameMapping
	166, // 215: AndroidDataUsageProto.payloadLevelAppStat:type_name -> PayloadLevelAppStat
	163, // 216: AndroidDataUsageProto.ipLayerNetworkStat:type_name -> IpLayerNetworkStat
	168, // 217: AndroidUsageStatsReport.usageStats:type_name -> UsageStatsExtensionProto
	167, // 218: AppBucket.statCounters:type_name -> StatCounters
	159, // 219: IpLayerAppStat.ipLayerAppBucket:type_name -> AppBucket
	167, // 220: IpLayerNetworkBucket.statCounters:type_name -> StatCounters
	162, // 221: IpLayerNetworkStat.ipLayerNetworkBucket:type_name -> IpLayerNetworkBucket
	161, // 222: IpLayerNetworkStat.ipLayerAppStat:type_name -> IpLayerAppStat
	165, // 223: KeyToPackageNameMapping.sharedPackageList:type_name -> PackageInfo
	159, // 224: PayloadLevelAppStat.payloadLevelAppBucket:type_name -> AppBucket
	160, // 225: StatCounters.counterData:type_name -> CounterData
	157, // 226: UsageStatsExtensionProto.dataUsage:type_name -> AndroidDataUsageProto
	171, // 227: UrlRequestWrapper.developerAppsRequest:type_name -> DeveloperAppsRequest
	172, // 228: DeveloperAppsRequest.developerIdContainer1:type_name -> DeveloperIdContainer
	172, // 229: DeveloperAppsRequest.developerIdContainer2:type_name -> DeveloperIdContainer
	20,  // 230: BuyResponse.CheckoutInfo.item:type_name -> LineItem
	20,  // 231: BuyResponse.CheckoutInfo.subItem:type_name -> LineItem
	175, // 232: BuyResponse.CheckoutInfo.checkoutoption:type_name -> BuyResponse.CheckoutInfo.CheckoutOption
	41,  // 233: BuyResponse.CheckoutInfo.eligibleInstrument:type_name -> Instrument
	20,  // 234: BuyResponse.CheckoutInfo.CheckoutOption.item:type_name -> LineItem
	20,  // 235: BuyResponse.CheckoutInfo.CheckoutOption.subItem:type_name -> LineItem
	20,  // 236: BuyResponse.CheckoutInfo.CheckoutOption.total:type_name -> LineItem
	20,  // 237: BuyResponse.CheckoutInfo.CheckoutOption.summary:type_name -> LineItem
	41,  // 238: BuyResponse.CheckoutInfo.CheckoutOption.instrument:type_name -> Instrument
	98,  // 239: Availability.PerDeviceAvailabilityRestriction.filterInfo:type_name -> FilterEvaluationInfo
	240, // [240:240] is the sub-list for method output_type
	240, // [240:240] is the sub-list for method input_type
	240, // [240:240] is the sub-list for extension type_name
	240, // [240:240] is the sub-list for extension extendee
	0,   // [0:240] is the sub-list for field type_name
}

func init() { file_google_proto_init() }
func file_google_proto_init() {
	if File_google_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_google_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidAppDeliveryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Split); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidAppPatchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppFileMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpCookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnknownCategoryContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryIdContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Challenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormCheckbox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Money); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Docid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Install); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Offer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnershipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RentalTerms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionTerms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimePeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingAddressSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarrierBillingCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarrierBillingInstrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarrierBillingInstrumentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarrierTos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarrierTosEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditCardInstrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EfeParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputValidationError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordPrompt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkDetailsEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Badge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadgeContainer1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadgeContainer2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadgeLinkContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Features); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceConfigurationProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentVariant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranslatedText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlusOneData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlusPerson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dependencies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dependency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarlyAccessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistExternalLinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MagazineDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SongDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trailer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TvEpisodeDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TvSeasonDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TvShowDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCredit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoRentalTerm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unknown25); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unknown25Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unknown25Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatedLinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatedLinksUnknown1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatedLinksUnknown2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatedLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptedSubscriberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Availability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterEvaluationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleEvaluation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibraryAppDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibraryInAppDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibraryMutation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibrarySubscriptionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibraryUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidAppNotificationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InAppNotificationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibraryDirtyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseDeclinedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseRemovalData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserNotificationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateRating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptTosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarrierBillingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CorpusMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Experiments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfUpdateConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TocResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreFetch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Targets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCookies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseWrapperApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayloadApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCommands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Review); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatedSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSuggestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSuggestEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDeviceConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDeviceConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidCheckinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidCheckinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GservicesSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidBuildProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidCheckinProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidEventProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidIntentProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidStatisticProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientLibraryState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidDataUsageProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidUsageStatsReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CounterData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpLayerAppStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpLayerNetworkBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpLayerNetworkStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyToPackageNameMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayloadLevelAppStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatCounters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsageStatsExtensionProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLibraryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlRequestWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeveloperAppsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeveloperIdContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookDetails_Identifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResponse_CheckoutInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResponse_CheckoutInfo_CheckoutOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugInfo_Timing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image_Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image_Citation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoRentalTerm_Term); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Availability_PerDeviceAvailabilityRestriction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSuggestEntry_ImageContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSuggestEntry_PackageNameContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidIntentProto_Extra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   184,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_proto_goTypes,
		DependencyIndexes: file_google_proto_depIdxs,
		MessageInfos:      file_google_proto_msgTypes,
	}.Build()
	File_google_proto = out.File
	file_google_proto_rawDesc = nil
	file_google_proto_goTypes = nil
	file_google_proto_depIdxs = nil
}
